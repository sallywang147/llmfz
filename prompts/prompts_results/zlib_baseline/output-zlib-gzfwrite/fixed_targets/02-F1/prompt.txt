Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "zlib.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  const size_t buffer_size = provider.ConsumeIntegralInRange<size_t>(0, 1024);
  std::vector<uint8_t> buffer(buffer_size);
  provider.ConsumeBytes<uint8_t>(buffer.data(), buffer_size);

  gzFile file = gzdopen(0, "wb");
  if (file == nullptr) {
    return 0;
  }

  gzfwrite(buffer.data(), 1, buffer_size, file);
  gzclose(file);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/zlib_uncompress_fuzzer.cc:15:12: error: no matching member function for call to 'ConsumeBytes'
  provider.ConsumeBytes<uint8_t>(buffer.data(), buffer_size);
  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:352:36: note: candidate function template not viable: no known conversion from 'std::vector<unsigned char>::value_type *' (aka 'unsigned char *') to 'size_t' (aka 'unsigned long') for 1st argument; dereference the argument with *
std::vector<T> FuzzedDataProvider::ConsumeBytes(size_t size, size_t num_bytes) {
                                   ^
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:108:36: note: candidate function template not viable: requires single argument 'num_bytes', but 2 arguments were provided
std::vector<T> FuzzedDataProvider::ConsumeBytes(size_t num_bytes) {
                                   ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
