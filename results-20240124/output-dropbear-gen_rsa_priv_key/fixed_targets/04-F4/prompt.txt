Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <openssl/rsa.h>
#include <openssl/pem.h>

extern "C" {
#include <openssl/err.h>
}

int main() {
  RSA *rsa = RSA_generate_key(2048, RSA_F4, NULL, NULL);
  if (!rsa) {
    ERR_print_errors_fp(stderr);
    return 1;
  }

  BIO *bio = BIO_new_file("private.pem", "w");
  if (!bio) {
    ERR_print_errors_fp(stderr);
    return 1;
  }

  PEM_write_bio_RSAPrivateKey(bio, rsa, NULL, NULL, 0, NULL, NULL);
  BIO_free(bio);

  RSA_free(rsa);

  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `struct dropbear_DSS_Key * gen_rsa_priv_key(int size)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `struct dropbear_DSS_Key * gen_rsa_priv_key(int size)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
