Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <stddef.h>
#include <stdint.h>
#include <string.h>
#include <va_list.h>

#include "log.h"

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  struct Log log;
  log.flags = 0;
  log.fd = -1;

  FuzzedDataProvider stream(data, size);
  const char *format = stream.ConsumeRemainingBytesAsString().c_str();
  va_list args;
  va_start(args, format);
  log_vcommitf(&log, (char *)format, &args);
  va_end(args);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fuzz-message.c:4:10: fatal error: 'va_list.h' file not found
#include <va_list.h>
         ^~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
