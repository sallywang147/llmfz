Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include "http_parser.h"

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
{
  FuzzedDataProvider stream(data, size);
  int err_code = stream.ConsumeIntegral<int>();
  char * err_name = http_errno_name(err_code);
  if (err_name != NULL) {
    free(err_name);
  }
  return 0;
}
</code>

The code has the following build issues:
<error>
fuzzers/fuzz_url.c:8:3: error: use of undeclared identifier 'FuzzedDataProvider'
  FuzzedDataProvider stream(data, size);
  ^
fuzzers/fuzz_url.c:9:41: error: expected expression
  int err_code = stream.ConsumeIntegral<int>();
                                        ^
fuzzers/fuzz_url.c:9:18: error: use of undeclared identifier 'stream'
  int err_code = stream.ConsumeIntegral<int>();
                 ^
3 errors generated.

Fix failure
fuzzers/fuzz_url.cpp:8:3: error: unknown type name 'FuzzedDataProvider'
  FuzzedDataProvider stream(data, size);
  ^
fuzzers/fuzz_url.cpp:10:21: error: no matching function for call to 'http_errno_name'
  char * err_name = http_errno_name(err_code);
                    ^~~~~~~~~~~~~~~
./http_parser.h:424:13: note: candidate function not viable: no known conversion from 'int' to 'enum http_errno' for 1st argument
const char *http_errno_name(enum http_errno err);
            ^
fuzzers/fuzz_url.cpp:10:10: error: cannot initialize a variable of type 'char *' with an rvalue of type 'const char *'
  char * err_name = http_errno_name(err_code);
         ^          ~~~~~~~~~~~~~~~~~~~~~~~~~
3 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
