Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <assert.h>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <dwfl.h>

#include <fuzzer/FuzzedDataProvider.h>
#include <string>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  int tid = stream.ConsumeIntegral<int>();
  std::string arg = stream.ConsumeRemainingBytesAsString();
  dwfl_getthread_frames(nullptr, tid, nullptr, const_cast<char*>(arg.c_str()));
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fuzz-libdwfl.c:2:10: fatal error: 'cstddef' file not found
#include <cstddef>
         ^~~~~~~~~
1 error generated.

Fix failure
/src/fuzz-libdwfl.cpp:5:10: fatal error: 'dwfl.h' file not found
#include <dwfl.h>
         ^~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
