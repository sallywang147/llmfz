Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fuzzer/FuzzedDataProvider.h>

extern "C" {
#include <ipp/ipp.h>
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider fdp(data, size);
  char *buffer = (char *)malloc(fdp.ConsumeRemainingBytes<size_t>());
  fdp.ConsumeBytes<size_t>(buffer, fdp.ConsumeRemainingBytes<size_t>());
  struct _ipp_s *supported = ippNew();
  char *ppd = _ppdCreateFromIPP(buffer, fdp.ConsumeRemainingBytes<size_t>(), supported);
  ippDelete(supported);
  free(buffer);
  free(ppd);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
