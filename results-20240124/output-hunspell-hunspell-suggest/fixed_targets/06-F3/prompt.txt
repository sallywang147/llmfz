Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <hunspell/hunspell.hxx>
#include <cstdio>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {
  Hunspell::Dict *dict = Hunspell::Dict::create("/usr/share/hunspell/en_US.dic", "/usr/share/hunspell/en_US.aff");
  char **suggestions;
  int n = dict->suggest(&suggestions, (const char *)Data);
  for (int i = 0; i < n; i++) {
    printf("%s\n", suggestions[i]);
    free(suggestions[i]);
  }
  free(suggestions);
  return 0;
}
</code>

The code has the following build issues:
<error>
./src/tools/fuzzer.cxx:5:13: error: no type named 'Dict' in 'Hunspell'
  Hunspell::Dict *dict = Hunspell::Dict::create("/usr/share/hunspell/en_US.dic", "/usr/share/hunspell/en_US.aff");
  ~~~~~~~~~~^
./src/tools/fuzzer.cxx:5:36: error: no member named 'Dict' in 'Hunspell'
  Hunspell::Dict *dict = Hunspell::Dict::create("/usr/share/hunspell/en_US.dic", "/usr/share/hunspell/en_US.aff");
                         ~~~~~~~~~~^
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
