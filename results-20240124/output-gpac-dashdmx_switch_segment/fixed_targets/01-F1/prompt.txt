Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "dashdmx.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  static bool initialized = false;
  if (!initialized) {
    dashdmx_init();
    initialized = true;
  }

  FuzzedDataProvider provider(data, size);
  struct GF_DASHDmxCtx *ctx = dashdmx_new();
  if (ctx == nullptr) {
    return 0;
  }

  struct GF_DASHGroup *group = dashdmx_new_group(ctx);
  if (group == nullptr) {
    dashdmx_free(ctx);
    return 0;
  }

  dashdmx_switch_segment(ctx, group);

  dashdmx_free_group(group);
  dashdmx_free(ctx);

  return 0;
}
</code>

The code has the following build issues:
<error>
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:16:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
/src/testsuite/oss-fuzzers/fuzz_parse.cpp:9:10: fatal error: 'dashdmx.h' file not found
#include "dashdmx.h"
         ^~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
