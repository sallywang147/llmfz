Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "ares.h"

extern "C" {
#include <ares.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  static bool initialized = false;
  if (!initialized) {
    ares_library_init(ARES_LIB_INIT_ALL);
    initialized = true;
  }

  ares_channel channel;
  ares_channel_create(&channel, NULL, NULL);

  struct sockaddr_in addr;
  memset(&addr, 0, sizeof(addr));
  addr.sin_family = AF_INET;
  addr.sin_addr.s_addr = htonl(0x7F000001);
  addr.sin_port = htons(80);

  std::vector<uint8_t> output_buffer(1024);

  // Fix the issue by calling `ares_getnameinfo_int` instead of `ares_getnameinfo`.
  ares_getnameinfo_int(&channel, reinterpret_cast<struct sockaddr*>(&addr),
                       sizeof(addr), 0, NULL, output_buffer.data());

  ares_destroy(&channel);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/c-ares/test/ares-test-fuzz-name.c:1:10: fatal error: 'cstddef' file not found
#include <cstddef>
         ^~~~~~~~~
1 error generated.

Fix failure
/src/c-ares/test/ares-test-fuzz-name.cpp:21:3: error: use of undeclared identifier 'ares_channel_create'; did you mean 'ares_channeldata'?
  ares_channel_create(&channel, NULL, NULL);
  ^
include/ares.h:342:8: note: 'ares_channeldata' declared here
struct ares_channeldata;
       ^
/src/c-ares/test/ares-test-fuzz-name.cpp:32:3: error: use of undeclared identifier 'ares_getnameinfo_int'; did you mean 'ares_getnameinfo'?
  ares_getnameinfo_int(&channel, reinterpret_cast<struct sockaddr*>(&addr),
  ^~~~~~~~~~~~~~~~~~~~
  ares_getnameinfo
include/ares.h:489:19: note: 'ares_getnameinfo' declared here
CARES_EXTERN void ares_getnameinfo(ares_channel_t        *channel,
                  ^
/src/c-ares/test/ares-test-fuzz-name.cpp:32:24: error: cannot initialize a parameter of type 'ares_channel_t *' (aka 'ares_channeldata *') with an rvalue of type 'ares_channel *' (aka 'ares_channeldata **')
  ares_getnameinfo_int(&channel, reinterpret_cast<struct sockaddr*>(&addr),
                       ^~~~~~~~
include/ares.h:489:59: note: passing argument to parameter 'channel' here
CARES_EXTERN void ares_getnameinfo(ares_channel_t        *channel,
                                                          ^
/src/c-ares/test/ares-test-fuzz-name.cpp:35:3: error: no matching function for call to 'ares_destroy'
  ares_destroy(&channel);
  ^~~~~~~~~~~~
include/ares.h:405:28: note: candidate function not viable: no known conversion from 'ares_channel *' (aka 'ares_channeldata **') to 'ares_channel_t *' (aka 'ares_channeldata *') for 1st argument; remove &
CARES_EXTERN void          ares_destroy(ares_channel_t *channel);
                           ^
4 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
