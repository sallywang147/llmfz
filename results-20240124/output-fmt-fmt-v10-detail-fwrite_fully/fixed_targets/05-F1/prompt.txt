Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fmt/core.h>

#include <cstdint>
#include <cstdio>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  if (size < 1) return 0;

  size_t count = data[0];
  if (count >= size) return 0;

  const char* ptr = reinterpret_cast<const char*>(data + 1);
  FILE* stream = stderr;
  try {
    fmt::detail::fwrite_fully(ptr, count, stream);
  } catch (const std::exception& e) {
    // ignore
  }
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fmt/test/fuzzing/chrono-timepoint.cc:15:18: error: no member named 'fwrite_fully' in namespace 'fmt::detail'
    fmt::detail::fwrite_fully(ptr, count, stream);
    ~~~~~~~~~~~~~^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
