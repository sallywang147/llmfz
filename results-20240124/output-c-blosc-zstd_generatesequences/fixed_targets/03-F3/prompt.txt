Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <vector>

#include "zstd.h"
extern "C" {
#include "lz4hc.h"
}

extern "C" size_t LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  ZSTD_CCtx* cctx = ZSTD_createCCtx();
  if (cctx == nullptr) {
    return 0;
  }

  LZ4HC_optimal_t* lz4hc_ctx = LZ4HC_createOptimal();
  if (lz4hc_ctx == nullptr) {
    ZSTD_freeCCtx(cctx);
    return 0;
  }

  const size_t seq_size = stream.ConsumeIntegralInRange<size_t>(0, 1000000);
  std::vector<char> seq(seq_size);
  stream.ConsumeBytes(seq.data(), seq_size);

  size_t generated_size = ZSTD_generateSequences(cctx, lz4hc_ctx, seq_size,
                                                   seq.data(), seq_size);

  LZ4HC_freeOptimal(lz4hc_ctx);
  ZSTD_freeCCtx(cctx);

  return generated_size;
}
</code>

The code has the following build issues:
<error>
/src/c-blosc/tests/fuzz/fuzz_compress.c:1:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
/src/c-blosc/tests/fuzz/fuzz_compress.cpp:23:3: error: unknown type name 'LZ4HC_optimal_t'
  LZ4HC_optimal_t* lz4hc_ctx = LZ4HC_createOptimal();
  ^
/src/c-blosc/tests/fuzz/fuzz_compress.cpp:23:32: error: use of undeclared identifier 'LZ4HC_createOptimal'
  LZ4HC_optimal_t* lz4hc_ctx = LZ4HC_createOptimal();
                               ^
/src/c-blosc/tests/fuzz/fuzz_compress.cpp:31:10: error: no matching member function for call to 'ConsumeBytes'
  stream.ConsumeBytes(seq.data(), seq_size);
  ~~~~~~~^~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:352:36: note: candidate template ignored: couldn't infer template argument 'T'
std::vector<T> FuzzedDataProvider::ConsumeBytes(size_t size, size_t num_bytes) {
                                   ^
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:108:36: note: candidate function template not viable: requires single argument 'num_bytes', but 2 arguments were provided
std::vector<T> FuzzedDataProvider::ConsumeBytes(size_t num_bytes) {
                                   ^
3 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
