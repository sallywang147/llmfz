Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include <openssl/ec.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  std::vector<uint8_t> input_buffer(provider.ConsumeBytes<uint8_t>(size));
  FILE* input_file = fmemopen(input_buffer.data(), input_buffer.size(), "rb");
  if (input_file == nullptr) {
    return 0;
  }

  struct ec_key_st* key = nullptr;
  PEM_read_ECPrivateKey(input_file, &key, nullptr, nullptr);
  EC_KEY_free(key);
  fclose(input_file);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/boringssl/fuzz/ssl_ctx_api.cc:20:3: error: use of undeclared identifier 'PEM_read_ECPrivateKey'
  PEM_read_ECPrivateKey(input_file, &key, nullptr, nullptr);
  ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
