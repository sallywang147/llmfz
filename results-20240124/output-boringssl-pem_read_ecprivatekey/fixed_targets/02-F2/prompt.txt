Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <openssl/ec.h>
#include <openssl/pem.h>

extern "C" {
#include <openssl/bio.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  BIO* bio = BIO_new_mem_buf(data, size);
  PEM_read_ECPrivateKey(bio, nullptr, nullptr, nullptr);
  BIO_free(bio);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/boringssl/fuzz/ssl_ctx_api.cc:13:3: error: no matching function for call to 'PEM_read_ECPrivateKey'
  PEM_read_ECPrivateKey(bio, nullptr, nullptr, nullptr);
  ^~~~~~~~~~~~~~~~~~~~~
/src/boringssl/include/openssl/pem.h:420:1: note: candidate function not viable: no known conversion from 'BIO *' (aka 'bio_st *') to 'FILE *' (aka '_IO_FILE *') for 1st argument
DECLARE_PEM_rw_cb(ECPrivateKey, EC_KEY)
^
/src/boringssl/include/openssl/pem.h:309:3: note: expanded from macro 'DECLARE_PEM_rw_cb'
  DECLARE_PEM_read(name, type)        \
  ^
/src/boringssl/include/openssl/pem.h:298:3: note: expanded from macro 'DECLARE_PEM_read'
  DECLARE_PEM_read_fp(name, type)
  ^
/src/boringssl/include/openssl/pem.h:254:24: note: expanded from macro 'DECLARE_PEM_read_fp'
  OPENSSL_EXPORT type *PEM_read_##name(FILE *fp, type **x, \
                       ^
<scratch space>:17:1: note: expanded from here
PEM_read_ECPrivateKey
^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
