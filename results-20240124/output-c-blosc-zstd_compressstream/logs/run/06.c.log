/workspace/out/libfuzzer-address-x86_64/compress_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 /workspace/corpus/compress_fuzzer < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4102263796
INFO: Loaded 1 modules   (19161 inline 8-bit counters): 19161 [0x8cb1e8, 0x8cfcc1), 
INFO: Loaded 1 PC tables (19161 PCs): 19161 [0x82a5e8,0x875378), 
INFO:        0 files found in /workspace/corpus/compress_fuzzer
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 161 ft: 162 corp: 1/1b exec/s: 0 rss: 34Mb
#3	NEW    cov: 163 ft: 189 corp: 2/89b lim: 4096 exec/s: 0 rss: 36Mb L: 88/88 MS: 1 InsertRepeatedBytes-
=================================================================
==13==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000410 at pc 0x000000535341 bp 0x7ffd2da7c390 sp 0x7ffd2da7bb60
READ of size 7 at 0x602000000410 thread T0
SCARINESS: 49 (7-byte-read-heap-use-after-free)
    #0 0x535340 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3
    #1 0x59ca26 in ZSTD_limitCopy /src/c-blosc/internal-complibs/zstd-1.5.5/compress/../common/zstd_internal.h:256:9
    #2 0x59ca26 in ZSTD_compressStream_generic /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:5924:39
    #3 0x59ca26 in ZSTD_compressStream2 /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:6294:5
    #4 0x59becd in ZSTD_compressStream /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:6062:5
    #5 0x57384a in LLVMFuzzerTestOneInput /src/c-blosc/tests/fuzz/fuzz_compress.cpp:34:23
    #6 0x444e23 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #7 0x44460a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #8 0x445cd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #9 0x4469a5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #10 0x435d0f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #11 0x45f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7ff313d3c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #13 0x42674d in _start (out/libfuzzer-address-x86_64/compress_fuzzer+0x42674d)

DEDUP_TOKEN: __asan_memcpy--ZSTD_limitCopy--ZSTD_compressStream_generic
0x602000000410 is located 0 bytes inside of 7-byte region [0x602000000410,0x602000000417)
freed by thread T0 here:
    #0 0x57165d in operator delete(void*) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:152:3
    #1 0x5737f7 in __libcpp_operator_delete<void *> /usr/local/bin/../include/c++/v1/new:255:3
    #2 0x5737f7 in __do_deallocate_handle_size<> /usr/local/bin/../include/c++/v1/new:279:10
    #3 0x5737f7 in __libcpp_deallocate /usr/local/bin/../include/c++/v1/new:289:12
    #4 0x5737f7 in deallocate /usr/local/bin/../include/c++/v1/__memory/allocator.h:114:13
    #5 0x5737f7 in deallocate /usr/local/bin/../include/c++/v1/__memory/allocator_traits.h:282:13
    #6 0x5737f7 in ~vector /usr/local/bin/../include/c++/v1/vector:411:9
    #7 0x5737f7 in LLVMFuzzerTestOneInput /src/c-blosc/tests/fuzz/fuzz_compress.cpp:30:7
    #8 0x444e23 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #9 0x44460a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #10 0x445cd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #11 0x4469a5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #12 0x435d0f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #13 0x45f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #14 0x7ff313d3c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)

DEDUP_TOKEN: operator delete(void*)--__libcpp_operator_delete<void *>--__do_deallocate_handle_size<>
previously allocated by thread T0 here:
    #0 0x570dfd in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:95:3
    #1 0x5741ce in __libcpp_operator_new<unsigned long> /usr/local/bin/../include/c++/v1/new:245:10
    #2 0x5741ce in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:271:10
    #3 0x5741ce in allocate /usr/local/bin/../include/c++/v1/__memory/allocator.h:105:38
    #4 0x5741ce in allocate /usr/local/bin/../include/c++/v1/__memory/allocator_traits.h:262:20
    #5 0x5741ce in __vallocate /usr/local/bin/../include/c++/v1/vector:931:37
    #6 0x5741ce in std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::vector(unsigned long) /usr/local/bin/../include/c++/v1/vector:1062:9
    #7 0x573663 in ConsumeBytes<unsigned char> /usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:361:18
    #8 0x573663 in ConsumeBytes<unsigned char> /usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:110:10
    #9 0x573663 in LLVMFuzzerTestOneInput /src/c-blosc/tests/fuzz/fuzz_compress.cpp:30:28
    #10 0x444e23 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #11 0x44460a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #12 0x445cd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #13 0x4469a5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #14 0x435d0f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #15 0x45f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0x7ff313d3c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_operator_new<unsigned long>--__libcpp_allocate
SUMMARY: AddressSanitizer: heap-use-after-free /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0c047fff8030: fa fa fd fd fa fa fd fd fa fa fd fa fa fa fd fa
  0x0c047fff8040: fa fa 01 fa fa fa 00 00 fa fa fd fd fa fa fd fa
  0x0c047fff8050: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8060: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa fd fd
  0x0c047fff8070: fa fa fd fd fa fa 00 00 fa fa 00 00 fa fa fd fd
=>0x0c047fff8080: fa fa[fd]fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
MS: 2 ShuffleBytes-ChangeByte-; base unit: 836ab77f2b95668bd2dcf11149bf91a5af11c85b
0xa,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x5d,0x0,0x0,0x0,
\012\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\000\000\000
artifact_prefix='./'; Test unit written to ./crash-6228b03f749df3b8f2e38497d11f25a5022761f6
Base64: CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAAA==
stat::number_of_executed_units: 5
stat::average_exec_per_sec:     0
stat::new_units_added:          1
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              39
