Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fmt/core.h>

#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  if (size <= 1) return 0;

  const char* format_str = reinterpret_cast<const char*>(data);
  size_t format_size = size - 1;

  std::string arg_str = std::string(data + size, data + size + 1);
  fmt::vprint(stderr, format_str, arg_str);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fmt/test/fuzzing/chrono-timepoint.cc:16:3: error: no matching function for call to 'vprint'
  fmt::vprint(stderr, format_str, arg_str);
  ^~~~~~~~~~~
/src/fmt/include/fmt/base.h:2965:14: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char>>') to 'fmt::format_args' (aka 'basic_format_args<fmt::context>') for 3rd argument
FMT_API void vprint(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/include/fmt/base.h:2964:14: note: candidate function not viable: requires 2 arguments, but 3 were provided
FMT_API void vprint(string_view fmt, format_args args);
             ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
