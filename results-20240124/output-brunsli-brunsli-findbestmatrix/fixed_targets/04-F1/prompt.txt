Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <brunsli/brunsli_decode.h>
#include <brunsli/types.h>
#include <stddef.h>
#include <stdint.h>
#include <string.h>
#include <fuzzer/FuzzedDataProvider.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  int quality = stream.ConsumeIntegral<int>();
  bool is_opaque = stream.ConsumeBool();
  std::vector<uint8_t> bytes = stream.ConsumeRemainingBytes();
  char *data_ptr = reinterpret_cast<char*>(bytes.data());
  brunsli::FindBestMatrix(&quality, is_opaque, data_ptr);
  return 0;
}
</code>

The code has the following build issues:
<error>
c/tests/fuzz_decode_streaming.cc:12:39: error: no matching member function for call to 'ConsumeRemainingBytes'
  std::vector<uint8_t> bytes = stream.ConsumeRemainingBytes();
                               ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:128:36: note: candidate template ignored: couldn't infer template argument 'T'
std::vector<T> FuzzedDataProvider::ConsumeRemainingBytes() {
                                   ^
c/tests/fuzz_decode_streaming.cc:14:12: error: no member named 'FindBestMatrix' in namespace 'brunsli'
  brunsli::FindBestMatrix(&quality, is_opaque, data_ptr);
  ~~~~~~~~~^
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
