Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fmt/core.h>

#include <cstdint>

#include "fuzzer-common.h"

template <typename T>
void invoke(fmt::string_view format_str, T value) {
  try {
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
  } catch (std::exception&) {
  }
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  // Always use a fixed location of the data.
  static_assert(sizeof(uint64_t) <= fixed_size, "fixed size is too small");
  if (size <= fixed_size) return 0;

  const uint64_t value = assign_from_buf<uint64_t>(data);
  data += fixed_size;
  size -= fixed_size;

  // data is already allocated separately in libFuzzer so reading past the end
  // will most likely be detected anyway.
  const auto format_str = fmt::string_view(as_chars(data), size);

  switch (value % 13) {
  case 0:
    invoke<bool>(format_str, value);
    break;
  case 1:
    invoke<char>(format_str, value);
    break;
  case 2:
    invoke<signed char>(format_str, value);
    break;
  case 3:
    invoke<unsigned char>(format_str, value);
    break;
  case 4:
    invoke<short>(format_str, value);
    break;
  case 5:
    invoke<unsigned short>(format_str, value);
    break;
  case 6:
    invoke<int>(format_str, value);
    break;
  case 7:
    invoke<unsigned int>(format_str, value);
    break;
  case 8:
    invoke<long>(format_str, value);
    break;
  case 9:
    invoke<unsigned long>(format_str, value);
    break;
  case 10:
    invoke<float>(format_str, value);
    break;
  case 11:
    invoke<double>(format_str, value);
    break;
  case 12:
    invoke<long double>(format_str, value);
    break;
  }
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:30:5: note: in instantiation of function template specialization 'invoke<bool>' requested here
    invoke<bool>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:33:5: note: in instantiation of function template specialization 'invoke<char>' requested here
    invoke<char>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:36:5: note: in instantiation of function template specialization 'invoke<signed char>' requested here
    invoke<signed char>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:39:5: note: in instantiation of function template specialization 'invoke<unsigned char>' requested here
    invoke<unsigned char>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:42:5: note: in instantiation of function template specialization 'invoke<short>' requested here
    invoke<short>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:45:5: note: in instantiation of function template specialization 'invoke<unsigned short>' requested here
    invoke<unsigned short>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:48:5: note: in instantiation of function template specialization 'invoke<int>' requested here
    invoke<int>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:51:5: note: in instantiation of function template specialization 'invoke<unsigned int>' requested here
    invoke<unsigned int>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:54:5: note: in instantiation of function template specialization 'invoke<long>' requested here
    invoke<long>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:57:5: note: in instantiation of function template specialization 'invoke<unsigned long>' requested here
    invoke<unsigned long>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:60:5: note: in instantiation of function template specialization 'invoke<float>' requested here
    invoke<float>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:63:5: note: in instantiation of function template specialization 'invoke<double>' requested here
    invoke<double>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
/src/fmt/test/fuzzing/chrono-timepoint.cc:10:49: error: too many arguments to function call, expected 3, have 5
    fmt::vprintln(stderr, format_str.data(), 1, 0, &value);
    ~~~~~~~~~~~~~                               ^~~~~~~~~
/src/fmt/test/fuzzing/chrono-timepoint.cc:66:5: note: in instantiation of function template specialization 'invoke<long double>' requested here
    invoke<long double>(format_str, value);
    ^
/src/fmt/include/fmt/base.h:2966:14: note: 'vprintln' declared here
FMT_API void vprintln(FILE* f, string_view fmt, format_args args);
             ^
13 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
