Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <brunsli/brunsli_decode.h>
#include <fuzzer/FuzzedDataProvider.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  brunsli::BrunsliDecoder decoder;
  size_t out_size = 0;
  char* out = nullptr;
  size_t meta_size = 0;
  char* meta = nullptr;
  decoder.Decode(&out_size, &out, &meta_size, &meta);
  return 0;
}
</code>

The code has the following build issues:
<error>
c/tests/fuzz_decode_streaming.cc:11:29: error: cannot initialize a parameter of type 'const uint8_t **' (aka 'const unsigned char **') with an rvalue of type 'char **'
  decoder.Decode(&out_size, &out, &meta_size, &meta);
                            ^~~~
./c/include/brunsli/brunsli_decode.h:55:55: note: passing argument to parameter 'next_in' here
  Status Decode(size_t* available_in, const uint8_t** next_in,
                                                      ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
