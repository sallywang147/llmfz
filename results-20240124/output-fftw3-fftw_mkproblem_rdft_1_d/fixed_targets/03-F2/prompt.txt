Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fftw3.h>
#include <string>

extern "C" {
#include <fftw3/fftw3.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  // For reference, fftw_compelx is defined:
  // typedef double fftw_complex[2]
  if (size < 1) {
    return 0;
  }
  uint8_t ARRAY_SIZE = (*data) % 250 + 1;
  data++;
  size -= 1;
  if ((ARRAY_SIZE * sizeof(double) * 2) > size) {
    return 0;
  }
  fftw_complex signal[ARRAY_SIZE];
  fftw_complex result[ARRAY_SIZE];

  // Seed the signals with fuzz data
  memcpy(signal, data, (ARRAY_SIZE * sizeof(double) * 2));

  struct fftw_tensor sz = {ARRAY_SIZE, 1, 1, 1, 1, 1, 1, 1};
  struct fftw_tensor vecsz = {ARRAY_SIZE, 1, 1, 1, 1, 1, 1, 1};
  fftw_plan p = fftw_plan_rdft_1_d(&sz, &vecsz,
                                                     (double *)signal,
                                                     (double *)result,
                                                     FFTW_REAL_TO_COMPLEX);
  fftw_destroy_plan(p);

  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `struct problem_s * fftw_mkproblem_rdft_1_d(struct tensor * sz, struct tensor * vecsz, double * I, double * O, int kind)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `struct problem_s * fftw_mkproblem_rdft_1_d(struct tensor * sz, struct tensor * vecsz, double * I, double * O, int kind)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
