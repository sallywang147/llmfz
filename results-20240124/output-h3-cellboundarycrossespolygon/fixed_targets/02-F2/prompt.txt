Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <string>
#include <vector>

#include "GeoPolygon.h"
#include "BBox.h"
#include "CellBoundary.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  std::vector<double> polygon_vertices;
  while (stream.remaining_bytes() > 1) {
    polygon_vertices.push_back(stream.ConsumeFloatingPoint<double>());
  }
  GeoPolygon geoPolygon(polygon_vertices);

  BBox bboxes[2];
  for (int i = 0; i < 2; i++) {
    bboxes[i].min_x = stream.ConsumeFloatingPoint<double>();
    bboxes[i].min_y = stream.ConsumeFloatingPoint<double>();
    bboxes[i].max_x = stream.ConsumeFloatingPoint<double>();
    bboxes[i].max_y = stream.ConsumeFloatingPoint<double>();
  }

  CellBoundary boundary;
  boundary.min_x = stream.ConsumeFloatingPoint<double>();
  boundary.min_y = stream.ConsumeFloatingPoint<double>();
  boundary.max_x = stream.ConsumeFloatingPoint<double>();
  boundary.max_y = stream.ConsumeFloatingPoint<double>();

  BBox boundaryBBox;
  boundaryBBox.min_x = stream.ConsumeFloatingPoint<double>();
  boundaryBBox.min_y = stream.ConsumeFloatingPoint<double>();
  boundaryBBox.max_x = stream.ConsumeFloatingPoint<double>();
  boundaryBBox.max_y = stream.ConsumeFloatingPoint<double>();

  cellBoundaryCrossesPolygon(&geoPolygon, bboxes, &boundary, &boundaryBBox);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/h3//src/apps/fuzzers/fuzzerResolutions.c:1:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
/src/h3//src/apps/fuzzers/fuzzerResolutions.cpp:11:10: fatal error: 'GeoPolygon.h' file not found
#include "GeoPolygon.h"
         ^~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
