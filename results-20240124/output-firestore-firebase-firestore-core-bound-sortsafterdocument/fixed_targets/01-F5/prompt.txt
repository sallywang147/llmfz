Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstddef>
#include <cstdint>
#include <vector>

#include "Firestore/core/src/model/document.h"
#include "Firestore/core/src/model/document_key.h"
#include "Firestore/core/src/model/field_value.h"
#include "Firestore/core/src/model/resource_path.h"
#include "Firestore/core/src/model/types.h"
#include "Firestore/core/src/model/value_util.h"
#include "Firestore/core/src/nanopb/message_builder.h"
#include "Firestore/core/src/nanopb/writer.h"
#include "Firestore/core/src/sorts/bound.h"
#include "Firestore/core/src/util/status.h"

using firebase::firestore::core::Bound;
using firebase::firestore::core::Document;
using firebase::firestore::core::DocumentKey;
using firebase::firestore::core::FieldValue;
using firebase::firestore::core::ResourcePath;
using firebase::firestore::core::types::Comparator;
using firebase::firestore::core::types::Type;
using firebase::firestore::core::util::Status;
extern "C" {
#include "Firestore/core/src/model/field_value.h"
#include "Firestore/core/src/model/resource_path.h"
#include "Firestore/core/src/model/type.h"
using firebase::firestore::model::DocumentKey;
using firebase::firestore::model::FieldValue;
using firebase::firestore::model::ResourcePath;
using firebase::firestore::model::Type;
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  const char* str_ptr = reinterpret_cast<const char*>(data);
  std::string str{str_ptr, size};

  // Test Bound::SortsAfterDocument
  try {
    Bound bound;
    std::vector<FieldValue> field_values;
    union anon anon;
    bound.SortsAfterDocument(&bound, &field_values, &anon);
  } catch (...) {
    // Ignore caught errors and assertions.
  }

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/firebase-ios-sdk/Firestore/fuzzing/fieldpath_fuzzer.cc:7:10: fatal error: 'Firestore/core/src/model/field_value.h' file not found
#include "Firestore/core/src/model/field_value.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
