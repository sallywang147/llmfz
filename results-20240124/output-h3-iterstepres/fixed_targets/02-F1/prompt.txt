Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  struct IterCellsResolution itR;
  itR.lat = stream.ConsumeIntegral<int64_t>();
  itR.lon = stream.ConsumeIntegral<int64_t>();
  itR.res = stream.ConsumeIntegral<int>();
  itR.cell_count = stream.ConsumeIntegral<int64_t>();
  itR.cells = new int64_t[itR.cell_count];
  for (int64_t i = 0; i < itR.cell_count; i++) {
    itR.cells[i] = stream.ConsumeIntegral<int64_t>();
  }
  iterStepRes(&itR);
  delete[] itR.cells;
  return 0;
}
</code>

The code has the following build issues:
<error>
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:16:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
/src/h3//src/apps/fuzzers/fuzzerResolutions.cpp:9:30: error: variable has incomplete type 'struct IterCellsResolution'
  struct IterCellsResolution itR;
                             ^
/src/h3//src/apps/fuzzers/fuzzerResolutions.cpp:9:10: note: forward declaration of 'IterCellsResolution'
  struct IterCellsResolution itR;
         ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
