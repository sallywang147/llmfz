Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdint.h>
#include <vector>

extern "C" {
#include "butteraugli/butteraugli.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  std::vector<float> img1(size / 2);
  std::vector<float> img2(size / 2);
  for (size_t i = 0; i < size / 2; i++) {
    img1[i] = static_cast<float>(data[i]);
    img2[i] = static_cast<float>(data[i + size / 2]);
  }

  butteraugli::ButteraugliComparator comparator;
  comparator.Mask(&comparator, &img1, &img2);
  return 0;
}
</code>

The code has the following build issues:
<error>
fuzz_target.cc:5:10: fatal error: 'butteraugli/butteraugli.h' file not found
#include "butteraugli/butteraugli.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
