Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>
#include <fuzzer/libfuzzer_macro.h>

extern "C" {
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>

char* run_thread_poll_loop(char* data) {
  FuzzedDataProvider stream(reinterpret_cast<const uint8_t*>(data), 1000);
  std::string fuzzed_data_str = stream.ConsumeBytesAsString(1000);
  char* fuzzed_data = new char[fuzzed_data_str.size() + 1];
  std::strcpy(fuzzed_data, fuzzed_data_str.c_str());

  return run_thread_poll_loop(fuzzed_data);
}

int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  run_thread_poll_loop(reinterpret_cast<char*>(const_cast<uint8_t*>(data)));
  return 0;
}
}
</code>

The code has the following build issues:
<error>
fuzz_cfg_parser.c:1:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
fuzz_cfg_parser.cpp:3:10: fatal error: 'fuzzer/libfuzzer_macro.h' file not found
#include <fuzzer/libfuzzer_macro.h>
         ^~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
