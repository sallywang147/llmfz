Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

extern "C" char* run_thread_poll_loop(char * data) {
  FuzzedDataProvider stream(data, 1);
  const std::string text = stream.ConsumeRemainingBytesAsString();
  return strdup(text.c_str());
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  char * output = run_thread_poll_loop((char*)data);
  free(output);
  return 0;
}
</code>

The code has the following build issues:
<error>
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:16:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
fuzz_cfg_parser.cpp:9:22: error: no matching constructor for initialization of 'FuzzedDataProvider'
  FuzzedDataProvider stream(data, 1);
                     ^      ~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:35:3: note: candidate constructor not viable: no known conversion from 'char *' to 'const uint8_t *' (aka 'const unsigned char *') for 1st argument
  FuzzedDataProvider(const uint8_t *data, size_t size)
  ^
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:87:3: note: candidate constructor not viable: requires 1 argument, but 2 were provided
  FuzzedDataProvider(const FuzzedDataProvider &) = delete;
  ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
