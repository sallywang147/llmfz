Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

extern "C" char* run_thread_poll_loop(char * data) {
  FuzzedDataProvider stream((const uint8_t *)data, 0);
  return run_thread_poll_loop(stream.ConsumeRemainingBytesAsString().c_str());
}
</code>

The code has the following build issues:
<error>
fuzz_cfg_parser.c:1:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
fuzz_cfg_parser.cpp:11:10: error: no matching function for call to 'run_thread_poll_loop'
  return run_thread_poll_loop(stream.ConsumeRemainingBytesAsString().c_str());
         ^~~~~~~~~~~~~~~~~~~~
fuzz_cfg_parser.cpp:9:18: note: candidate function not viable: 1st argument ('const std::basic_string<char>::value_type *' (aka 'const char *')) would lose const qualifier
extern "C" char* run_thread_poll_loop(char * data) {
                 ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
