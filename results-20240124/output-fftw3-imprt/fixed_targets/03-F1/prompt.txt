Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "planner.h"
#include "scanner.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const uint8_t slate_width = stream.ConsumeIntegral<uint8_t>();
  const uint8_t slate_height = stream.ConsumeIntegral<uint8_t>();
  struct planner_s slate_planner;
  planner_init(&slate_planner, slate_width, slate_height);
  struct scanner_s slate_scanner;
  scanner_init(&slate_scanner, slate_width, slate_height);

  imprt(&slate_planner, &slate_scanner);

  planner_free(&slate_planner);
  scanner_free(&slate_scanner);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fftw3_fuzzer.cc:8:10: fatal error: 'planner.h' file not found
#include "planner.h"
         ^~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
