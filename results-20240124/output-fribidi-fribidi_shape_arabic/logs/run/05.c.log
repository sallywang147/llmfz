Using seed corpus: fribidi-fuzzer_seed_corpus.zip
/workspace/out/libfuzzer-address-x86_64/fribidi-fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 /workspace/corpus/fribidi-fuzzer < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3948137452
INFO: Loaded 1 modules   (1027 inline 8-bit counters): 1027 [0x612e80, 0x613283), 
INFO: Loaded 1 PC tables (1027 PCs): 1027 [0x613288,0x6172b8), 
INFO:       14 files found in /workspace/corpus/fribidi-fuzzer
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: seed corpus: files: 14 min: 38b max: 2362b total: 12804b rss: 32Mb
=================================================================
==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000934 at pc 0x0000005744f6 bp 0x7ffd16e68f80 sp 0x7ffd16e68f78
READ of size 4 at 0x604000000934 thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x5744f5 in fribidi_get_bidi_types /work/build/../../src/fribidi/lib/fribidi-bidi-types.c:72:44
    #1 0x569e3e in LLVMFuzzerTestOneInput /work/build/../../src/fribidi/bin/fribidi-fuzzer.c:18:3
    #2 0x43ddc3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #3 0x43d5aa in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #4 0x43f414 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:826:7
    #5 0x43f649 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:857:3
    #6 0x42ecaf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #7 0x458302 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7f2e76252082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #9 0x41f6ed in _start (out/libfuzzer-address-x86_64/fribidi-fuzzer+0x41f6ed)

DEDUP_TOKEN: fribidi_get_bidi_types--LLVMFuzzerTestOneInput--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)
0x604000000936 is located 0 bytes to the right of 38-byte region [0x604000000910,0x604000000936)
allocated by thread T0 here:
    #0 0x52ef56 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4ad957 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x43d5aa in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #3 0x43f414 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:826:7
    #4 0x43f649 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:857:3
    #5 0x42ecaf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #6 0x458302 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #7 0x7f2e76252082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*)
SUMMARY: AddressSanitizer: heap-buffer-overflow /work/build/../../src/fribidi/lib/fribidi-bidi-types.c:72:44 in fribidi_get_bidi_types
Shadow bytes around the buggy address:
  0x0c087fff80d0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x0c087fff80e0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x0c087fff80f0: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x0c087fff8100: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd
  0x0c087fff8110: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 06 fa
=>0x0c087fff8120: fa fa 00 00 00 00[06]fa fa fa 00 00 00 00 00 00
  0x0c087fff8130: fa fa 00 00 00 00 00 00 fa fa fa fa fa fa fa fa
  0x0c087fff8140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8170: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0x68,0x20,0x0,0x0,0x0,0x0,0x1,0xa,0x1,0x8,0xb7,0x0,0x0,0x0,0x1,0x7,0xff,0xfe,0x27,0x27,0x0,0x24,0x1,0x20,0x2a,0x2d,0x0,0x25,0xd,0x0,0x0,0x0,0x0,0x20,0x0,0x0,0x0,0x0,
h \000\000\000\000\001\012\001\010\267\000\000\000\001\007\377\376''\000$\001 *-\000%\015\000\000\000\000 \000\000\000\000
artifact_prefix='./'; Test unit written to ./crash-69ebdb74927bd63911e9af32e7da3b0216279461
Base64: aCAAAAAAAQoBCLcAAAABB//+JycAJAEgKi0AJQ0AAAAAIAAAAAA=
stat::number_of_executed_units: 2
stat::average_exec_per_sec:     0
stat::new_units_added:          0
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              32
