Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <boost/regex.hpp>
#include <fuzzer/FuzzedDataProvider.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {
  FuzzedDataProvider fuzzed_data(Data, Size);
  // First value is length of the regex string
  size_t regex_length = fuzzed_data.ConsumeIntegral<uint8_t>();
  // Second value is regexp string whose length is `regex_length`
  std::string regex_string = fuzzed_data.ConsumeBytesAsString(regex_length);

#ifdef DEBUG
  std::cout << "Regexp string: " << regex_string << "Size: " << regex_string.size() << std::endl;
#endif

  boost::re_detail_500::basic_regex_parser<char, boost::c_regex_traits<char> > parser;
  parser.parse_extended(&parser);

  return 0;
}
</code>

The code has the following build issues:
<error>
../boost_ptree_jsonread_fuzzer.cc:15:80: error: no matching constructor for initialization of 'boost::re_detail_500::basic_regex_parser<char, boost::c_regex_traits<char>>'
  boost::re_detail_500::basic_regex_parser<char, boost::c_regex_traits<char> > parser;
                                                                               ^
./boost/regex/v5/basic_regex_parser.hpp:52:4: note: candidate constructor not viable: requires single argument 'data', but no arguments were provided
   basic_regex_parser(regex_data<charT, traits>* data);
   ^
./boost/regex/v5/basic_regex_parser.hpp:112:4: note: candidate constructor not viable: requires 1 argument, but 0 were provided
   basic_regex_parser(const basic_regex_parser&);
   ^
../boost_ptree_jsonread_fuzzer.cc:16:25: error: too many arguments to function call, expected 0, have 1
  parser.parse_extended(&parser);
  ~~~~~~~~~~~~~~~~~~~~~ ^~~~~~~
./boost/regex/v5/basic_regex_parser.hpp:63:9: note: 'parse_extended' declared here
   bool parse_extended();
        ^
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
