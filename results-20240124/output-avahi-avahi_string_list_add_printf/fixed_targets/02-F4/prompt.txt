Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "avahi-common/defs.h"
#include "avahi-common/error.h"
#include "avahi-common/malloc.h"
extern "C" {
#include "avahi-common/string.h"
#include "avahi-common/thread-watch.h"
#include "avahi-common/timeval.h"
#include "avahi-core/core.h"
#include "avahi-core/error.h"
#include "avahi-core/string-list.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  static bool initialized = false;
  if (!initialized) {
    avahi_set_allocator(avahi_malloc, avahi_free);
    avahi_set_error_handler(nullptr);
    avahi_set_thread_watch_callback(nullptr);
    avahi_set_log_level(AVA_LOG_LEVEL_INFO);
    initialized = true;
  }
  struct AvahiStringList *list = avahi_string_list_new();
  if (!list) {
    return 0;
  }
  FuzzedDataProvider provider(data, size);
  const size_t max_size = provider.ConsumeIntegralInRange<size_t>(0, 1024);
  std::vector<char> buffer(max_size);
  provider.ConsumeBytes<char>(buffer.data(), buffer.size());
  avahi_string_list_add_printf(list, buffer.data());
  avahi_string_list_free(list);
  return 0;
}
</code>

The code has the following build issues:
<error>
fuzz/fuzz-consume-record.c:1:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
fuzz/fuzz-consume-record.cpp:14:10: fatal error: 'avahi-common/string.h' file not found
#include "avahi-common/string.h"
         ^~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
