Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <string>
#include <botan/botan.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  Botan::EC_PrivateKey* private_key = new Botan::EC_PrivateKey();
  char** pass_phrase = new char*[1];
  Botan::AlgorithmIdentifier* alg_id = new Botan::AlgorithmIdentifier();
  char* salt = new char[1];
  size_t salt_len = 0;
  bool use_locking = false;
  private_key->EC_PrivateKey(pass_phrase, alg_id, salt, salt_len, use_locking);
  delete private_key;
  delete[] pass_phrase;
  delete alg_id;
  delete[] salt;
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
