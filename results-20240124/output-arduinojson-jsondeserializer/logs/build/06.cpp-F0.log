---------------------------------------------------------------
Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
---------------------------------------------------------------
CC=/usr/local/bin/clang-jcc
CXX=/usr/local/bin/clang++-jcc
CFLAGS=-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
CXXFLAGS=-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
---------------------------------------------------------------
+ cd extras/fuzzing
+ make
/usr/local/bin/clang++-jcc -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -I../../src -DARDUINOJSON_DEBUG=1 -std=c++11 json_fuzzer.cpp -o/workspace/out/libfuzzer-address-x86_64/json_fuzzer -fsanitize=fuzzer
zip -j /workspace/out/libfuzzer-address-x86_64/json_fuzzer_seed_corpus.zip json_seed_corpus/EmptyObject.json json_seed_corpus/Strings.json json_seed_corpus/Comments.json json_seed_corpus/OpenWeatherMap.json json_seed_corpus/EmptyArray.json json_seed_corpus/ExcessiveNesting.json json_seed_corpus/IntegerOverflow.json json_seed_corpus/WeatherUnderground.json json_seed_corpus/Numbers.json
  adding: EmptyObject.json (stored 0%)
  adding: Strings.json (deflated 40%)
  adding: Comments.json (deflated 65%)
  adding: OpenWeatherMap.json (deflated 57%)
  adding: EmptyArray.json (stored 0%)
  adding: ExcessiveNesting.json (deflated 64%)
  adding: IntegerOverflow.json (deflated 25%)
  adding: WeatherUnderground.json (deflated 64%)
  adding: Numbers.json (deflated 61%)
/usr/local/bin/clang++-jcc -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -I../../src -DARDUINOJSON_DEBUG=1 -std=c++11 msgpack_fuzzer.cpp -o/workspace/out/libfuzzer-address-x86_64/msgpack_fuzzer -fsanitize=fuzzer
msgpack_fuzzer.cpp:4:16: error: no member named 'V701HB4' in namespace 'ArduinoJson'; did you mean 'V702HB4'?
  ArduinoJson::V701HB4::detail::BoundedReader<unsigned char const*, void> reader(data, size);
  ~~~~~~~~~~~~~^~~~~~~
               V702HB4
../../src/ArduinoJson/compatibility.hpp:59:1: note: 'V702HB4' declared here
ARDUINOJSON_BEGIN_PUBLIC_NAMESPACE
^
../../src/ArduinoJson/Namespace.hpp:28:20: note: expanded from macro 'ARDUINOJSON_BEGIN_PUBLIC_NAMESPACE'
  inline namespace ARDUINOJSON_VERSION_NAMESPACE {
                   ^
../../src/ArduinoJson/Namespace.hpp:14:5: note: expanded from macro 'ARDUINOJSON_VERSION_NAMESPACE'
    ARDUINOJSON_CONCAT4(ARDUINOJSON_VERSION_MACRO,                         \
    ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:10:3: note: expanded from macro 'ARDUINOJSON_CONCAT4'
  ARDUINOJSON_CONCAT2(ARDUINOJSON_CONCAT2(A, B), ARDUINOJSON_CONCAT2(C, D))
  ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:8:35: note: expanded from macro 'ARDUINOJSON_CONCAT2'
#define ARDUINOJSON_CONCAT2(A, B) ARDUINOJSON_CONCAT_(A, B)
                                  ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:7:35: note: expanded from macro 'ARDUINOJSON_CONCAT_'
#define ARDUINOJSON_CONCAT_(A, B) A##B
                                  ^
<scratch space>:32:1: note: expanded from here
V702HB4
^
msgpack_fuzzer.cpp:5:16: error: no member named 'V701HB4' in namespace 'ArduinoJson'; did you mean 'V702HB4'?
  ArduinoJson::V701HB4::detail::JsonDeserializer<ArduinoJson::V701HB4::detail::BoundedReader<unsigned char const*, void> > deserializer(reader);
  ~~~~~~~~~~~~~^~~~~~~
               V702HB4
../../src/ArduinoJson/compatibility.hpp:59:1: note: 'V702HB4' declared here
ARDUINOJSON_BEGIN_PUBLIC_NAMESPACE
^
../../src/ArduinoJson/Namespace.hpp:28:20: note: expanded from macro 'ARDUINOJSON_BEGIN_PUBLIC_NAMESPACE'
  inline namespace ARDUINOJSON_VERSION_NAMESPACE {
                   ^
../../src/ArduinoJson/Namespace.hpp:14:5: note: expanded from macro 'ARDUINOJSON_VERSION_NAMESPACE'
    ARDUINOJSON_CONCAT4(ARDUINOJSON_VERSION_MACRO,                         \
    ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:10:3: note: expanded from macro 'ARDUINOJSON_CONCAT4'
  ARDUINOJSON_CONCAT2(ARDUINOJSON_CONCAT2(A, B), ARDUINOJSON_CONCAT2(C, D))
  ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:8:35: note: expanded from macro 'ARDUINOJSON_CONCAT2'
#define ARDUINOJSON_CONCAT2(A, B) ARDUINOJSON_CONCAT_(A, B)
                                  ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:7:35: note: expanded from macro 'ARDUINOJSON_CONCAT_'
#define ARDUINOJSON_CONCAT_(A, B) A##B
                                  ^
<scratch space>:32:1: note: expanded from here
V702HB4
^
msgpack_fuzzer.cpp:5:63: error: no member named 'V701HB4' in namespace 'ArduinoJson'; did you mean 'V702HB4'?
  ArduinoJson::V701HB4::detail::JsonDeserializer<ArduinoJson::V701HB4::detail::BoundedReader<unsigned char const*, void> > deserializer(reader);
                                                 ~~~~~~~~~~~~~^~~~~~~
                                                              V702HB4
../../src/ArduinoJson/compatibility.hpp:59:1: note: 'V702HB4' declared here
ARDUINOJSON_BEGIN_PUBLIC_NAMESPACE
^
../../src/ArduinoJson/Namespace.hpp:28:20: note: expanded from macro 'ARDUINOJSON_BEGIN_PUBLIC_NAMESPACE'
  inline namespace ARDUINOJSON_VERSION_NAMESPACE {
                   ^
../../src/ArduinoJson/Namespace.hpp:14:5: note: expanded from macro 'ARDUINOJSON_VERSION_NAMESPACE'
    ARDUINOJSON_CONCAT4(ARDUINOJSON_VERSION_MACRO,                         \
    ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:10:3: note: expanded from macro 'ARDUINOJSON_CONCAT4'
  ARDUINOJSON_CONCAT2(ARDUINOJSON_CONCAT2(A, B), ARDUINOJSON_CONCAT2(C, D))
  ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:8:35: note: expanded from macro 'ARDUINOJSON_CONCAT2'
#define ARDUINOJSON_CONCAT2(A, B) ARDUINOJSON_CONCAT_(A, B)
                                  ^
../../src/ArduinoJson/Polyfills/preprocessor.hpp:7:35: note: expanded from macro 'ARDUINOJSON_CONCAT_'
#define ARDUINOJSON_CONCAT_(A, B) A##B
                                  ^
<scratch space>:32:1: note: expanded from here
V702HB4
^
msgpack_fuzzer.cpp:5:124: error: no matching constructor for initialization of 'ArduinoJson::V702HB4::detail::JsonDeserializer<ArduinoJson::V702HB4::detail::BoundedReader<const unsigned char *, void>>'
  ArduinoJson::V701HB4::detail::JsonDeserializer<ArduinoJson::V701HB4::detail::BoundedReader<unsigned char const*, void> > deserializer(reader);
                                                                                                                           ^            ~~~~~~
../../src/ArduinoJson/Json/JsonDeserializer.hpp:22:7: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'ArduinoJson::V702HB4::detail::BoundedReader<const unsigned char *, void>' to 'const ArduinoJson::detail::JsonDeserializer<ArduinoJson::detail::BoundedReader<const unsigned char *>>' for 1st argument
class JsonDeserializer {
      ^
../../src/ArduinoJson/Json/JsonDeserializer.hpp:22:7: note: candidate constructor (the implicit move constructor) not viable: no known conversion from 'ArduinoJson::V702HB4::detail::BoundedReader<const unsigned char *, void>' to 'ArduinoJson::detail::JsonDeserializer<ArduinoJson::detail::BoundedReader<const unsigned char *>>' for 1st argument
../../src/ArduinoJson/Json/JsonDeserializer.hpp:24:3: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  JsonDeserializer(ResourceManager* resources, TReader reader)
  ^
4 errors generated.
make: *** [Makefile:14: /workspace/out/libfuzzer-address-x86_64/msgpack_fuzzer] Error 1
