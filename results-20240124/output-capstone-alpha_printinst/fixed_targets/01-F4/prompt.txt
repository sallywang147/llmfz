Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include "llvm/MC/MCInst.h"
#include "llvm/MC/MCStreamer.h"
#include "llvm/Support/raw_ostream.h"

extern "C" {
void Alpha_printInst(struct MCInst *MI, struct SStream *O, char *Info);
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t inst_size = stream.ConsumeIntegralInRange<size_t>(0, 100);
  uint8_t* inst_bytes = new uint8_t[inst_size];
  stream.ConsumeBytes<uint8_t>(inst_bytes, inst_size);

  llvm::MCInst inst;
  inst.setOpcode(stream.ConsumeIntegral<uint16_t>());
  inst.addOperand(llvm::MCOperand::createReg(stream.ConsumeIntegral<uint16_t>()));
  inst.addOperand(llvm::MCOperand::createImm(stream.ConsumeIntegral<uint64_t>()));

  llvm::raw_svector_ostream stream_out(llvm::StringRef());
  Alpha_printInst(&inst, (struct SStream *)&stream_out, nullptr);
  delete[] inst_bytes;
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/capstonev5/suite/fuzz/fuzz_disasm.c:1:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
/src/capstonev5/suite/fuzz/fuzz_disasm.cpp:22:10: error: no matching member function for call to 'ConsumeBytes'
  stream.ConsumeBytes<uint8_t>(inst_bytes, inst_size);
  ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:352:36: note: candidate function template not viable: no known conversion from 'uint8_t *' (aka 'unsigned char *') to 'size_t' (aka 'unsigned long') for 1st argument; dereference the argument with *
std::vector<T> FuzzedDataProvider::ConsumeBytes(size_t size, size_t num_bytes) {
                                   ^
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:108:36: note: candidate function template not viable: requires single argument 'num_bytes', but 2 arguments were provided
std::vector<T> FuzzedDataProvider::ConsumeBytes(size_t num_bytes) {
                                   ^
/src/capstonev5/suite/fuzz/fuzz_disasm.cpp:30:3: error: no matching function for call to 'Alpha_printInst'
  Alpha_printInst(&inst, (struct SStream *)&stream_out, nullptr);
  ^~~~~~~~~~~~~~~
/src/capstonev5/suite/fuzz/fuzz_disasm.cpp:15:6: note: candidate function not viable: no known conversion from 'llvm::MCInst *' to 'struct MCInst *' for 1st argument
void Alpha_printInst(struct MCInst *MI, struct SStream *O, char *Info);
     ^
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
