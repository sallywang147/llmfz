Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "Tpm.h"

extern "C" {
#include "TpmTypes.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  TPM2B_PUBLIC inPublic;
  inPublic.publicArea.type = stream.ConsumeIntegral<uint16_t>();
  inPublic.publicArea.nameAlg = stream.ConsumeIntegral<uint16_t>();
  inPublic.publicArea.objectAttributes =
      stream.ConsumeIntegral<uint32_t>();
  inPublic.publicArea.authPolicy.size = stream.ConsumeIntegral<uint16_t>();
  inPublic.publicArea.authPolicy.buffer =
      reinterpret_cast<uint8_t*>(const_cast<char*>(
          stream.ConsumeRemainingBytesAsString().c_str()));
  TPM2B_PRIVATE inPrivate;
  inPrivate.size = stream.ConsumeIntegral<uint32_t>();
  inPrivate.buffer = reinterpret_cast<uint8_t*>(const_cast<char*>(
      stream.ConsumeRemainingBytesAsString().c_str()));
  TPM2B_SENSITIVE inSensitive;
  inSensitive.sensitive.authValue.size =
      stream.ConsumeIntegral<uint16_t>();
  inSensitive.sensitive.authValue.buffer =
      reinterpret_cast<uint8_t*>(const_cast<char*>(
          stream.ConsumeRemainingBytesAsString().c_str()));
  inSensitive.sensitive.seedValue.size =
      stream.ConsumeIntegral<uint16_t>();
  inSensitive.sensitive.seedValue.buffer =
      reinterpret_cast<uint8_t*>(const_cast<char*>(
          stream.ConsumeRemainingBytesAsString().c_str()));
  inSensitive.sensitive.sensitive.size =
      stream.ConsumeIntegral<uint16_t>();
  inSensitive.sensitive.sensitive.buffer =
      reinterpret_cast<uint8_t*>(const_cast<char*>(
          stream.ConsumeRemainingBytesAsString().c_str()));
  TPM2B_DATA creationPCR;
  creationPCR.size = stream.ConsumeIntegral<uint32_t>();
  creationPCR.pcrSelection.sizeOfSelect =
      stream.ConsumeIntegral<uint8_t>();
  creationPCR.pcrSelection.pcrSelect =
      reinterpret_cast<uint8_t*>(const_cast<char*>(
          stream.ConsumeRemainingBytesAsString().c_str()));
  TPM2B_CREATION_DATA creationData;
  creationData.size = stream.ConsumeIntegral<uint32_t>();
  creationData.buffer = reinterpret_cast<uint8_t*>(const_cast<char*>(
      stream.ConsumeRemainingBytesAsString().c_str()));

  TPM2B_PUBLIC outPublic;
  TPM2B_PRIVATE outPrivate;
  TPM2B_CREATION_DATA outCreationData;
  TPM2B_DIGEST outHash;
  TPMT_TK_CREATION outCreationTicket;

  CreateLoaded_In in;
  in.inPublic = &inPublic;
  in.inPrivate = &inPrivate;
  in.inSensitive = &inSensitive;
  in.creationPCR = &creationPCR;
  in.creationData = &creationData;

  CreateLoaded_Out out;
  out.outPublic = &outPublic;
  out.outPrivate = &outPrivate;
  out.outCreationData = &outCreationData;
  out.outHash = &outHash;
  out.outCreationTicket = &outCreationTicket;

  int ret = TPM2_CreateLoaded(&in, &out);
  if (ret != TPM_RC_SUCCESS) {
    return 0;
  }

  return 0;
}
</code>

The code has the following build issues:
<error>
fuzzer.cc:21:34: error: no member named 'size' in 'TPM2B_DIGEST'
  inPublic.publicArea.authPolicy.size = stream.ConsumeIntegral<uint16_t>();
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
fuzzer.cc:22:34: error: no member named 'buffer' in 'TPM2B_DIGEST'
  inPublic.publicArea.authPolicy.buffer =
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
fuzzer.cc:26:13: error: no member named 'size' in 'TPM2B_PRIVATE'
  inPrivate.size = stream.ConsumeIntegral<uint32_t>();
  ~~~~~~~~~ ^
fuzzer.cc:27:13: error: no member named 'buffer' in 'TPM2B_PRIVATE'
  inPrivate.buffer = reinterpret_cast<uint8_t*>(const_cast<char*>(
  ~~~~~~~~~ ^
fuzzer.cc:30:15: error: no member named 'sensitive' in 'TPM2B_SENSITIVE'
  inSensitive.sensitive.authValue.size =
  ~~~~~~~~~~~ ^
fuzzer.cc:32:15: error: no member named 'sensitive' in 'TPM2B_SENSITIVE'
  inSensitive.sensitive.authValue.buffer =
  ~~~~~~~~~~~ ^
fuzzer.cc:35:15: error: no member named 'sensitive' in 'TPM2B_SENSITIVE'
  inSensitive.sensitive.seedValue.size =
  ~~~~~~~~~~~ ^
fuzzer.cc:37:15: error: no member named 'sensitive' in 'TPM2B_SENSITIVE'
  inSensitive.sensitive.seedValue.buffer =
  ~~~~~~~~~~~ ^
fuzzer.cc:40:15: error: no member named 'sensitive' in 'TPM2B_SENSITIVE'
  inSensitive.sensitive.sensitive.size =
  ~~~~~~~~~~~ ^
fuzzer.cc:42:15: error: no member named 'sensitive' in 'TPM2B_SENSITIVE'
  inSensitive.sensitive.sensitive.buffer =
  ~~~~~~~~~~~ ^
fuzzer.cc:46:15: error: no member named 'size' in 'TPM2B_DATA'
  creationPCR.size = stream.ConsumeIntegral<uint32_t>();
  ~~~~~~~~~~~ ^
fuzzer.cc:47:15: error: no member named 'pcrSelection' in 'TPM2B_DATA'
  creationPCR.pcrSelection.sizeOfSelect =
  ~~~~~~~~~~~ ^
fuzzer.cc:49:15: error: no member named 'pcrSelection' in 'TPM2B_DATA'
  creationPCR.pcrSelection.pcrSelect =
  ~~~~~~~~~~~ ^
fuzzer.cc:54:16: error: no member named 'buffer' in 'TPM2B_CREATION_DATA'
  creationData.buffer = reinterpret_cast<uint8_t*>(const_cast<char*>(
  ~~~~~~~~~~~~ ^
fuzzer.cc:63:3: error: unknown type name 'CreateLoaded_In'
  CreateLoaded_In in;
  ^
fuzzer.cc:70:3: error: unknown type name 'CreateLoaded_Out'
  CreateLoaded_Out out;
  ^
16 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
