Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "apputils.h"
#include "ns_turn_utils.h"
#include "stun_buffer.h"

#define kMinInputLength 10
#define kMaxInputLength 5120

#include "stun_constants.h" // Move this line to be before the `extern "C" {}` block

extern "C" {
#include "stun_constants.h"
}

extern int LLVMFuzzerTestOneInput(const uint8_t *Data,
                                  size_t Size) { // rfc5769check

  if (Size < kMinInputLength || Size > kMaxInputLength) {
    return 1;
  }

  struct _stun_buffer *buf = stun_buffer_new(Size);
  if (!buf) {
    return 1;
  }

  stun_buffer_set_stun_version(buf, STUN_VERSION_RFC_5389_00);
  stun_buffer_set_stun_method(buf, STUN_METHOD_BINDING);

  stun_set_channel_bind_request(buf, NULL, 0);

  stun_buffer_free(buf);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/coturn/fuzzing/FuzzStun.c:12:10: fatal error: 'stun_constants.h' file not found
#include "stun_constants.h" // Move this line to be before the `extern "C" {}` block
         ^~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
