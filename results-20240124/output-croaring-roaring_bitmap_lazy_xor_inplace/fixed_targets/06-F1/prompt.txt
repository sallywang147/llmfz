Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include "roaring/roaring.h"
#include "fuzzer/FuzzedDataProvider.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider fdp(data, size);
  struct roaring_bitmap_s *r1 = roaring_bitmap_create();
  struct roaring_bitmap_s *r2 = roaring_bitmap_create();
  roaring_bitmap_add_many(r1, fdp.ConsumeIntegralInRange<uint32_t>(0, 10000), fdp.ConsumeBytes<uint32_t>(fdp.ConsumeIntegralInRange<size_t>(0, 10000)));
  roaring_bitmap_add_many(r2, fdp.ConsumeIntegralInRange<uint32_t>(0, 10000), fdp.ConsumeBytes<uint32_t>(fdp.ConsumeIntegralInRange<size_t>(0, 10000)));
  roaring_bitmap_lazy_xor_inplace(r1, r2);
  roaring_bitmap_free(r1);
  roaring_bitmap_free(r2);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/croaring_fuzzer_cc.cc:8:3: error: no matching function for call to 'roaring_bitmap_add_many'
  roaring_bitmap_add_many(r1, fdp.ConsumeIntegralInRange<uint32_t>(0, 10000), fdp.ConsumeBytes<uint32_t>(fdp.ConsumeIntegralInRange<size_t>(0, 10000)));
  ^~~~~~~~~~~~~~~~~~~~~~~
/src/croaring/include/roaring/roaring.h:314:6: note: candidate function not viable: no known conversion from 'std::vector<unsigned int>' to 'const uint32_t *' (aka 'const unsigned int *') for 3rd argument
void roaring_bitmap_add_many(roaring_bitmap_t *r, size_t n_args,
     ^
/src/croaring_fuzzer_cc.cc:9:3: error: no matching function for call to 'roaring_bitmap_add_many'
  roaring_bitmap_add_many(r2, fdp.ConsumeIntegralInRange<uint32_t>(0, 10000), fdp.ConsumeBytes<uint32_t>(fdp.ConsumeIntegralInRange<size_t>(0, 10000)));
  ^~~~~~~~~~~~~~~~~~~~~~~
/src/croaring/include/roaring/roaring.h:314:6: note: candidate function not viable: no known conversion from 'std::vector<unsigned int>' to 'const uint32_t *' (aka 'const unsigned int *') for 3rd argument
void roaring_bitmap_add_many(roaring_bitmap_t *r, size_t n_args,
     ^
In file included from /src/croaring_fuzzer_cc.cc:2:
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:353:3: error: static_assert failed due to requirement 'sizeof(unsigned int) == sizeof(unsigned char)' "Incompatible data type."
  static_assert(sizeof(T) == sizeof(uint8_t), "Incompatible data type.");
  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:110:10: note: in instantiation of function template specialization 'FuzzedDataProvider::ConsumeBytes<unsigned int>' requested here
  return ConsumeBytes<T>(num_bytes, num_bytes);
         ^
/src/croaring_fuzzer_cc.cc:8:83: note: in instantiation of function template specialization 'FuzzedDataProvider::ConsumeBytes<unsigned int>' requested here
  roaring_bitmap_add_many(r1, fdp.ConsumeIntegralInRange<uint32_t>(0, 10000), fdp.ConsumeBytes<uint32_t>(fdp.ConsumeIntegralInRange<size_t>(0, 10000)));
                                                                                  ^
3 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
