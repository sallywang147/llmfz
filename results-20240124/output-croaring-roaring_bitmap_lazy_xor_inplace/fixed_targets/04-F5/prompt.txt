Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "roaring/roaring.h"
#include "fuzzer/FuzzedDataProvider.h"
#include <cstddef>
#include <cstdint>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider fdp(data, size);
  roaring_bitmap_t *bitmap_a = roaring_bitmap_create();
  roaring_bitmap_t *bitmap_b = roaring_bitmap_create();

  std::vector<uint32_t> bitmap_data_a = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
  roaring_bitmap_add_many(bitmap_a, bitmap_data_a.size(), bitmap_data_a.data());

  std::vector<uint32_t> bitmap_data_b = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
  roaring_bitmap_add_many(bitmap_b, bitmap_data_b.size(), bitmap_data_b.data());

  roaring_bitmap_lazy_xor_inplace(bitmap_a, bitmap_b);

  roaring_bitmap_free(bitmap_a);
  roaring_bitmap_free(bitmap_b);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/croaring_fuzzer_cc.cc:11:45: error: no template named 'ConsumeIntegralVector' in 'FuzzedDataProvider'; did you mean 'ConsumeIntegral'?
  std::vector<uint32_t> bitmap_data_a = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
                                            ^~~~~~~~~~~~~~~~~~~~~
                                            ConsumeIntegral
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:194:45: note: 'ConsumeIntegral' declared here
template <typename T> T FuzzedDataProvider::ConsumeIntegral() {
                                            ^
/src/croaring_fuzzer_cc.cc:11:45: error: no template named 'ConsumeIntegralVector' in 'FuzzedDataProvider'; did you mean 'ConsumeIntegral'?
  std::vector<uint32_t> bitmap_data_a = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
                                            ^~~~~~~~~~~~~~~~~~~~~
                                            ConsumeIntegral
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:194:45: note: 'ConsumeIntegral' declared here
template <typename T> T FuzzedDataProvider::ConsumeIntegral() {
                                            ^
/src/croaring_fuzzer_cc.cc:11:67: error: unexpected type name 'uint32_t': expected expression
  std::vector<uint32_t> bitmap_data_a = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
                                                                  ^
/src/croaring_fuzzer_cc.cc:11:45: error: no member named 'ConsumeIntegralVector' in 'FuzzedDataProvider'
  std::vector<uint32_t> bitmap_data_a = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
                                        ~~~ ^
/src/croaring_fuzzer_cc.cc:14:45: error: no template named 'ConsumeIntegralVector' in 'FuzzedDataProvider'; did you mean 'ConsumeIntegral'?
  std::vector<uint32_t> bitmap_data_b = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
                                            ^~~~~~~~~~~~~~~~~~~~~
                                            ConsumeIntegral
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:194:45: note: 'ConsumeIntegral' declared here
template <typename T> T FuzzedDataProvider::ConsumeIntegral() {
                                            ^
/src/croaring_fuzzer_cc.cc:14:45: error: no template named 'ConsumeIntegralVector' in 'FuzzedDataProvider'; did you mean 'ConsumeIntegral'?
  std::vector<uint32_t> bitmap_data_b = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
                                            ^~~~~~~~~~~~~~~~~~~~~
                                            ConsumeIntegral
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:194:45: note: 'ConsumeIntegral' declared here
template <typename T> T FuzzedDataProvider::ConsumeIntegral() {
                                            ^
/src/croaring_fuzzer_cc.cc:14:67: error: unexpected type name 'uint32_t': expected expression
  std::vector<uint32_t> bitmap_data_b = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
                                                                  ^
/src/croaring_fuzzer_cc.cc:14:45: error: no member named 'ConsumeIntegralVector' in 'FuzzedDataProvider'
  std::vector<uint32_t> bitmap_data_b = fdp.ConsumeIntegralVector<uint32_t>(1000, 0);
                                        ~~~ ^
8 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
