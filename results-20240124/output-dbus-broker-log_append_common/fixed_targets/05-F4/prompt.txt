Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>

#include "log.h"

extern "C" {
#include "log.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider stream(data, size);

  struct Log *log = log_new();
  int level = stream.ConsumeIntegralInRange<int>(0, 10);
  int error = stream.ConsumeIntegralInRange<int>(0, 10);
  char *id = stream.ConsumeBytesAsString(stream.ConsumeIntegralInRange<size_t>(0, size)).c_str();
  char *file = stream.ConsumeBytesAsString(stream.ConsumeIntegralInRange<size_t>(0, size)).c_str();
  int line = stream.ConsumeIntegralInRange<int>(0, 10);
  char *func = stream.ConsumeBytesAsString(stream.ConsumeIntegralInRange<size_t>(0, size)).c_str();

  log_append_common(log, level, error, id, file, line, func);

  log_destroy(log);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fuzz-message.c:5:10: fatal error: 'log.h' file not found
#include "log.h"
         ^~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
