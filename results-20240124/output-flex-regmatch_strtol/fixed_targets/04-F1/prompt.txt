Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <cstdint>
#include <cstdlib>
#include <cstring>
#include <fuzzer/FuzzedDataProvider.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  char src[1024];
  size_t src_len = stream.ConsumeRemainingBytes(src, sizeof(src));

  regmatch_t match;
  match.rm_so = stream.ConsumeIntegral<int>();
  match.rm_eo = stream.ConsumeIntegral<int>();

  char* endptr;
  int base = stream.ConsumeIntegral<int>();

  regmatch_strtol(&match, src, &endptr, base);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fuzz-main.c:1:11: fatal error: 'cstdint' file not found
 #include <cstdint>
          ^~~~~~~~~
1 error generated.

Fix failure
/src/fuzz-main.cpp:10:27: error: no matching member function for call to 'ConsumeRemainingBytes'
  size_t src_len = stream.ConsumeRemainingBytes(src, sizeof(src));
                   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:128:36: note: candidate function template not viable: requires 0 arguments, but 2 were provided
std::vector<T> FuzzedDataProvider::ConsumeRemainingBytes() {
                                   ^
/src/fuzz-main.cpp:12:3: error: unknown type name 'regmatch_t'
  regmatch_t match;
  ^
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
