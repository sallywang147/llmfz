Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <vector>

#include "wpa_supplicant/wpa_supplicant.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  std::vector<uint8_t> global_data = provider.ConsumeBytes<uint8_t>(size);
  struct wpa_global* global = reinterpret_cast<struct wpa_global*>(global_data.data());

  std::vector<uint8_t> iface_data = provider.ConsumeBytes<uint8_t>(size);
  struct wpa_interface* iface = reinterpret_cast<struct wpa_interface*>(iface_data.data());

  std::vector<uint8_t> parent_data = provider.ConsumeBytes<uint8_t>(size);
  struct wpa_supplicant* parent = reinterpret_cast<struct wpa_supplicant*>(parent_data.data());

  wpa_supplicant_add_iface(global, iface, parent);

  return 0;
}
</code>

The code has the following build issues:
<error>
../fuzzer-common.c:1:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
../fuzzer-common.cpp:10:10: fatal error: 'wpa_supplicant/wpa_supplicant.h' file not found
#include "wpa_supplicant/wpa_supplicant.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
