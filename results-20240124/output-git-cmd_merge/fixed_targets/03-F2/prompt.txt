Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  const size_t argc = provider.ConsumeIntegralInRange<size_t>(0, 10);
  std::vector<char*> argv(argc + 1);
  for (size_t i = 0; i < argc; i++) {
    const size_t arg_size = provider.ConsumeIntegralInRange<size_t>(0, 100);
    std::string arg = provider.ConsumeBytesAsString(arg_size);
    argv[i] = strdup(arg.c_str());
  }
  argv[argc] = nullptr;

  const size_t config_size = provider.ConsumeIntegralInRange<size_t>(0, 100);
  std::string config = provider.ConsumeBytesAsString(config_size);
  cmd_merge(argc, argv.data(), config.c_str());

  for (size_t i = 0; i < argc; i++) {
    free(argv[i]);
  }
  return 0;
}
</code>

The code has the following build issues:
<error>
oss-fuzz/fuzz-date.c:1:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
oss-fuzz/fuzz-date.cpp:24:3: error: use of undeclared identifier 'cmd_merge'
  cmd_merge(argc, argv.data(), config.c_str());
  ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
