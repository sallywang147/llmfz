Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include "MCInst.h"
#include "MCSubtargetInfo.h"
#include "SStream.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const uint8_t opcode = stream.ConsumeIntegral<uint8_t>();
  const uint8_t operand_count = stream.ConsumeIntegral<uint8_t>();
  const uint8_t operands[operand_count];
  for (uint8_t i = 0; i < operand_count; i++) {
    operands[i] = stream.ConsumeIntegral<uint8_t>();
  }
  const std::string info = stream.ConsumeRemainingBytesAsString();

  MCInst inst;
  inst.setOpcode(opcode);
  for (uint8_t i = 0; i < operand_count; i++) {
    inst.addOperand(MCOperand::createImm(operands[i]));
  }

  struct SStream stream_obj;
  SStream_Init(&stream_obj);
  Alpha_LLVM_printInstruction(&inst, &stream_obj, const_cast<char*>(info.c_str()));
  SStream_Done(&stream_obj);

  return 0;
}
</code>

The code has the following build issues:
<error>
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:16:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
/src/capstonev5/suite/fuzz/fuzz_disasm.cpp:9:10: fatal error: 'MCInst.h' file not found
#include "MCInst.h"
         ^~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
