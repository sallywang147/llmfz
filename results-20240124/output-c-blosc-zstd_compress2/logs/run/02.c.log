/workspace/out/libfuzzer-address-x86_64/compress_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 /workspace/corpus/compress_fuzzer < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 991280485
INFO: Loaded 1 modules   (19112 inline 8-bit counters): 19112 [0x8c91a8, 0x8cdc50), 
INFO: Loaded 1 PC tables (19112 PCs): 19112 [0x829548,0x873fc8), 
INFO:        0 files found in /workspace/corpus/compress_fuzzer
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 168 ft: 169 corp: 1/1b exec/s: 0 rss: 33Mb
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x608000000286 at pc 0x0000005e0da1 bp 0x7ffda129ea60 sp 0x7ffda129ea58
READ of size 8 at 0x608000000286 thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0x5e0da0 in ZSTD_count /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress_internal.h:764:33
    #1 0x5e0da0 in ZSTD_compressBlock_doubleFast_noDict_generic /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_double_fast.c:179:27
    #2 0x5e0da0 in ZSTD_compressBlock_doubleFast_noDict_4 /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_double_fast.c:541:1
    #3 0x5e0da0 in ZSTD_compressBlock_doubleFast /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_double_fast.c:561:16
    #4 0x5b2957 in ZSTD_buildSeqStore /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c
    #5 0x584c8c in ZSTD_compressBlock_internal /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:4237:28
    #6 0x584c8c in ZSTD_compress_frameChunk /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:4439:25
    #7 0x584c8c in ZSTD_compressContinue_internal /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:4614:30
    #8 0x590118 in ZSTD_compressEnd_public /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:5174:26
    #9 0x59c7a8 in ZSTD_compressStream_generic /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:5911:38
    #10 0x59c7a8 in ZSTD_compressStream2 /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:6294:5
    #11 0x5827a7 in ZSTD_compressStream2_simpleArgs /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:6315:29
    #12 0x5827a7 in ZSTD_compress2 /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:6335:31
    #13 0x57396f in LLVMFuzzerTestOneInput /src/c-blosc/tests/fuzz/fuzz_compress.cpp:25:28
    #14 0x444e23 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x44460a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #16 0x445cd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #17 0x4469a5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #18 0x435d0f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #19 0x45f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #20 0x7f72ced4c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #21 0x42674d in _start (out/libfuzzer-address-x86_64/compress_fuzzer+0x42674d)

DEDUP_TOKEN: ZSTD_count--ZSTD_compressBlock_doubleFast_noDict_generic--ZSTD_compressBlock_doubleFast_noDict_4
0x608000000286 is located 6 bytes to the right of 96-byte region [0x608000000220,0x608000000280)
allocated by thread T0 here:
    #0 0x570dfd in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:95:3
    #1 0x5736e9 in __libcpp_operator_new<unsigned long> /usr/local/bin/../include/c++/v1/new:245:10
    #2 0x5736e9 in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:271:10
    #3 0x5736e9 in allocate /usr/local/bin/../include/c++/v1/__memory/allocator.h:105:38
    #4 0x5736e9 in allocate /usr/local/bin/../include/c++/v1/__memory/allocator_traits.h:262:20
    #5 0x5736e9 in __init /usr/local/bin/../include/c++/v1/string:1857:15
    #6 0x5736e9 in basic_string /usr/local/bin/../include/c++/v1/string:1882:5
    #7 0x5736e9 in ConsumeBytesAsString /usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:141:15
    #8 0x5736e9 in ConsumeRemainingBytesAsString /usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:188:10
    #9 0x5736e9 in LLVMFuzzerTestOneInput /src/c-blosc/tests/fuzz/fuzz_compress.cpp:22:37
    #10 0x444e23 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #11 0x44460a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #12 0x445cd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #13 0x4469a5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #14 0x435d0f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #15 0x45f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0x7f72ced4c082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_operator_new<unsigned long>--__libcpp_allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress_internal.h:764:33 in ZSTD_count
Shadow bytes around the buggy address:
  0x0c107fff8000: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c107fff8010: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 02
  0x0c107fff8020: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fa
  0x0c107fff8030: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 06 fa
  0x0c107fff8040: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c107fff8050:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
MS: 1 InsertRepeatedBytes-; base unit: adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0x52,0xa,
RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\012
artifact_prefix='./'; Test unit written to ./crash-ef9c52355a616e568e2162a145f7117296050f7c
Base64: UlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUgo=
stat::number_of_executed_units: 3
stat::average_exec_per_sec:     0
stat::new_units_added:          0
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              34
