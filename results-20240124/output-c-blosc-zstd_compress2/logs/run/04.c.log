/workspace/out/libfuzzer-address-x86_64/compress_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 /workspace/corpus/compress_fuzzer < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 243958546
INFO: Loaded 1 modules   (19160 inline 8-bit counters): 19160 [0x8cb1a8, 0x8cfc80), 
INFO: Loaded 1 PC tables (19160 PCs): 19160 [0x82a568,0x8752e8), 
INFO:        0 files found in /workspace/corpus/compress_fuzzer
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 179 ft: 180 corp: 1/1b exec/s: 0 rss: 33Mb
	NEW_FUNC[1/13]: 0x5744d0 in std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::shrink_to_fit() /usr/local/bin/../include/c++/v1/vector:1497
	NEW_FUNC[2/13]: 0x5af820 in ZSTD_buildSequencesStatistics /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:2712
#5	NEW    cov: 325 ft: 328 corp: 2/79b lim: 4096 exec/s: 0 rss: 34Mb L: 78/78 MS: 3 ChangeByte-ChangeBit-InsertRepeatedBytes-
#8	NEW    cov: 327 ft: 331 corp: 3/213b lim: 4096 exec/s: 0 rss: 34Mb L: 134/134 MS: 3 InsertRepeatedBytes-ChangeBinInt-CopyPart-
#16	NEW    cov: 333 ft: 340 corp: 4/291b lim: 4096 exec/s: 0 rss: 34Mb L: 78/134 MS: 3 ChangeBit-ShuffleBytes-ChangeByte-
#33	REDUCE cov: 333 ft: 340 corp: 4/259b lim: 4096 exec/s: 0 rss: 35Mb L: 46/134 MS: 2 ChangeByte-EraseBytes-
#34	REDUCE cov: 346 ft: 369 corp: 5/305b lim: 4096 exec/s: 0 rss: 35Mb L: 46/134 MS: 1 ChangeBit-
#39	REDUCE cov: 366 ft: 403 corp: 6/437b lim: 4096 exec/s: 0 rss: 35Mb L: 132/134 MS: 5 InsertRepeatedBytes-InsertByte-InsertByte-CMP-CrossOver- DE: "\000\000\000\000\000\000\000\005"-
#40	NEW    cov: 372 ft: 417 corp: 7/483b lim: 4096 exec/s: 0 rss: 35Mb L: 46/134 MS: 1 ChangeBit-
#41	NEW    cov: 374 ft: 419 corp: 8/617b lim: 4096 exec/s: 0 rss: 35Mb L: 134/134 MS: 1 ChangeBit-
#44	REDUCE cov: 374 ft: 419 corp: 8/608b lim: 4096 exec/s: 0 rss: 35Mb L: 123/134 MS: 3 ChangeByte-ShuffleBytes-EraseBytes-
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000651 at pc 0x000000535341 bp 0x7fff2d6abd90 sp 0x7fff2d6ab560
READ of size 2 at 0x602000000651 thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x535340 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3
    #1 0x586194 in ZSTD_noCompressBlock /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress_internal.h:576:5
    #2 0x586194 in ZSTD_compress_frameChunk /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:4445:29
    #3 0x586194 in ZSTD_compressContinue_internal /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:4614:30
    #4 0x590fc8 in ZSTD_compressEnd_public /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:5174:26
    #5 0x59d658 in ZSTD_compressStream_generic /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:5911:38
    #6 0x59d658 in ZSTD_compressStream2 /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:6294:5
    #7 0x583657 in ZSTD_compressStream2_simpleArgs /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:6315:29
    #8 0x583657 in ZSTD_compress2 /src/c-blosc/internal-complibs/zstd-1.5.5/compress/zstd_compress.c:6335:31
    #9 0x57370c in LLVMFuzzerTestOneInput /src/c-blosc/tests/fuzz/fuzz_compress.cpp:21:22
    #10 0x444e23 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #11 0x44460a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #12 0x445cd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #13 0x4469a5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #14 0x435d0f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #15 0x45f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0x7f64166cf082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #17 0x42674d in _start (out/libfuzzer-address-x86_64/compress_fuzzer+0x42674d)

DEDUP_TOKEN: __asan_memcpy--ZSTD_noCompressBlock--ZSTD_compress_frameChunk
0x602000000651 is located 0 bytes to the right of 1-byte region [0x602000000650,0x602000000651)
allocated by thread T0 here:
    #0 0x570dfd in operator new(unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:95:3
    #1 0x57424e in __libcpp_operator_new<unsigned long> /usr/local/bin/../include/c++/v1/new:245:10
    #2 0x57424e in __libcpp_allocate /usr/local/bin/../include/c++/v1/new:271:10
    #3 0x57424e in allocate /usr/local/bin/../include/c++/v1/__memory/allocator.h:105:38
    #4 0x57424e in allocate /usr/local/bin/../include/c++/v1/__memory/allocator_traits.h:262:20
    #5 0x57424e in __vallocate /usr/local/bin/../include/c++/v1/vector:931:37
    #6 0x57424e in std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::vector(unsigned long) /usr/local/bin/../include/c++/v1/vector:1062:9
    #7 0x5735d7 in ConsumeBytes<unsigned char> /usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:361:18
    #8 0x5735d7 in ConsumeBytes<unsigned char> /usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:110:10
    #9 0x5735d7 in LLVMFuzzerTestOneInput /src/c-blosc/tests/fuzz/fuzz_compress.cpp:17:48
    #10 0x444e23 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #11 0x44460a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #12 0x445cd9 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #13 0x4469a5 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #14 0x435d0f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #15 0x45f362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0x7f64166cf082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)

DEDUP_TOKEN: operator new(unsigned long)--__libcpp_operator_new<unsigned long>--__libcpp_allocate
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0c047fff8070: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd
  0x0c047fff8080: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fa
  0x0c047fff8090: fa fa fd fd fa fa 00 04 fa fa fd fa fa fa fd fd
  0x0c047fff80a0: fa fa 00 fa fa fa fd fa fa fa fd fd fa fa fd fa
  0x0c047fff80b0: fa fa fd fd fa fa 00 fa fa fa fd fa fa fa fd fd
=>0x0c047fff80c0: fa fa fd fa fa fa 02 fa fa fa[01]fa fa fa fa fa
  0x0c047fff80d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING
MS: 2 CopyPart-InsertByte-; base unit: adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
0xa,0x35,
\0125
artifact_prefix='./'; Test unit written to ./crash-6aa5340b504631ff785ada9d4ca37ed1cb99d385
Base64: CjU=
stat::number_of_executed_units: 46
stat::average_exec_per_sec:     0
stat::new_units_added:          9
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              36
