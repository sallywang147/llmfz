Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <vector>

#include "zstd.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  ZSTD_CCtx* cctx = ZSTD_createCCtx();
  if (cctx == nullptr) {
    return 0;
  }

  std::vector<uint8_t> input_buffer = stream.ConsumeBytes<uint8_t>(stream.ConsumeIntegralInRange(0, size));
  std::vector<uint8_t> output_buffer(ZSTD_compressBound(input_buffer.size()));

  const size_t compressed_size = ZSTD_compress2(cctx, output_buffer.data(), output_buffer.size(),
                                                input_buffer.data(), input_buffer.size());
  if (ZSTD_isError(compressed_size)) {
    ZSTD_freeCCtx(cctx);
    return 0;
  }

  ZSTD_freeCCtx(cctx);
  return 0;
}
</code>

The code has the following build issues:
<error>
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:16:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
/src/c-blosc/tests/fuzz/fuzz_compress.cpp:18:75: error: no matching member function for call to 'ConsumeIntegralInRange'
  std::vector<uint8_t> input_buffer = stream.ConsumeBytes<uint8_t>(stream.ConsumeIntegralInRange(0, size));
                                                                   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:204:23: note: candidate template ignored: deduced conflicting types for parameter 'T' ('int' vs. 'size_t' (aka 'unsigned long'))
T FuzzedDataProvider::ConsumeIntegralInRange(T min, T max) {
                      ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
