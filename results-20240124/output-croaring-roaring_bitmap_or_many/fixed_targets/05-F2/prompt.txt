Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "roaring/roaring.h"
#include "fuzzer/FuzzedDataProvider.h"

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  size_t count = provider.ConsumeIntegral<size_t>();
  std::vector<roaring_bitmap_t*> bitmaps;
  for (size_t i = 0; i < count; i++) {
    size_t bitmap_size = provider.ConsumeIntegral<size_t>();
    std::vector<uint32_t> bitmap_data = provider.ConsumeBytes<uint32_t>(bitmap_size);
    roaring_bitmap_t* bitmap = roaring_bitmap_create();
    roaring_bitmap_add_many(bitmap, bitmap_data.size(), bitmap_data.data());
    bitmaps.push_back(bitmap);
  }
  roaring_bitmap_t** bitmaps_ptr = bitmaps.data();
  roaring_bitmap_t* result = roaring_bitmap_or_many(count, bitmaps_ptr);
  roaring_bitmap_free(result);
  for (size_t i = 0; i < count; i++) {
    roaring_bitmap_free(bitmaps[i]);
  }
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/croaring_fuzzer_cc.cc:22:30: error: no matching function for call to 'roaring_bitmap_or_many'
  roaring_bitmap_t* result = roaring_bitmap_or_many(count, bitmaps_ptr);
                             ^~~~~~~~~~~~~~~~~~~~~~
/src/croaring/include/roaring/roaring.h:211:19: note: candidate function not viable: no known conversion from 'roaring::api::roaring_bitmap_t **' (aka 'roaring::api::roaring_bitmap_s **') to 'const roaring::api::roaring_bitmap_t **' (aka 'const roaring::api::roaring_bitmap_s **') for 2nd argument
roaring_bitmap_t *roaring_bitmap_or_many(size_t number,
                  ^
In file included from /src/croaring_fuzzer_cc.cc:2:
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:353:3: error: static_assert failed due to requirement 'sizeof(unsigned int) == sizeof(unsigned char)' "Incompatible data type."
  static_assert(sizeof(T) == sizeof(uint8_t), "Incompatible data type.");
  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:110:10: note: in instantiation of function template specialization 'FuzzedDataProvider::ConsumeBytes<unsigned int>' requested here
  return ConsumeBytes<T>(num_bytes, num_bytes);
         ^
/src/croaring_fuzzer_cc.cc:16:50: note: in instantiation of function template specialization 'FuzzedDataProvider::ConsumeBytes<unsigned int>' requested here
    std::vector<uint32_t> bitmap_data = provider.ConsumeBytes<uint32_t>(bitmap_size);
                                                 ^
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
