Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>
#include <roaring/roaring.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider fdp(data, size);
  size_t num_bitmaps = fdp.ConsumeIntegralInRange<size_t>(0, 100);
  roaring_bitmap_t **bitmaps =
      (roaring_bitmap_t **)malloc(sizeof(roaring_bitmap_t *) * num_bitmaps);
  for (size_t i = 0; i < num_bitmaps; i++) {
    bitmaps[i] = roaring_bitmap_create();
    roaring_bitmap_add(bitmaps[i], fdp.ConsumeIntegral<uint32_t>());
  }
  roaring_bitmap_or_many(num_bitmaps, bitmaps);
  for (size_t i = 0; i < num_bitmaps; i++) {
    roaring_bitmap_free(bitmaps[i]);
  }
  free(bitmaps);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
