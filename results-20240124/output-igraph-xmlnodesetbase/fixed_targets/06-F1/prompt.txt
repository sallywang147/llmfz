Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <libxml/parser.h>
#include <libxml/xmlstring.h>
#include <libxml/xmlwriter.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  xmlDocPtr doc = xmlNewDoc(nullptr);
  if (doc == nullptr) {
    return 0;
  }

  xmlNodePtr root = xmlNewNode(nullptr, (const xmlChar*)"root");
  if (root == nullptr) {
    xmlFreeDoc(doc);
    return 0;
  }

  xmlDocSetRootElement(doc, root);

  xmlNodePtr cur = root;
  while (stream.remaining_bytes() > 0) {
    xmlNodePtr child = xmlNewNode(nullptr, (const xmlChar*)"child");
    if (child == nullptr) {
      xmlFreeDoc(doc);
      return 0;
    }

    xmlAddChild(cur, child);
    cur = child;
  }

  std::string uri = stream.ConsumeRemainingBytesAsString();
  xmlNodeSetBase(cur, (char*)uri.c_str());

  xmlFreeDoc(doc);
  return 0;
}
</code>

The code has the following build issues:
<error>
./fuzzing/bliss.cpp:3:10: fatal error: 'libxml/parser.h' file not found
#include <libxml/parser.h>
         ^~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
