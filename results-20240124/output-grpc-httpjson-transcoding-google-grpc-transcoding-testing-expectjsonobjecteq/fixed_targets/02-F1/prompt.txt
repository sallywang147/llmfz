Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include "grpc_transcoding/message_reader.h"

#include "test_common.h"

#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <string>

namespace google {
namespace grpc {
namespace transcoding {
namespace testing {
namespace {

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);

  std::string json_expected = provider.ConsumeRemainingBytesAsString();
  std::string json_actual = provider.ConsumeRemainingBytesAsString();

  // Call the function under test.
  bool result = ExpectJsonObjectEq(&json_expected, &json_actual);

  return 0;
}
}
}
}
}
}
</code>

The code has the following build issues:
<error>
test/message_reader_fuzz_test.cc:23:17: error: no matching function for call to 'ExpectJsonObjectEq'
  bool result = ExpectJsonObjectEq(&json_expected, &json_actual);
                ^~~~~~~~~~~~~~~~~~
test/test_common.h:118:6: note: candidate function not viable: no known conversion from 'std::string *' (aka 'basic_string<char, char_traits<char>, allocator<char>> *') to 'const std::string' (aka 'const basic_string<char, char_traits<char>, allocator<char>>') for 1st argument; remove &
bool ExpectJsonObjectEq(const std::string& expected, const std::string& actual);
     ^
1 error generated.
test/message_reader_fuzz_test.cc:23:17: error: no matching function for call to 'ExpectJsonObjectEq'
  bool result = ExpectJsonObjectEq(&json_expected, &json_actual);
                ^~~~~~~~~~~~~~~~~~
test/test_common.h:118:6: note: candidate function not viable: no known conversion from 'std::string *' (aka 'basic_string<char, char_traits<char>, allocator<char>> *') to 'const std::string' (aka 'const basic_string<char, char_traits<char>, allocator<char>>') for 1st argument; remove &
bool ExpectJsonObjectEq(const std::string& expected, const std::string& actual);
     ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
