Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "grpc_transcoding/testing/message_test_util.h"

#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <string>

namespace google {
namespace grpc {
namespace transcoding {
namespace testing {
namespace {

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);

  // Generate two JSON objects.
  std::string json1 = provider.ConsumeRandomLengthString(100);
  std::string json2 = provider.ConsumeRandomLengthString(100);

  // Call the function to compare the two JSON objects.
  ExpectJsonObjectEq(&json1, &json2);

  return 0;
}
}
}
}
}
}
</code>

The code has the following build issues:
<error>
test/message_reader_fuzz_test.cc:1:10: fatal error: 'grpc_transcoding/testing/message_test_util.h' file not found
#include "grpc_transcoding/testing/message_test_util.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
test/message_reader_fuzz_test.cc:1:10: fatal error: 'grpc_transcoding/testing/message_test_util.h' file not found
#include "grpc_transcoding/testing/message_test_util.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
