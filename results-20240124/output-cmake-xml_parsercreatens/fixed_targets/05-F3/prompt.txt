Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>

extern "C" {
#include <expat.h>
#include <libxml/parser.h>
#include <libxml/parserInternals.h>
#include <libxml/xmlversion.h>
#include <libxml/xmlIO.h>
#include <libxml/HTMLparser.h>
#include <libxml/HTMLtree.h>
#include <libxml/xmlschemas.h>
#include <libxml/xmlschemastypes.h>
#include <libxml/debugXML.h>
#include <libxml/xmlregexp.h>
#include <libxml/xpath.h>
#include <libxml/xpathInternals.h>
#include <libxml/xmlstring.h>
#include <libxml/dict.h>
#include <libxml/xmlerror.h>
#include <libxml/globals.h>
#include <libxml/xmlmemory.h>
#include <libxml/SAX.h>
#include <libxml/valid.h>
#include <libxml/xmlIO.h>
#include <libxml/encoding.h>
#include <libxml/xmlwriter.h>
#include <libxml/xmlreader.h>
#include <libxml/xmlregexp.h>
#include <libxml/xmlschemas.h>
#include <libxml/xmlschemastypes.h>
#include <libxml/xmlschemasparser.h>
#include <libxml/xmlschemavalid.h>
#include <libxml/xmlregexp.h>
#include <libxml/xmlschemas.h>
#include <libxml/xmlschemasparser.h>
#include <libxml/xmlschemavalid.h>
#include <libxml/xmldtd.h>
#include <libxml/xmlunicode.h>
#include <libxml/xmlschemas.h>
#include <libxml/xmlschemastypes.h>
#include <libxml/xmlschemasparser.h>
#include <libxml/xmlschemavalid.h>
#include <libxml/xmlschemas.h>
#include <libxml/xmlschemastypes.h>
#include <libxml/xmlschemasparser.h>
#include <libxml/xmlschemavalid.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)
{
  FuzzedDataProvider stream(data, size);
  char *encoding = stream.ConsumeBytesAsString(stream.ConsumeIntegralInRange(0, 16)).c_str();
  char sep = stream.ConsumeIntegral<char>();

  XML_Parser parser = XML_ParserCreateNS(encoding, sep);
  if (parser)
    XML_ParserFree(parser);

  return 0;
}
</code>

The code has the following build issues:
<error>
xml_parser_fuzzer.cc:6:10: fatal error: 'expat.h' file not found
#include <expat.h>
         ^~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
