Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

#include "expat.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)
{
  char* buf = (char*)malloc(size);
  if (!buf)
    return 0;
  memcpy(buf, data, size);
  char* base = buf;
  char* sysid = buf;
  char* pubid = buf;
  char* context = buf;
  XML_Parser parser = XML_ParserCreate(NULL);
  if (!parser)
    return 0;

  XML_SetExternalEntityRefHandler(parser, externalEntityInitProcessor);
  int ret = XML_Parse(parser, base, size, 1);
  if (ret == XML_STATUS_ERROR) {
    printf("Error: %s\n", XML_ErrorString(XML_GetErrorCode(parser)));
  }

  XML_ParserFree(parser);
  free(buf);
  return 0;
}
</code>

The code has the following build issues:
<error>
xml_parser_fuzzer.cc:5:10: fatal error: 'expat.h' file not found
#include "expat.h"
         ^~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
