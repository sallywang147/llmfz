Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

extern "C" {
#include "mkcldrn.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  struct problem_rdft problem;
  problem.n = provider.ConsumeIntegralInRange<uint32_t>(1, 100000);
  problem.m = provider.ConsumeIntegralInRange<uint32_t>(1, 100000);
  problem.k = provider.ConsumeIntegralInRange<uint32_t>(1, 100000);
  problem.l = provider.ConsumeIntegralInRange<uint32_t>(1, 100000);
  problem.r = provider.ConsumeIntegralInRange<uint32_t>(1, 100000);
  problem.s = provider.ConsumeIntegralInRange<uint32_t>(1, 100000);
  struct planner_s planner;
  struct P_s ego;
  mkcldrn_gcd(&problem, &planner, &ego);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fftw3_fuzzer.cc:10:10: fatal error: 'mkcldrn.h' file not found
#include "mkcldrn.h"
         ^~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
