Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include "highwayhash/highwayhash_target.h"
#include "highwayhash/highwayhash_types.h"

using highwayhash::HHKey;
using highwayhash::HHResult64;
using highwayhash::HighwayHash;
using highwayhash::HighwayHashCat;
using highwayhash::StringView;

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  // Generate the key.
  const uint64_t key = *reinterpret_cast<const uint64_t*>(data);
  data += sizeof(uint64_t);
  size -= sizeof(uint64_t);

  // Generate the fragments.
  std::vector<StringView> fragments;
  while (size >= sizeof(uint64_t)) {
    const uint64_t fragment_size = *reinterpret_cast<const uint64_t*>(data);
    data += sizeof(uint64_t);
    size -= sizeof(uint64_t);
    if (fragment_size > size) {
      break;
    }
    fragments.emplace_back(reinterpret_cast<const char*>(data), fragment_size);
    data += fragment_size;
    size -= fragment_size;
  }

  // Compute the hash.
  HHResult64 result;
  HighwayHashCat<4u>::operator()(nullptr, key, fragments.data(), fragments.size(),
                                &result);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
