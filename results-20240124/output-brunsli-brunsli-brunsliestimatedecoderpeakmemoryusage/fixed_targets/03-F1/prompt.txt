Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <brunsli/types.h>
#include <brunsli/brunsli_decode.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  brunsli::BrunsliEstimateDecoderPeakMemoryUsage((char *)data, size);
  return 0;
}
</code>

The code has the following build issues:
<error>
c/tests/fuzz_decode_streaming.cc:5:50: error: cannot initialize a parameter of type 'const uint8_t *' (aka 'const unsigned char *') with an rvalue of type 'char *'
  brunsli::BrunsliEstimateDecoderPeakMemoryUsage((char *)data, size);
                                                 ^~~~~~~~~~~~
./c/include/brunsli/brunsli_decode.h:41:61: note: passing argument to parameter 'data' here
size_t BrunsliEstimateDecoderPeakMemoryUsage(const uint8_t* data, size_t len);
                                                            ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
