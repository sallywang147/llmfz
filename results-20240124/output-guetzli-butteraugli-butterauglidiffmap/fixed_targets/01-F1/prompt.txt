Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstdint>
#include <cstdlib>
#include <vector>

#include "butteraugli/butteraugli.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider provider(data, size);

  // Generate random image dimensions.
  const int width = provider.ConsumeIntegralInRange<int>(1, 100);
  const int height = provider.ConsumeIntegralInRange<int>(1, 100);

  // Generate random pixel values.
  std::vector<uint8_t> pixel_data(width * height * 3);
  for (uint8_t &pixel : pixel_data) {
    pixel = provider.ConsumeIntegral<uint8_t>();
  }

  // Create butteraugli::Image objects.
  butteraugli::Image img1(width, height, pixel_data);
  butteraugli::Image img2(width, height, pixel_data);

  // Create empty vectors for the diffmap and score.
  std::vector<float> diffmap;
  std::vector<float> score;

  // Call butteraugli::ButteraugliDiffmap.
  butteraugli::ButteraugliDiffmap(&diffmap, &score, &img1);

  return 0;
}
</code>

The code has the following build issues:
<error>
fuzz_target.cc:7:10: fatal error: 'butteraugli/butteraugli.h' file not found
#include "butteraugli/butteraugli.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
