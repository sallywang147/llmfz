Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>

#include <b2nd.h>

extern "C" {
int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  struct b2nd_array_t *array = b2nd_array_new(100);
  if (array == NULL) {
    return 0;
  }

  FuzzedDataProvider stream(data, size);
  size_t key_size = stream.ConsumeIntegralInRange<size_t>(0, 100);
  char *key = (char *)malloc(key_size + 1);
  if (key == NULL) {
    b2nd_array_delete(array);
    return 0;
  }
  stream.ConsumeBytes<char>(key, key_size);
  key[key_size] = '\0';

  size_t value_size = stream.ConsumeIntegralInRange<size_t>(0, 100);
  char *value = (char *)malloc(value_size + 1);
  if (value == NULL) {
    free(key);
    b2nd_array_delete(array);
    return 0;
  }
  stream.ConsumeBytes<char>(value, value_size);
  value[value_size] = '\0';

  int result = b2nd_insert(array, key, key_size, value, value_size);
  if (result != 0) {
    printf("Error inserting key-value pair: %d\n", result);
  }

  free(key);
  free(value);
  b2nd_array_delete(array);

  return 0;
}
}
</code>

The code has the following build issues:
<error>
/src/c-blosc2/tests/fuzz/fuzz_decompress_frame.c:7:8: error: expected identifier or '('
extern "C" {
       ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
