Using seed corpus: decode_fuzzer_seed_corpus.zip
/workspace/out/libfuzzer-address-x86_64/decode_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -max_total_time=30 -len_control=0 /workspace/corpus/decode_fuzzer < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2426029041
INFO: Loaded 1 modules   (1257 inline 8-bit counters): 1257 [0x63fd20, 0x640209), 
INFO: Loaded 1 PC tables (1257 PCs): 1257 [0x640210,0x6450a0), 
INFO:       58 files found in /workspace/corpus/decode_fuzzer
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 15392 bytes
INFO: seed corpus: files: 58 min: 1b max: 15392b total: 27809b rss: 36Mb
=================================================================
==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000351 at pc 0x0000005756fb bp 0x7ffd1a8f7f80 sp 0x7ffd1a8f7f78
READ of size 1 at 0x602000000351 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x5756fa in BrotliPullByte /src/brotli/c/dec/bit_reader.h:205:21
    #1 0x5756fa in BrotliSafeReadBits /src/brotli/c/dec/bit_reader.h:334:10
    #2 0x5756fa in DecodeMetaBlockLength /src/brotli/c/dec/decode.c:316:14
    #3 0x56e609 in BrotliDecoderDecompressStream /src/brotli/c/dec/decode.c:2461:18
    #4 0x56c79d in LLVMFuzzerTestOneInput /src/brotli/c/fuzz/decode_fuzzer.c:70:14
    #5 0x43ddb3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #6 0x43d59a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #7 0x43f404 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:826:7
    #8 0x43f639 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:857:3
    #9 0x42ec9f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #10 0x4582f2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #11 0x7f6c70715082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #12 0x41f6dd in _start (out/libfuzzer-address-x86_64/decode_fuzzer+0x41f6dd)

DEDUP_TOKEN: BrotliPullByte--BrotliSafeReadBits--DecodeMetaBlockLength
0x602000000351 is located 0 bytes to the right of 1-byte region [0x602000000350,0x602000000351)
allocated by thread T0 here:
    #0 0x52ef46 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4ad947 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x43d59a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #3 0x43f404 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:826:7
    #4 0x43f639 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:857:3
    #5 0x42ec9f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #6 0x4582f2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #7 0x7f6c70715082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/brotli/c/dec/bit_reader.h:205:21 in BrotliPullByte
Shadow bytes around the buggy address:
  0x0c047fff8010: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8020: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff8030: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fa
  0x0c047fff8040: fa fa fd fa fa fa 01 fa fa fa 00 00 fa fa fd fa
  0x0c047fff8050: fa fa fd fa fa fa fd fa fa fa 00 00 fa fa 01 fa
=>0x0c047fff8060: fa fa 00 fa fa fa 01 fa fa fa[01]fa fa fa fd fa
  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING
MS: 0 ; base unit: 0000000000000000000000000000000000000000
0x67,
g
artifact_prefix='./'; Test unit written to ./crash-54fd1711209fb1c0781092374132c66e79e2241b
Base64: Zw==
stat::number_of_executed_units: 4
stat::average_exec_per_sec:     0
stat::new_units_added:          0
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              37
