Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fftw3.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < 1) {
    return 0;
  }
  uint8_t ARRAY_SIZE = (*data) % 250 + 1;
  data++;
  size -= 1;
  if ((ARRAY_SIZE * sizeof(double)) > size) {
    return 0;
  }
  double signal[ARRAY_SIZE];

  // Seed the signals with fuzz data
  memcpy(signal, data, ARRAY_SIZE * sizeof(double));

  struct tensor vecsz = {ARRAY_SIZE, 1};
  fftw_mkproblem_rdft_0_d(&vecsz, signal, nullptr);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fftw3_fuzzer.cc:3:45: error: unknown type name 'uint8_t'
extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
                                            ^
/src/fftw3_fuzzer.cc:7:3: error: unknown type name 'uint8_t'
  uint8_t ARRAY_SIZE = (*data) % 250 + 1;
  ^
/src/fftw3_fuzzer.cc:18:17: error: variable has incomplete type 'struct tensor'
  struct tensor vecsz = {ARRAY_SIZE, 1};
                ^
/src/fftw3_fuzzer.cc:18:10: note: forward declaration of 'tensor'
  struct tensor vecsz = {ARRAY_SIZE, 1};
         ^
3 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
