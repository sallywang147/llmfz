---------------------------------------------------------------
Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
---------------------------------------------------------------
CC=/usr/local/bin/clang-jcc
CXX=/usr/local/bin/clang++-jcc
CFLAGS=-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
CXXFLAGS=-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
---------------------------------------------------------------
+ make guetzli_static
==== Building guetzli_static (release) ====
Creating bin/Release
Creating obj/Release/guetzli_static
butteraugli_comparator.cc
dct_double.cc
debug_print.cc
entropy_encode.cc
fdct.cc
gamma_correct.cc
idct.cc
jpeg_data.cc
jpeg_data_decoder.cc
jpeg_data_encoder.cc
jpeg_data_reader.cc
jpeg_data_writer.cc
jpeg_huffman_decode.cc
output_image.cc
preprocess_downsample.cc
processor.cc
quality.cc
quantize.cc
score.cc
butteraugli.cc
Linking guetzli_static
+ /usr/local/bin/clang++-jcc -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I. fuzz_target.cc -fsanitize=fuzzer -o /workspace/out/libfuzzer-address-x86_64/guetzli_fuzzer bin/Release/libguetzli_static.a
fuzz_target.cc:4:34: error: use of undeclared identifier 'std'
                                 std::vector<HuffmanCode>* codes,
                                 ^
fuzz_target.cc:3:6: error: variable has incomplete type 'void'
void BuildSequentialHuffmanCodes(JPEGData* jdata,
     ^
fuzz_target.cc:3:34: error: use of undeclared identifier 'JPEGData'
void BuildSequentialHuffmanCodes(JPEGData* jdata,
                                 ^
fuzz_target.cc:3:44: error: use of undeclared identifier 'jdata'
void BuildSequentialHuffmanCodes(JPEGData* jdata,
                                           ^
fuzz_target.cc:4:46: error: use of undeclared identifier 'HuffmanCode'
                                 std::vector<HuffmanCode>* codes,
                                             ^
fuzz_target.cc:4:60: error: use of undeclared identifier 'codes'
                                 std::vector<HuffmanCode>* codes,
                                                           ^
fuzz_target.cc:5:34: error: use of undeclared identifier 'std'
                                 std::vector<int>* code_lengths);
                                 ^
fuzz_target.cc:5:49: error: expected '(' for function-style cast or type construction
                                 std::vector<int>* code_lengths);
                                             ~~~^
fuzz_target.cc:5:52: error: use of undeclared identifier 'code_lengths'
                                 std::vector<int>* code_lengths);
                                                   ^
fuzz_target.cc:7:45: error: unknown type name 'uint8_t'
extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
                                            ^
fuzz_target.cc:7:60: error: unknown type name 'size_t'
extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
                                                           ^
fuzz_target.cc:8:3: error: unknown type name 'JPEGData'
  JPEGData* jdata = new JPEGData();
  ^
fuzz_target.cc:8:25: error: unknown type name 'JPEGData'
  JPEGData* jdata = new JPEGData();
                        ^
fuzz_target.cc:12:3: error: use of undeclared identifier 'std'
  std::vector<HuffmanCode> codes;
  ^
fuzz_target.cc:12:15: error: use of undeclared identifier 'HuffmanCode'
  std::vector<HuffmanCode> codes;
              ^
fuzz_target.cc:12:28: error: use of undeclared identifier 'codes'
  std::vector<HuffmanCode> codes;
                           ^
fuzz_target.cc:13:3: error: use of undeclared identifier 'std'
  std::vector<int> code_lengths;
  ^
fuzz_target.cc:13:18: error: expected '(' for function-style cast or type construction
  std::vector<int> code_lengths;
              ~~~^
fuzz_target.cc:13:20: error: use of undeclared identifier 'code_lengths'
  std::vector<int> code_lengths;
                   ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
