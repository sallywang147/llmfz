Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <vector>

namespace guetzli {

struct JPEGData {
  const uint8_t* data;
  size_t size;
};

struct HuffmanCode {
  uint16_t code;
  uint8_t length;
};

void BuildSequentialHuffmanCodes(JPEGData* jdata,
                                 std::vector<HuffmanCode>* codes,
                                 std::vector<int>* code_lengths);

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  JPEGData jdata = {data, size};

  std::vector<HuffmanCode> codes;
  std::vector<int> code_lengths;

  BuildSequentialHuffmanCodes(&jdata, &codes, &code_lengths);

  return 0;
}

}  // namespace guetzli
</code>

The code has the following build issues:
<error>
fuzz_target.cc:(.text.LLVMFuzzerTestOneInput[LLVMFuzzerTestOneInput]+0x158): undefined reference to `guetzli::BuildSequentialHuffmanCodes(guetzli::JPEGData*, std::__1::vector<guetzli::HuffmanCode, std::__1::allocator<guetzli::HuffmanCode> >*, std::__1::vector<int, std::__1::allocator<int> >*)'
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
