Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <vector>

#include "roaring/roaring.h"

#include "fuzzer/FuzzedDataProvider.h"

extern "C" {
int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider fdp(data, size);
  std::vector<uint32_t> bitmap_data_a = fdp.ConsumeIntegral<uint32_t>();
  roaring_bitmap_t* a = roaring_bitmap_create();
  roaring_bitmap_add_many(a, bitmap_data_a.size(), bitmap_data_a.data());

  std::vector<uint32_t> bitmap_data_b = fdp.ConsumeIntegral<uint32_t>();
  roaring_bitmap_t* b = roaring_bitmap_create();
  roaring_bitmap_add_many(b, bitmap_data_b.size(), bitmap_data_b.data());

  bool lazy = fdp.ConsumeBool();
  roaring_bitmap_lazy_or(a, b, lazy);
  roaring_bitmap_free(a);
  roaring_bitmap_free(b);

  return 0;
}
}
</code>

The code has the following build issues:
<error>
/src/croaring_fuzzer_cc.cc:13:25: error: no viable conversion from 'unsigned int' to 'std::vector<uint32_t>' (aka 'vector<unsigned int>')
  std::vector<uint32_t> bitmap_data_a = fdp.ConsumeIntegral<uint32_t>();
                        ^               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/bin/../include/c++/v1/vector:415:5: note: candidate constructor not viable: no known conversion from 'unsigned int' to 'const std::vector<unsigned int> &' for 1st argument
    vector(const vector& __x);
    ^
/usr/local/bin/../include/c++/v1/vector:422:5: note: candidate constructor not viable: no known conversion from 'unsigned int' to 'initializer_list<std::vector<unsigned int>::value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
    vector(initializer_list<value_type> __il);
    ^
/usr/local/bin/../include/c++/v1/vector:428:5: note: candidate constructor not viable: no known conversion from 'unsigned int' to 'std::vector<unsigned int> &&' for 1st argument
    vector(vector&& __x)
    ^
/usr/local/bin/../include/c++/v1/vector:343:40: note: explicit constructor is not a candidate
    _LIBCPP_INLINE_VISIBILITY explicit vector(const allocator_type& __a)
                                       ^
/usr/local/bin/../include/c++/v1/vector:353:14: note: explicit constructor is not a candidate
    explicit vector(size_type __n);
             ^
/src/croaring_fuzzer_cc.cc:17:25: error: no viable conversion from 'unsigned int' to 'std::vector<uint32_t>' (aka 'vector<unsigned int>')
  std::vector<uint32_t> bitmap_data_b = fdp.ConsumeIntegral<uint32_t>();
                        ^               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/bin/../include/c++/v1/vector:415:5: note: candidate constructor not viable: no known conversion from 'unsigned int' to 'const std::vector<unsigned int> &' for 1st argument
    vector(const vector& __x);
    ^
/usr/local/bin/../include/c++/v1/vector:422:5: note: candidate constructor not viable: no known conversion from 'unsigned int' to 'initializer_list<std::vector<unsigned int>::value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
    vector(initializer_list<value_type> __il);
    ^
/usr/local/bin/../include/c++/v1/vector:428:5: note: candidate constructor not viable: no known conversion from 'unsigned int' to 'std::vector<unsigned int> &&' for 1st argument
    vector(vector&& __x)
    ^
/usr/local/bin/../include/c++/v1/vector:343:40: note: explicit constructor is not a candidate
    _LIBCPP_INLINE_VISIBILITY explicit vector(const allocator_type& __a)
                                       ^
/usr/local/bin/../include/c++/v1/vector:353:14: note: explicit constructor is not a candidate
    explicit vector(size_type __n);
             ^
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
