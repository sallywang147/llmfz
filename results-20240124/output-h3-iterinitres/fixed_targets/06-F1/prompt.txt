Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>

struct IterCellsResolution {
  int resolution;
  int min_resolution;
  int max_resolution;
  int max_depth;
  int max_depth_limit;
  int max_depth_limit_default;
};

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  struct IterCellsResolution res;
  res.resolution = stream.ConsumeIntegral<int>();
  res.min_resolution = stream.ConsumeIntegral<int>();
  res.max_resolution = stream.ConsumeIntegral<int>();
  res.max_depth = stream.ConsumeIntegral<int>();
  res.max_depth_limit = stream.ConsumeIntegral<int>();
  res.max_depth_limit_default = stream.ConsumeIntegral<int>();

  iterInitRes(&res, 0);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
