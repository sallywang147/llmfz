Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <zstd.h>

extern "C" {
#include "fuzzer.h"
}

size_t LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  ZSTD_CCtx *cctx = ZSTD_createCCtx();
  ZSTD_inBuffer input = {data, size, 0};
  ZSTD_outBuffer output = {NULL, 0, 0};

  while (input.pos < input.size) {
    size_t ret = ZSTD_compressStream(cctx, &output, &input);
    if (ZSTD_isError(ret)) {
      fprintf(stderr, "ZSTD_compressStream: %s\n", ZSTD_getErrorName(ret));
      return 0;
    }
  }

  size_t ret = ZSTD_endStream(cctx, &output);
  if (ZSTD_isError(ret)) {
    fprintf(stderr, "ZSTD_endStream: %s\n", ZSTD_getErrorName(ret));
    return 0;
  }

  ZSTD_freeCCtx(cctx);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
