Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <vector>

#include "zstd.h"

extern "C" {
#include "zstd.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  ZSTD_CCtx* cctx = ZSTD_createCCtx();
  if (cctx == nullptr) {
    return 0;
  }
  ZSTD_inBuffer input = {nullptr, 0, 0};
  std::vector<unsigned char> compressed_buffer;
  while (stream.remaining_bytes()) {
    size_t input_size = stream.ConsumeIntegralInRange<size_t>(0, stream.remaining_bytes());
    input.src = stream.ConsumeBytes<unsigned char>(input_size).data();
    input.size = input_size;
    input.pos = 0;
    ZSTD_compressStream2(cctx, compressed_buffer.data(), compressed_buffer.size(), &input, nullptr);
  }
  ZSTD_endStream(cctx, nullptr);
  ZSTD_freeCCtx(cctx);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
