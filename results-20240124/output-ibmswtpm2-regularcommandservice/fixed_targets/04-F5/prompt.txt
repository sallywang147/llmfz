Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <iostream>
#include <string>

class RegularCommandService {
public:
    RegularCommandService(int id) : id_(id) {}
    void execute() {
        std::cout << "RegularCommandService::execute() called with id: " << id_ << std::endl;
    }

private:
    int id_;
};

extern "C" {
#include "RegularCommandService.h"
}

int main() {
    RegularCommandService service(1);
    service.execute();
    return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
