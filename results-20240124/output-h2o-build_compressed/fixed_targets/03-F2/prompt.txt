Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <string>

#include "common.h"
#include "ptls.h"
#include "ptls_compression.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  struct st_ptls_compressed_certificate_entry_t compressed;
  struct st_h2o_iovec_t iov;
  char ocsp_status[1024];
  size_t ocsp_status_len = stream.ConsumeIntegralInRange<size_t>(0, 1024);

  stream.ConsumeBytes<char>(ocsp_status, ocsp_status_len);
  build_compressed(&compressed, &iov, 0, ocsp_status, ocsp_status_len);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/h2o/fuzz/driver_h3.cc:7:10: fatal error: 'common.h' file not found
#include "common.h"
         ^~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
