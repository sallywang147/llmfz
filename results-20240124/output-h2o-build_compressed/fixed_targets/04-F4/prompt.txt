Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

extern "C" {
#include "h2o.h"
#include "h2o/ptls.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  std::vector<uint8_t> output_buffer(stream.ConsumeIntegral<size_t>());
  size_t output_written = 0;
  auto output = h2o_iovec_init(output_buffer.data(), output_buffer.size());

  std::vector<uint8_t> ocsp_status(stream.ConsumeIntegral<size_t>());
  auto ocsp = h2o_iovec_init(ocsp_status.data(), ocsp_status.size());

  struct st_ptls_compressed_certificate_entry_t compressed_entry;
  int ret = build_compressed(&compressed_entry, &output, output_written, ocsp.base, ocsp.len);
  if (ret != 0) {
    return 0;
  }

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/h2o/fuzz/driver_h3.cc:11:10: fatal error: 'h2o/ptls.h' file not found
#include "h2o/ptls.h"
         ^~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
