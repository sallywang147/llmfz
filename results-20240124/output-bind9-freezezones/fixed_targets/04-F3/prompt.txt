Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <isc/buffer.h>
#include <isc/commandline.h>
#include <isc/file.h>
#include <isc/mem.h>
#include <isc/result.h>
#include <isc/string.h>
#include <isc/util.h>

#include <dns/fixedname.h>
#include <dns/message.h>
#include <dns/name.h>
#include <dns/rcode.h>
#include <dns/tsig.h>
#include <dns/view.h>
#include <dns/zone.h>

#include "fuzz.h"

static isc_mem_t *mctx = NULL;
static dns_view_t *view = NULL;
static dns_zone_t *zone = NULL;
static char *wd = NULL;
static char template[] = "/tmp/dns-message-checksig-XXXXXX";

static char f1[] = "Ksig0key.+008+55921.key";
static char c1[] = "sig0key. IN KEY 512 3 8 "
		   "AwEAAa22lgHi1vAbQvu5ETdTrm2H8rwga9tvyMa6LFiSDyevLvSv0Uo5 "
		   "uvfrXnxaLdtBMts6e1Ly2piSH9JRbOGMNibOK4EXWhWAn8MII4SWgQAs "
		   "bFwtiz4HyPn2wScrUQdo8DocKiQJBanesr7vDO8fdA6Rg1e0yAtSeNti "
		   "e8avx46/HJa6CFs3CoE0sf6oOFSxM954AgCBTXOGNBt1Nt3Bhfqt2qyA "
		   "TLFii5K1jLDTZDVkoiyDXL1M7wcTwKf9METgj1eQmH3GGlRM/OJ/j8xk "
		   "ZiFGbL3cipWdiH48031jiV2hlc92mKn8Ya0d9AN6c44piza/JSFydZXw "
		   "sY32nxzjDbs=\n";

static char f2[] = "Ksig0key.+008+55921.private";
static char c2[] = "Private-key-format: v1.3\n\
Algorithm: 8 (RSASHA256)\n\
Modulus: rbaWAeLW8BtC+7kRN1OubYfyvCBr22/IxrosWJIPJ68u9K/RSjm69+tefFot20Ey2zp7UvLamJIf0lFs4Yw2Js4rgRdaFYCfwwgjhJaBACxsXC2LPgfI+fbBJytRB2jwOhwqJAkFqd6yvu8M7x90DpGDV7TIC1J422J7xq/Hjr8clroIWzcKgTSx/qg4VLEz3ngCAIFNc4Y0G3U23cGF+q3arIBMsWKLkrWMsNNkNWSiLINcvUzvBxPAp/0wROCPV5CYfcYaVEz84n+PzGRmIUZsvdyKlZ2IfjzTfWOJXaGVz3aYqfxhrR30A3pzjimLNr8lIXJ1lfCxjfafHOMNuw==\n\
PublicExponent: AQAB\n\
PrivateExponent: GDfclFkR5ToFGH9rMTRMnP73Q5dzjLgkx4vyHcuzKtxcvAans4+hNj+NazckAy2E+mpzV2j95TJ4wZjSM2RvB5xLwBIc4Dg6oyAHL6Ikoae6gw64cHFOaYb808n8CyqWqfX+QWAz9sRSVZXnTuPViX3A+svR7ejVak9Bzr1NTDm0DFlrhaKVCYA++dKVZerfuNiXT/jQvrc4wMCa7WWsfLsFO8aTNkEhqUnmS9c5VYgr7MkCV4ENDBcISpQc9wElI0hl12QPaSj8iSdk9liYp+HTiOxOyp6BGGuecKAoQijMwrZy4qExdOxvowptll8+nZLtwGRn/un/xvIZY5OLAQ==\n\
Prime1: ww3C6jwnrLQik/zxSgC0KuqgHq68cCjiRjwK2/euzs7NkMevFpXvV0cWO8x1/wKC1mszVLsUaKTvH6fzRsXfz5MPihzNzUYFwvobKVLserSxEwHNk+FKUU+q07Kf8WWnCqX5nX9QzVG1q4J8Q44N49I5S480jHLGYbyLZrEYMQE=\n\
Prime2: 4/3Ozq/8vRgcO4bieFs4CbZR7C98HiTi65SiLBIKY09mDfCleZI0uurAYBluZJgHS5AC5cdyHFuJr3uKxvD+Mgdlru40U6cSCEdK7HAhyUGZUndWl28wyMEB6Kke1/owxVn0S4RKLPOgFI2668H6JObaqXf0wyY89RdVQP6VQrs=\n\
Exponent1: Tbr9MyVX1j5PDVSev5P6OKQZvUB7PeM9ESo6VaCl3CqTxx+cic6ke86LcLcxSrewdkxwP1LydiVMWfwvOcP/RhRf+/Uwmp5OC35qNpSiQuAhNObiCw2b9T1fYU/s52FQKTEtgXNMOxZV5IxyguVoaaLMTG08TsAqiKZ/kyP99QE=\n\
Exponent2: Q4qSNKrwLbixzHS2LL+hR0dK17RtiaSV0QKUVIf3qdoAusp6yxwkIOegnBeMm6JqLtl38kh2pq37iRAJWcxVEc8dMYiB2fJZpjgwmwDREYUsfcC611vqUN7UyO8pIwSMZDq045ZKPyzhVJV0NZmemEYHq0LNMO7oCheiewGwiDc=\n\
Coefficient: T2u/J4NgyO+OqoLpXBIpTBzqrvDk8tb0feYgsp5d16hHvbXxNkMUR8cI07RdbI9HnEldtmhAnbQ6SvFiy2YYjpw/Fz2WwdxRqLaDV7UlhrT+CqltvU9d/N/xThBNKDa23Wf5Vat+HRiLHSgzsY1PseVCWN+g4azuK2D8+DLeHE=\n\
Created: 20220311073606\n\
Publish: 20220311073606\n\
Activate: 20220311073606\n";

static char f3[] = "sig0key.db";
static char c3[] = "sig0key. 0 IN SOA . . 0 0 0 0 0\n\
sig0key. 0 IN NS .\n\
sig0key. 0 IN KEY 512 3 8 AwEAAa22lgHi1vAbQvu5ETdTrm2H8rwga9tvyMa6LFiSDyevLvSv0Uo5 uvfrXnxaLdtBMts6e1Ly2piSH9JRbOGMNibOK4EXWhWAn8MII4SWgQAs bFwtiz4HyPn2wScrUQdo8DocKiQJBanesr7vDO8fdA6Rg1e0yAtSeNti e8avx46/HJa6CFs3CoE0sf6oOFSxM954AgCBTXOGNBt1Nt3Bhfqt2qyA TLFii5K1jLDTZDVkoiyDXL1M7wcTwKf9METgj1eQmH3GGlRM/OJ/j8xk ZiFGbL3cipWdiH48031jiV2hlc92mKn8Ya0d9AN6c44piza/JSFydZXw sY32nxzjDbs=\n";

static bool destroy_dst = false;

extern "C" {
int
LLVMFuzzerInitialize(int *argc ISC_ATTR_UNUSED, char ***argv ISC_ATTR_UNUSED) {
	isc_result_t result;
	dns_fixedname_t fixed;
	dns_name_t *name = dns_fixedname_initname(&fixed);
	unsigned char secret[16] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				     0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
				     0xff, 0xff, 0xff, 0xff };

	wd = mkdtemp(template);
	if (wd == NULL) {
		fprintf(stderr, "mkdtemp failed\n");
		return (1);
	}

	snprintf(pathbuf, sizeof(pathbuf), "%s/%s", wd, f1);
	fd = fopen(pathbuf, "w");
	if (fd == NULL) {
		fprintf(stderr, "fopen(%s) failed\n", pathbuf);
		return (1);
	}
	fputs(c1, fd);
	fclose(fd);

	snprintf(pathbuf, sizeof(pathbuf), "%s/%s", wd, f2);
	fd = fopen(pathbuf, "w");
	if (fd == NULL) {
		fprintf(stderr, "fopen(%s) failed\n", pathbuf);
		return (1);
	}
	fputs(c2, fd);
	fclose(fd);

	snprintf(pathbuf, sizeof(pathbuf), "%s/%s", wd, f3);
	fd = fopen(pathbuf, "w");
	if (fd == NULL) {
		fprintf(stderr, "fopen(%s) failed\n", pathbuf);
		return (1);
	}
	fputs(c3, fd);
	fclose(fd);

	isc_mem_create(&mctx);

	result = dst_lib_init(mctx, NULL);
	if (result != ISC_R_SUCCESS) {
		fprintf(stderr, "dst_lib_init failed: %s\n",
			isc_result_totext(result));
		return (1);
	}
	destroy_dst = true;

	result = dns_view_create(mctx, dns_rdataclass_in, "view", &view);
	if (result != ISC_R_SUCCESS) {
		fprintf(stderr, "dns_view_create failed: %s\n",
			isc_result_totext(result));
		return (1);
	}

	dns_zone_create(&zone, mctx, 0);

	result = dns_name_fromstring(name, "sig0key", 0, NULL);
	if (result != ISC_R_SUCCESS) {
		fprintf(stderr, "dns_name_fromstring failed: %s\n",
			isc_result_totext(result));
		return (1);
	}

	dns_zone_setorigin(zone, name);

	dns_zone_setclass(zone, view->rdclass);
	dns_zone_settype(zone, dns_zone_primary);

	result = dns_zone_setkeydirectory(zone, wd);
	if (result != ISC_R_SUCCESS) {
		fprintf(stderr, "dns_zone_setkeydirectory failed: %s\n",
			isc_result_totext(result));
		return (1);
	}

	result = dns_zone_setfile(zone, pathbuf, dns_masterformat_text,
				  &dns_master_style_default);
	if (result != ISC_R_SUCCESS) {
		fprintf(stderr, "dns_zone_setfile failed: %s\n",
			isc_result_totext(result));
		return (1);
	}

	result = dns_zone_load(zone, false);
	if (result != ISC_R_SUCCESS) {
		fprintf(stderr, "dns_zone_load failed: %s\n",
			isc_result_totext(result));
		return (1);
	}

	result = dns_view_addzone(view, zone);
	if (result != ISC_R_SUCCESS) {
		fprintf(stderr, "dns_view_addzone failed: %s\n",
			isc_result_totext(result));
		return (1);
	}

	dns_zone_setview(zone, view);
	dns_view_freeze(view);

	dns_zone_detach(&zone);

	return (0);
}

int
LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
	isc_result_t result;
	unsigned char *uap;

	if (size > 65535) {
		return (0);
	}

	uap = (unsigned char *)malloc(size + 1);
	if (uap == NULL) {
		return (0);
	}
	memcpy(uap, data, size);
	uap[size] = 0;

	result = freezezones(zone, uap);
	if (debug) {
		fprintf(stderr, "freezezones => %s\n",
			isc_result_totext(result));
	}

	free(uap);

	return (0);
}
}
</code>

The code has the following build issues:
<error>
isc_lex_gettoken.c:57:8: error: expected identifier or '('
extern "C" {
       ^
1 error generated.

Fix failure
In file included from isc_lex_gettoken.cpp:1:
In file included from ../lib/isc/include/isc/buffer.h:112:
../lib/isc/include/isc/mem.h:398:41: error: expected ')'
isc__mempool_create(isc_mem_t *restrict mctx, const size_t element_size,
                                        ^
../lib/isc/include/isc/mem.h:398:20: note: to match this '('
isc__mempool_create(isc_mem_t *restrict mctx, const size_t element_size,
                   ^
../lib/isc/include/isc/mem.h:419:47: error: expected ')'
isc__mempool_destroy(isc_mempool_t **restrict mpctxp _ISC_MEM_FLARG);
                                              ^
../lib/isc/include/isc/mem.h:419:21: note: to match this '('
isc__mempool_destroy(isc_mempool_t **restrict mpctxp _ISC_MEM_FLARG);
                    ^
../lib/isc/include/isc/mem.h:429:45: error: expected ')'
isc_mempool_setname(isc_mempool_t *restrict mpctx, const char *name);
                                            ^
../lib/isc/include/isc/mem.h:429:20: note: to match this '('
isc_mempool_setname(isc_mempool_t *restrict mpctx, const char *name);
                   ^
../lib/isc/include/isc/mem.h:452:48: error: expected ')'
isc_mempool_getfreemax(isc_mempool_t *restrict mpctx);
                                               ^
../lib/isc/include/isc/mem.h:452:23: note: to match this '('
isc_mempool_getfreemax(isc_mempool_t *restrict mpctx);
                      ^
../lib/isc/include/isc/mem.h:458:48: error: expected ')'
isc_mempool_setfreemax(isc_mempool_t *restrict mpctx, const unsigned int limit);
                                               ^
../lib/isc/include/isc/mem.h:458:23: note: to match this '('
isc_mempool_setfreemax(isc_mempool_t *restrict mpctx, const unsigned int limit);
                      ^
../lib/isc/include/isc/mem.h:464:50: error: expected ')'
isc_mempool_getfreecount(isc_mempool_t *restrict mpctx);
                                                 ^
../lib/isc/include/isc/mem.h:464:25: note: to match this '('
isc_mempool_getfreecount(isc_mempool_t *restrict mpctx);
                        ^
../lib/isc/include/isc/mem.h:470:50: error: expected ')'
isc_mempool_getallocated(isc_mempool_t *restrict mpctx);
                                                 ^
../lib/isc/include/isc/mem.h:470:25: note: to match this '('
isc_mempool_getallocated(isc_mempool_t *restrict mpctx);
                        ^
../lib/isc/include/isc/mem.h:476:50: error: expected ')'
isc_mempool_getfillcount(isc_mempool_t *restrict mpctx);
                                                 ^
../lib/isc/include/isc/mem.h:476:25: note: to match this '('
isc_mempool_getfillcount(isc_mempool_t *restrict mpctx);
                        ^
../lib/isc/include/isc/mem.h:483:50: error: expected ')'
isc_mempool_setfillcount(isc_mempool_t *restrict mpctx,
                                                 ^
../lib/isc/include/isc/mem.h:483:25: note: to match this '('
isc_mempool_setfillcount(isc_mempool_t *restrict mpctx,
                        ^
In file included from isc_lex_gettoken.cpp:1:
../lib/isc/include/isc/buffer.h:197:68: error: expected ')'
isc_buffer_allocate(isc_mem_t         *mctx, isc_buffer_t **restrict dynbuffer,
                                                                     ^
../lib/isc/include/isc/buffer.h:197:20: note: to match this '('
isc_buffer_allocate(isc_mem_t         *mctx, isc_buffer_t **restrict dynbuffer,
                   ^
../lib/isc/include/isc/buffer.h:213:43: error: expected ')'
isc_buffer_setmctx(isc_buffer_t *restrict b, isc_mem_t *mctx);
                                          ^
../lib/isc/include/isc/buffer.h:213:19: note: to match this '('
isc_buffer_setmctx(isc_buffer_t *restrict b, isc_mem_t *mctx);
                  ^
../lib/isc/include/isc/buffer.h:215:45: error: expected ')'
isc_buffer_clearmctx(isc_buffer_t *restrict b);
                                            ^
../lib/isc/include/isc/buffer.h:215:21: note: to match this '('
isc_buffer_clearmctx(isc_buffer_t *restrict b);
                    ^
../lib/isc/include/isc/buffer.h:222:43: error: expected ')'
isc_buffer_reserve(isc_buffer_t *restrict dynbuffer, const unsigned int size);
                                          ^
../lib/isc/include/isc/buffer.h:222:19: note: to match this '('
isc_buffer_reserve(isc_buffer_t *restrict dynbuffer, const unsigned int size);
                  ^
../lib/isc/include/isc/buffer.h:236:41: error: expected ')'
isc_buffer_free(isc_buffer_t **restrict dynbuffer);
                                        ^
../lib/isc/include/isc/buffer.h:236:16: note: to match this '('
isc_buffer_free(isc_buffer_t **restrict dynbuffer);
               ^
../lib/isc/include/isc/buffer.h:252:44: error: expected ')'
isc_buffer_initnull(isc_buffer_t *restrict b);
                                           ^
../lib/isc/include/isc/buffer.h:252:20: note: to match this '('
isc_buffer_initnull(isc_buffer_t *restrict b);
                   ^
../lib/isc/include/isc/buffer.h:255:42: error: expected ')'
isc_buffer_reinit(isc_buffer_t *restrict b, void *base,
                                         ^
../lib/isc/include/isc/buffer.h:255:18: note: to match this '('
isc_buffer_reinit(isc_buffer_t *restrict b, void *base,
                 ^
../lib/isc/include/isc/buffer.h:270:46: error: expected ')'
isc_buffer_trycompact(isc_buffer_t *restrict b);
                                             ^
../lib/isc/include/isc/buffer.h:270:22: note: to match this '('
isc_buffer_trycompact(isc_buffer_t *restrict b);
                     ^
../lib/isc/include/isc/buffer.h:272:43: error: expected ')'
isc_buffer_compact(isc_buffer_t *restrict b);
                                          ^
../lib/isc/include/isc/buffer.h:272:19: note: to match this '('
isc_buffer_compact(isc_buffer_t *restrict b);
                  ^
../lib/isc/include/isc/buffer.h:292:51: error: expected ')'
isc_buffer_peekuint8(const isc_buffer_t *restrict b, uint8_t *valp);
                                                  ^
../lib/isc/include/isc/buffer.h:292:21: note: to match this '('
isc_buffer_peekuint8(const isc_buffer_t *restrict b, uint8_t *valp);
                    ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
