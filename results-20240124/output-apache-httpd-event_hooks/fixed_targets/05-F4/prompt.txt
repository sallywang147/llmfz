Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <apr_pools.h>

extern "C" {
#include "llvm/FuzzMutate.h"
}

void event_hooks(apr_pool_t *pool) {
  // Your code here
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  apr_pool_t *pool = apr_pool_create_default(NULL);
  event_hooks(pool);
  apr_pool_destroy(pool);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fuzz_utils.c:3:8: error: expected identifier or '('
extern "C" {
       ^
/src/fuzz_utils.c:4:10: fatal error: 'llvm/FuzzMutate.h' file not found
#include "llvm/FuzzMutate.h"
         ^~~~~~~~~~~~~~~~~~~
2 errors generated.

Fix failure
/src/fuzz_utils.cpp:4:10: fatal error: 'llvm/FuzzMutate.h' file not found
#include "llvm/FuzzMutate.h"
         ^~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
