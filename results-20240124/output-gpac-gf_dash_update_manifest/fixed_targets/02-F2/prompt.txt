Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdio.h>
#include <unistd.h>

#include <gpac/constants.h>
#include <gpac/dash.h>

extern "C" {
#include <gpac/gpac.h>
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  char filename[256];
  GF_Err e;
  sprintf(filename, "/tmp/libfuzzer.%d", getpid());

  FILE *fp = fopen(filename, "wb");
  if (!fp)
    return 0;
  fwrite(data, size, 1, fp);
  fclose(fp);

  GF_DashClient *dash = gf_dash_client_new(NULL, NULL, NULL, NULL, NULL, NULL, &e);
  gf_dash_client_set_manifest_uri(dash, filename, &e);
  gf_dash_update_manifest(dash);
  gf_dash_client_destroy(dash);

  unlink(filename);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/testsuite/oss-fuzzers/fuzz_parse.c:7:8: error: expected identifier or '('
extern "C" {
       ^
/src/testsuite/oss-fuzzers/fuzz_parse.c:8:10: fatal error: 'gpac/gpac.h' file not found
#include <gpac/gpac.h>
         ^~~~~~~~~~~~~
2 errors generated.

Fix failure
/src/testsuite/oss-fuzzers/fuzz_parse.cpp:8:10: fatal error: 'gpac/gpac.h' file not found
#include <gpac/gpac.h>
         ^~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
