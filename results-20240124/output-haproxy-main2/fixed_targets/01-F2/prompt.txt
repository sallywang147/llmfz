Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <algorithm>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstdint>
#include <cstdio>
#include <cstdlib>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const int arg_count = stream.ConsumeIntegral<int>();
  const std::string program_name = stream.ConsumeRandomLengthString();
  std::vector<std::string> args;
  for (int i = 0; i < arg_count; i++) {
    args.push_back(stream.ConsumeRandomLengthString());
  }
  int argc = arg_count + 1;
  char** argv = new char*[argc];
  argv[0] = const_cast<char*>(program_name.c_str());
  for (int i = 1; i < argc; i++) {
    argv[i] = const_cast<char*>(args[i - 1].c_str());
  }
  main(argc, argv);
  delete[] argv;
  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `int main2(int argc, char ** argv)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `int main2(int argc, char ** argv)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
