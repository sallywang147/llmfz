Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cups/cups.h>
#include <ipp/ipp.h>

extern "C" {
#include <cups/http-encrypt.h>
}

struct _ipp_s * cupsDoFileRequest(struct _http_s * http, struct _ipp_s * request, char * resource, char * filename);

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  httpConnectEncrypt(NULL, NULL, NULL, NULL, NULL);
  cupsDoFileRequest(NULL, NULL, NULL, NULL);
  return 0;
}
</code>

The code has the following build issues:
<error>
FuzzIPP.c:2:10: fatal error: 'ipp/ipp.h' file not found
#include <ipp/ipp.h>
         ^~~~~~~~~~~
1 error generated.

Fix failure
FuzzIPP.cpp:2:10: fatal error: 'ipp/ipp.h' file not found
#include <ipp/ipp.h>
         ^~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
