Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cups/cups.h>

extern "C" {
#include <cups/cups.h>
}

int main() {
  cupsDoFileRequest(NULL, NULL, NULL, 0, NULL, NULL);
  return 0;
}
</code>

The code has the following build issues:
<error>
FuzzIPP.c:3:8: error: expected identifier or '('
extern "C" {
       ^
FuzzIPP.c:8:42: error: too many arguments to function call, expected 4, have 6
  cupsDoFileRequest(NULL, NULL, NULL, 0, NULL, NULL);
  ~~~~~~~~~~~~~~~~~                      ^~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/stddef.h:89:16: note: expanded from macro 'NULL'
#  define NULL ((void*)0)
               ^
./../cups/cups.h:404:16: note: 'cupsDoFileRequest' declared here
extern ipp_t            *cupsDoFileRequest(http_t *http, ipp_t *request, const char *resource, const char *filename) _CUPS_PUBLIC;
                         ^
2 errors generated.

Fix failure
FuzzIPP.cpp:8:3: error: no matching function for call to 'cupsDoFileRequest'
  cupsDoFileRequest(NULL, NULL, NULL, 0, NULL, NULL);
  ^~~~~~~~~~~~~~~~~
./../cups/cups.h:404:16: note: candidate function not viable: requires 4 arguments, but 6 were provided
extern ipp_t            *cupsDoFileRequest(http_t *http, ipp_t *request, const char *resource, const char *filename) _CUPS_PUBLIC;
                         ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
