Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "gdbm.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  static bool initialized = false;
  if (!initialized) {
    gdbm_init();
    initialized = true;
  }

  std::vector<uint8_t> output_buffer(mpg123_outblock(handle));

  size_t output_written = 0;
  // Initially, start by feeding the decoder more data.
  int decode_ret = MPG123_NEED_MORE;
  FuzzedDataProvider provider(data, size);
  while ((decode_ret != MPG123_ERR)) {
    if (decode_ret == MPG123_NEED_MORE) {
      if (provider.remaining_bytes() == 0
          || mpg123_tellframe(handle) > 10000
          || mpg123_tell_stream(handle) > 1<<20) {
        break;
      }
      const size_t next_size = provider.ConsumeIntegralInRange<size_t>(
          0,
          provider.remaining_bytes());
      auto next_input = provider.ConsumeBytes<unsigned char>(next_size);
      decode_ret = mpg123_decode(handle, next_input.data(), next_input.size(),
                                 output_buffer.data(), output_buffer.size(),
                                 &output_written);
    } else if (decode_ret != MPG123_ERR && decode_ret != MPG123_NEED_MORE) {
      decode_ret = mpg123_decode(handle, nullptr, 0, output_buffer.data(),
                                 output_buffer.size(), &output_written);
    } else {
      // Unhandled mpg123_decode return value.
      abort();
    }
  }

  gdbm_load(&pdbf, "filename", GDBM_WRCREAT, 0644, 0);

  mpg123_delete(handle);

  return 0;
}
</code>

The code has the following build issues:
<error>
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:16:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
gdbm_fuzzer.cpp:14:5: error: use of undeclared identifier 'gdbm_init'
    gdbm_init();
    ^
gdbm_fuzzer.cpp:18:54: error: use of undeclared identifier 'handle'
  std::vector<uint8_t> output_buffer(mpg123_outblock(handle));
                                                     ^
gdbm_fuzzer.cpp:22:20: error: use of undeclared identifier 'MPG123_NEED_MORE'
  int decode_ret = MPG123_NEED_MORE;
                   ^
gdbm_fuzzer.cpp:24:25: error: use of undeclared identifier 'MPG123_ERR'
  while ((decode_ret != MPG123_ERR)) {
                        ^
gdbm_fuzzer.cpp:25:23: error: use of undeclared identifier 'MPG123_NEED_MORE'
    if (decode_ret == MPG123_NEED_MORE) {
                      ^
gdbm_fuzzer.cpp:27:31: error: use of undeclared identifier 'handle'
          || mpg123_tellframe(handle) > 10000
                              ^
gdbm_fuzzer.cpp:28:33: error: use of undeclared identifier 'handle'
          || mpg123_tell_stream(handle) > 1<<20) {
                                ^
gdbm_fuzzer.cpp:35:34: error: use of undeclared identifier 'handle'
      decode_ret = mpg123_decode(handle, next_input.data(), next_input.size(),
                                 ^
gdbm_fuzzer.cpp:38:30: error: use of undeclared identifier 'MPG123_ERR'
    } else if (decode_ret != MPG123_ERR && decode_ret != MPG123_NEED_MORE) {
                             ^
gdbm_fuzzer.cpp:38:58: error: use of undeclared identifier 'MPG123_NEED_MORE'
    } else if (decode_ret != MPG123_ERR && decode_ret != MPG123_NEED_MORE) {
                                                         ^
gdbm_fuzzer.cpp:39:34: error: use of undeclared identifier 'handle'
      decode_ret = mpg123_decode(handle, nullptr, 0, output_buffer.data(),
                                 ^
gdbm_fuzzer.cpp:47:14: error: use of undeclared identifier 'pdbf'
  gdbm_load(&pdbf, "filename", GDBM_WRCREAT, 0644, 0);
             ^
gdbm_fuzzer.cpp:49:17: error: use of undeclared identifier 'handle'
  mpg123_delete(handle);
                ^
13 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
