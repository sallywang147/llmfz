Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include "includes.h"
#include "common.h"
#include "wpa_supplicant_i.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  struct wpa_global *global = wpa_supplicant_init(0);
  if (global == NULL) {
    return 0;
  }
  wpa_supplicant_run(global);
  wpa_supplicant_deinit(global);
  return 0;
}
</code>

The code has the following build issues:
<error>
ap-mgmt.c:(.text.LLVMFuzzerTestOneInput[LLVMFuzzerTestOneInput]+0x0): multiple definition of `LLVMFuzzerTestOneInput'; /usr/bin/ld: DWARF error: invalid or unhandled FORM value: 0x25
fuzzer-common.cpp:(.text.LLVMFuzzerTestOneInput[LLVMFuzzerTestOneInput]+0x20): undefined reference to `wpa_supplicant_init(wpa_params*)'
/usr/bin/ld: fuzzer-common.cpp:(.text.LLVMFuzzerTestOneInput[LLVMFuzzerTestOneInput]+0x36): undefined reference to `wpa_supplicant_run(wpa_global*)'
/usr/bin/ld: fuzzer-common.cpp:(.text.LLVMFuzzerTestOneInput[LLVMFuzzerTestOneInput]+0x3e): undefined reference to `wpa_supplicant_deinit(wpa_global*)'
ap-mgmt.c:(.text.LLVMFuzzerTestOneInput[LLVMFuzzerTestOneInput]+0x107): undefined reference to `wpa_fuzzer_set_debug_level'
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
