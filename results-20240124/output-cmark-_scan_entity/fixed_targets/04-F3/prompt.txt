Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <iostream>
#include <string>

extern "C" {
#include "scan_entity.h"
}

int main() {
  std::string entity_name;
  std::cout << "Enter the entity name: ";
  std::cin >> entity_name;

  int entity_id = scan_entity(entity_name.c_str());
  if (entity_id == -1) {
    std::cout << "Entity not found." << std::endl;
  } else {
    std::cout << "Entity ID: " << entity_id << std::endl;
  }

  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `int _scan_entity(char * )` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `int _scan_entity(char * )` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
