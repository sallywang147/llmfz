#include <iostream>
#include <string>
#include <vector>
#include <google/protobuf/message.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
#include <google/protobuf/io/coded_stream.h>

using namespace google::protobuf;
using namespace google::protobuf::io;

// The following code is generated by protoc.
// It should be placed in a separate header file.
class DynamicTestMessage : public Message {
 public:
  DynamicTestMessage();
  virtual ~DynamicTestMessage();

  // implements Message ----------------------------------------------

  DynamicTestMessage(const DynamicTestMessage& from);
  void CopyFrom(const DynamicTestMessage& from);
  bool MergePartialFromCodedStream(CodedInputStream* input);
  void SerializeWithCachedSizes(CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  const ::google::protobuf::Descriptor* descriptor() const;
  const ::google::protobuf::Reflection* reflection() const;

  // @@protoc_insertion_point(class_scope:DynamicTestMessage)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void serialize_initDynamicTestMessage();
};

void serialize_initDynamicTestMessage() {
  DynamicTestMessage default_instance;
  default_instance.InitAsDefaultInstance();
  ::google::protobuf::internal::InitSCC(&protobuf_DynamicTestMessage_2eproto::scc_info_DynamicTestMessage.base);
}