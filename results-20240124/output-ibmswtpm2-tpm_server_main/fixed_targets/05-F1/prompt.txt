Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "tpm_server.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider stream(data, size);

  int argc = stream.ConsumeIntegral<int>();
  char **argv = new char*[argc + 1];
  for (int i = 0; i < argc; i++) {
    size_t len = stream.ConsumeIntegralInRange<size_t>(0, 1024);
    argv[i] = new char[len + 1];
    stream.ConsumeBytes<char>(argv[i], len);
    argv[i][len] = '\0';
  }
  argv[argc] = nullptr;

  int ret = tpm_server_main(argc, argv);

  for (int i = 0; i < argc; i++) {
    delete[] argv[i];
  }
  delete[] argv;

  return ret;
}
</code>

The code has the following build issues:
<error>
fuzzer.cc:7:10: fatal error: 'tpm_server.h' file not found
#include "tpm_server.h"
         ^~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
