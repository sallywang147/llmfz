Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "tpm_server.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  int argc = provider.ConsumeIntegral<int>();
  std::vector<char*> argv;
  for (int i = 0; i < argc; i++) {
    size_t arg_len = provider.ConsumeIntegralInRange<size_t>(0, size);
    auto arg_data = provider.ConsumeBytes<char>(arg_len);
    argv.push_back(strdup(arg_data.data()));
  }

  tpm_server_main(argc, argv.data());

  for (int i = 0; i < argc; i++) {
    free(argv[i]);
  }

  return 0;
}
</code>

The code has the following build issues:
<error>
fuzzer.cc:9:10: fatal error: 'tpm_server.h' file not found
#include "tpm_server.h"
         ^~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
