---------------------------------------------------------------
Compiling libFuzzer to /usr/lib/libFuzzingEngine.a...  done.
---------------------------------------------------------------
CC=/usr/local/bin/clang-jcc
CXX=/usr/local/bin/clang++-jcc
CFLAGS=-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link
CXXFLAGS=-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++
RUSTFLAGS=--cfg fuzzing -Zsanitizer=address -Cdebuginfo=1 -Cforce-frame-pointers
---------------------------------------------------------------
+ mkdir -p /work/double-conversion
+ cd /work/double-conversion
+ cmake -GNinja /src/double-conversion/
-- The C compiler identification is Clang 15.0.0
-- The CXX compiler identification is Clang 15.0.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/local/bin/clang-jcc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/local/bin/clang++-jcc - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /work/double-conversion
+ ninja
[1/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/cached-powers.cc.o
[2/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/bignum-dtoa.cc.o
[3/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/fast-dtoa.cc.o
[4/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/fixed-dtoa.cc.o
[5/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/strtod.cc.o
[6/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/double-to-string.cc.o
[7/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/bignum.cc.o
[8/9] Building CXX object CMakeFiles/double-conversion.dir/double-conversion/string-to-double.cc.o
[9/9] Linking CXX static library libdouble-conversion.a
+ fuzzer=string_to_double_fuzzer
+ /usr/local/bin/clang++-jcc -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I/src/double-conversion/double-conversion -c /src/string_to_double_fuzzer.cc -o string_to_double_fuzzer.o
/src/string_to_double_fuzzer.cc:26:35: error: no matching constructor for initialization of 'double_conversion::Vector<char>'
  double_conversion::Vector<char> buffer(size);
                                  ^      ~~~~
/src/double-conversion/double-conversion/utils.h:249:7: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'size_t' (aka 'unsigned long') to 'const double_conversion::Vector<char>' for 1st argument
class Vector {
      ^
/src/double-conversion/double-conversion/utils.h:249:7: note: candidate constructor (the implicit move constructor) not viable: no known conversion from 'size_t' (aka 'unsigned long') to 'double_conversion::Vector<char>' for 1st argument
/src/double-conversion/double-conversion/utils.h:251:3: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
  Vector() : start_(DOUBLE_CONVERSION_NULLPTR), length_(0) {}
  ^
/src/double-conversion/double-conversion/utils.h:252:3: note: candidate constructor not viable: requires 2 arguments, but 1 was provided
  Vector(T* data, int len) : start_(data), length_(len) {
  ^
1 error generated.
