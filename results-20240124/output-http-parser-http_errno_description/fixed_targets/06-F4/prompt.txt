Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include "http_parser.h"

#ifdef __cplusplus
extern "C" {
#endif
#include "libfuzzer/libfuzzer_macro.h"
#ifdef __cplusplus
}
#endif

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)
{
  FuzzedDataProvider stream(data, size);
  int err = stream.ConsumeIntegralInRange<int>(0, 100000);

  const char * description = http_errno_description((http_errno)err);
  if (description != NULL)
    free((void*)description);

  return 0;
}
</code>

The code has the following build issues:
<error>
fuzzers/fuzz_url.c:9:10: fatal error: 'libfuzzer/libfuzzer_macro.h' file not found
#include "libfuzzer/libfuzzer_macro.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.

Fix failure
fuzzers/fuzz_url.cpp:9:10: fatal error: 'libfuzzer/libfuzzer_macro.h' file not found
#include "libfuzzer/libfuzzer_macro.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
