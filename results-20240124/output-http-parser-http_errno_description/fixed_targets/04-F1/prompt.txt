Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "http_parser.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  int error_code = provider.ConsumeIntegral<int>();
  char * error_description = http_errno_description(error_code);
  if (error_description) {
    printf("%s\n", error_description);
  }
  return 0;
}
</code>

The code has the following build issues:
<error>
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:16:10: fatal error: 'algorithm' file not found
#include <algorithm>
         ^~~~~~~~~~~
1 error generated.

Fix failure
fuzzers/fuzz_url.cpp:14:30: error: no matching function for call to 'http_errno_description'
  char * error_description = http_errno_description(error_code);
                             ^~~~~~~~~~~~~~~~~~~~~~
./http_parser.h:427:13: note: candidate function not viable: no known conversion from 'int' to 'enum http_errno' for 1st argument
const char *http_errno_description(enum http_errno err);
            ^
fuzzers/fuzz_url.cpp:14:10: error: cannot initialize a variable of type 'char *' with an rvalue of type 'const char *'
  char * error_description = http_errno_description(error_code);
         ^                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
