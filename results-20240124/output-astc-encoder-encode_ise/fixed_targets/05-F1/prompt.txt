Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  int quant_level = stream.ConsumeIntegral<int>();
  int character_count = stream.ConsumeIntegral<int>();
  char* input_data = const_cast<char*>(stream.ConsumeRemainingBytes().data());
  char* output_data = const_cast<char*>(stream.ConsumeRemainingBytes().data());
  int bit_offset = stream.ConsumeIntegral<int>();

  encode_ise(quant_level, character_count, input_data, output_data, bit_offset);

  return 0;
}
</code>

The code has the following build issues:
<error>
./Fuzzers/fuzz_astc_physical_to_symbolic.cpp:11:47: error: no matching member function for call to 'ConsumeRemainingBytes'
  char* input_data = const_cast<char*>(stream.ConsumeRemainingBytes().data());
                                       ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:128:36: note: candidate template ignored: couldn't infer template argument 'T'
std::vector<T> FuzzedDataProvider::ConsumeRemainingBytes() {
                                   ^
./Fuzzers/fuzz_astc_physical_to_symbolic.cpp:12:48: error: no matching member function for call to 'ConsumeRemainingBytes'
  char* output_data = const_cast<char*>(stream.ConsumeRemainingBytes().data());
                                        ~~~~~~~^~~~~~~~~~~~~~~~~~~~~
/usr/local/lib/clang/15.0.0/include/fuzzer/FuzzedDataProvider.h:128:36: note: candidate template ignored: couldn't infer template argument 'T'
std::vector<T> FuzzedDataProvider::ConsumeRemainingBytes() {
                                   ^
./Fuzzers/fuzz_astc_physical_to_symbolic.cpp:15:3: error: use of undeclared identifier 'encode_ise'
  encode_ise(quant_level, character_count, input_data, output_data, bit_offset);
  ^
3 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
