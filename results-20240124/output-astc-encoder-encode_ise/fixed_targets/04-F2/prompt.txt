Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include "astc_codec.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  const int quant_level = stream.ConsumeIntegralInRange<int>(0, 100);
  const int character_count = stream.ConsumeIntegralInRange<int>(1, 100);
  char* input_data = new char[character_count];
  stream.ConsumeData(input_data, character_count);
  char* output_data = new char[character_count];
  const int bit_offset = stream.ConsumeIntegralInRange<int>(0, 100);

  encode_ise(quant_level, character_count, input_data, output_data, bit_offset);

  delete[] input_data;
  delete[] output_data;

  return 0;
}
</code>

The code has the following build issues:
<error>
./Fuzzers/fuzz_astc_physical_to_symbolic.cpp:5:10: fatal error: 'astc_codec.h' file not found
#include "astc_codec.h"
         ^~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
