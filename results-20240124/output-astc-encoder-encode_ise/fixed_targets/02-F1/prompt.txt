Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cstring>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  const int quant_level = stream.ConsumeIntegral<int>();
  const int character_count = stream.ConsumeIntegral<int>();
  const int bit_offset = stream.ConsumeIntegral<int>();

  std::vector<char> input_data = stream.ConsumeBytes<char>(character_count);
  std::vector<char> output_data(character_count);

  encode_ise(quant_level, character_count, input_data.data(), output_data.data(),
             bit_offset);

  return 0;
}
</code>

The code has the following build issues:
<error>
./Fuzzers/fuzz_astc_physical_to_symbolic.cpp:19:3: error: use of undeclared identifier 'encode_ise'
  encode_ise(quant_level, character_count, input_data.data(), output_data.data(),
  ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
