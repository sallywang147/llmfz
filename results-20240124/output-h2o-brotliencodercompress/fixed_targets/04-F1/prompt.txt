Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <cstdint>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>

#include "brotli/encode.h"
#include "fuzzer/FuzzedDataProvider.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t input_size = stream.ConsumeIntegralInRange<size_t>(0, 1 << 20);
  const std::vector<uint8_t> input_data = stream.ConsumeBytes<uint8_t>(input_size);

  const int quality = stream.ConsumeIntegralInRange<int>(0, 11);
  const int lgwin = stream.ConsumeIntegralInRange<int>(10, 24);
  const int lgblock = stream.ConsumeIntegralInRange<int>(0, 24);

  size_t output_size = input_size;
  std::vector<uint8_t> output_data(output_size);
  BrotliEncoderCompress(quality, lgwin, lgblock, input_size, input_data.data(),
                        &output_size, output_data.data());
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
