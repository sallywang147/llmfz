Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <stdint.h>
#include <stdlib.h>

extern "C" char * yy_flex_xmalloc(int size) {
  char *ptr = (char *)malloc(size);
  return ptr;
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < 4) {
    return 0;
  }
  int size_fuzz = 0;
  memcpy(&size_fuzz, data, 4);
  yy_flex_xmalloc(size_fuzz);
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/fuzz-main.c:4:8: error: expected identifier or '('
extern "C" char * yy_flex_xmalloc(int size) {
       ^
/src/fuzz-main.c:9:8: error: expected identifier or '('
extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
       ^
2 errors generated.

Fix failure
/src/fuzz-main.cpp:14:3: error: use of undeclared identifier 'memcpy'
  memcpy(&size_fuzz, data, 4);
  ^
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
