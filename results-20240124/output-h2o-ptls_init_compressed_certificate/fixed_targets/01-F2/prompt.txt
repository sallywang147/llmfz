Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "ptls.h"

extern "C" {
#include "ptls/ptls.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t cert_size = stream.ConsumeIntegralInRange<size_t>(0, 1024);
  const std::string cert = stream.ConsumeBytesAsString(cert_size);
  const std::string key = stream.ConsumeBytesAsString(cert_size);

  struct st_ptls_emit_compressed_certificate_t emit_compressed_certificate;
  ptls_init_compressed_certificate(&emit_compressed_certificate, nullptr, 0,
                                   const_cast<char*>(cert.c_str()), cert_size);
  ptls_init_compressed_certificate(&emit_compressed_certificate, nullptr, 0,
                                   const_cast<char*>(key.c_str()), key.size());
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/h2o/fuzz/driver_h3.cc:8:10: fatal error: 'ptls.h' file not found
#include "ptls.h"
         ^~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
