Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <boost/regex/pattern_except.hpp>
#include <boost/regex/regex_parser.hpp>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {
  FuzzedDataProvider fuzzed_data(Data, Size);
  size_t regex_length = fuzzed_data.ConsumeIntegral<uint8_t>();
  std::string regex_string = fuzzed_data.ConsumeBytesAsString(regex_length);
  try {
    boost::re_detail_500::basic_regex_parser<char, boost::regex_traits<char, boost::cpp_regex_traits<char> > > parser;
    parser.parse_basic(regex_string.c_str());
  }
  catch (boost::regex_error &) {
  }
  return 0;
}
</code>

The code has the following build issues:
<error>
../boost_ptree_jsonread_fuzzer.cc:3:10: fatal error: 'boost/regex/regex_parser.hpp' file not found
#include <boost/regex/regex_parser.hpp>
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
