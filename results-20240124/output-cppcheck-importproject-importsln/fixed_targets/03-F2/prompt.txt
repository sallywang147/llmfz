Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <fstream>
#include <iostream>
#include <string>
#include <vector>

class ImportProject {
public:
  bool importSln(ImportProject*, std::istream*, std::string*, std::vector<std::string>*);
};

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  std::string sln_file = stream.ConsumeRemainingBytesAsString();
  std::ifstream in(sln_file);
  if (!in.is_open()) {
    return 0;
  }

  std::string solution_filename = stream.ConsumeRemainingBytesAsString();
  std::vector<std::string> project_filenames;
  ImportProject import_project;
  import_project.importSln(nullptr, &in, &solution_filename, &project_filenames);
  return 0;
}
</code>

The code has the following build issues:
<error>
main.cpp:(.text.LLVMFuzzerTestOneInput[LLVMFuzzerTestOneInput]+0x34c): undefined reference to `ImportProject::importSln(ImportProject*, std::__1::basic_istream<char, std::__1::char_traits<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)'
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
