Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <iostream>
#include <string>
#include <vector>

#include "importproject.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  ImportProject import_project;
  std::string sln_path;
  std::vector<std::string> import_paths;
  import_project.importSln(&import_project, &std::cin, &sln_path, &import_paths);
  return 0;
}
</code>

The code has the following build issues:
<error>
main.cpp:17:18: error: 'importSln' is a private member of 'ImportProject'
  import_project.importSln(&import_project, &std::cin, &sln_path, &import_paths);
                 ^
../lib/importproject.h:103:10: note: declared private here
    bool importSln(std::istream &istr, const std::string &path, const std::vector<std::string> &fileFilters);
         ^
main.cpp:17:67: error: too many arguments to function call, expected 3, have 4
  import_project.importSln(&import_project, &std::cin, &sln_path, &import_paths);
  ~~~~~~~~~~~~~~~~~~~~~~~~                                        ^~~~~~~~~~~~~
../lib/importproject.h:103:10: note: 'importSln' declared here
    bool importSln(std::istream &istr, const std::string &path, const std::vector<std::string> &fileFilters);
         ^
2 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
