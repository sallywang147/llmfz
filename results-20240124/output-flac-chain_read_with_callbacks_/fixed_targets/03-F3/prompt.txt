Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <FLAC/metadata.h>

static void run_tests_with_level_2_interface(char filename[], bool ogg, bool use_padding, const uint8_t *data, size_t size) {
    FLAC::Metadata::Chain chain;
    FLAC::Metadata::Iterator iterator;
    FLAC::Metadata::Prototype *metadata_block_get = nullptr;
    FLAC::Metadata::Prototype *metadata_block_transfer = nullptr;
    FLAC::Metadata::Prototype *metadata_block_put = nullptr;

    if (!chain.is_valid())
        return;

    // Add the call to chain_read_with_callbacks_ here
    if (!chain.read_with_callbacks(filename, ogg))
        return;

    iterator.init(chain);

    for (size_t i = 0; i < size; i++) {
        // Rest of the code remains the same
    }

    if (metadata_block_transfer != 0) {
        delete metadata_block_transfer;
        metadata_block_transfer = nullptr;
    }

    chain.status();
    chain.sort_padding();
    chain.merge_padding();

    chain.check_if_tempfile_needed(!use_padding);
    chain.write(use_padding);
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
