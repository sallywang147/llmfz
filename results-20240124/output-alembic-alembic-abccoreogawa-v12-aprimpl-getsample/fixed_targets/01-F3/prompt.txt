Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "alembic/lib/Alembic/AbcCoreOgawa/All.h"
#include "alembic/lib/Alembic/AbcCoreOgawa/AprImpl.h"

#include "fuzzer_temp_file.h"

using namespace Alembic::AbcCoreOgawa::v12;

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzerTemporaryFile tempFile(data, size);
  int fd = open(tempFile.filename(), O_RDONLY);
  if (fd < 0) {
    err(EXIT_FAILURE, "open");
  }
  ReadData readData(fd);
  DataHeader dataHeader;
  dataHeader.read(readData);
  AprImpl aprImpl(dataHeader, readData);
  std::shared_ptr<CprData> cprData;
  aprImpl.getSample(0, &cprData);
  close(fd);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/alembic_dump_info_fuzzer.cc:23:3: error: unknown type name 'ReadData'
  ReadData readData(fd);
  ^
/src/alembic_dump_info_fuzzer.cc:24:3: error: unknown type name 'DataHeader'
  DataHeader dataHeader;
  ^
/src/alembic_dump_info_fuzzer.cc:27:19: error: use of undeclared identifier 'CprData'
  std::shared_ptr<CprData> cprData;
                  ^
3 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
