Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
 #include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "alembic/lib/Alembic/AbcCoreOgawa/All.h"
#include "alembic/lib/Alembic/AbcCoreOgawa/AprImpl.h"

#include "fuzzer_temp_file.h"

using Alembic::AbcCoreOgawa::v12::AprImpl;
using Alembic::AbcCoreOgawa::v12::CprImpl;
using Alembic::AbcCoreOgawa::v12::DataHeader;
using Alembic::AbcCoreOgawa::v12::ReadData;

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzerTemporaryFile tempFile(data, size);
  int fd = open(tempFile.filename(), O_RDONLY);
  if (fd < 0) {
    err(EXIT_FAILURE, "open");
  }
  ReadData readData(fd);
  DataHeader dataHeader;
  dataHeader.read(readData);
  AprImpl aprImpl;
  aprImpl.init(dataHeader, readData);
  std::shared_ptr<CprImpl> cprImpl;
  aprImpl.getSample(0, &cprImpl);
  close(fd);

  return 0;
}
</code>

The code has the following build issues:
<error>
/src/alembic_dump_info_fuzzer.cc:16:35: error: no member named 'CprImpl' in namespace 'Alembic::AbcCoreOgawa::v12'; did you mean 'AprImpl'?
using Alembic::AbcCoreOgawa::v12::CprImpl;
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
                                  AprImpl
/src/alembic/lib/Alembic/AbcCoreOgawa/AprImpl.h:47:7: note: 'AprImpl' declared here
class AprImpl :
      ^
/src/alembic_dump_info_fuzzer.cc:17:35: error: no member named 'DataHeader' in namespace 'Alembic::AbcCoreOgawa::v12'
using Alembic::AbcCoreOgawa::v12::DataHeader;
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
/src/alembic_dump_info_fuzzer.cc:18:35: error: no member named 'ReadData' in namespace 'Alembic::AbcCoreOgawa::v12'
using Alembic::AbcCoreOgawa::v12::ReadData;
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
/src/alembic_dump_info_fuzzer.cc:26:3: error: unknown type name 'ReadData'
  ReadData readData(fd);
  ^
/src/alembic_dump_info_fuzzer.cc:27:3: error: unknown type name 'DataHeader'
  DataHeader dataHeader;
  ^
/src/alembic_dump_info_fuzzer.cc:29:11: error: no matching constructor for initialization of 'Alembic::AbcCoreOgawa::v12::AprImpl'
  AprImpl aprImpl;
          ^
/src/alembic/lib/Alembic/AbcCoreOgawa/AprImpl.h:47:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 0 were provided
class AprImpl :
      ^
/src/alembic/lib/Alembic/AbcCoreOgawa/AprImpl.h:52:5: note: candidate constructor not viable: requires 3 arguments, but 0 were provided
    AprImpl( AbcA::CompoundPropertyReaderPtr iParent,
    ^
/src/alembic_dump_info_fuzzer.cc:30:11: error: no member named 'init' in 'Alembic::AbcCoreOgawa::v12::AprImpl'
  aprImpl.init(dataHeader, readData);
  ~~~~~~~ ^
/src/alembic_dump_info_fuzzer.cc:31:19: error: use of undeclared identifier 'CprImpl'
  std::shared_ptr<CprImpl> cprImpl;
                  ^
8 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
