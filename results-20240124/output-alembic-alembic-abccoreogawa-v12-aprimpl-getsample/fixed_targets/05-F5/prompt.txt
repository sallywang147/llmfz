Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <iostream>
#include <vector>

#include <Alembic/AbcGeom/IPolyMesh.h>

using namespace Alembic::AbcGeom;

class MyPolyMesh : public IPolyMesh {
public:
  MyPolyMesh(const ObjectHeader &header, const Abc::Argument &args)
      : IPolyMesh(header, args) {}

  bool matches(const ObjectHeader &header) const override {
    return true;
  }

  void getSchemaObject(Abc::IObject &parent, Abc::CompoundPropertyWriterPtr &propWriter,
                       bool isWrite) const override {}

  void getSelfBounds(Box3d &box, const SampleSelector &sampleIndex) const override {}

  void getFaceIndices(std::vector<int32_t> &indices, const SampleSelector &sampleIndex) const override {}

  void getFaceCounts(std::vector<int32_t> &counts, const SampleSelector &sampleIndex) const override {}

  void getPositions(std::vector<V3f> &positions, const SampleSelector &sampleIndex) const override {}

  void getNormals(std::vector<V3f> &normals, const SampleSelector &sampleIndex) const override {}

  void getUVs(std::vector<V2f> &uvs, const SampleSelector &sampleIndex) const override {}

  void getColors(std::vector<C3f> &colors, const SampleSelector &sampleIndex) const override {}
};

extern "C" {
#include <Alembic/AbcCoreOgawa/v12/AprImpl.h>
}

void LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  Alembic::AbcCoreOgawa::v12::AprImpl impl;
  std::shared_ptr<Alembic::AbcGeom::IPolyMesh> polyMesh;
  impl.getSample(&polyMesh, size, &data);
}

int main() {
  return 0;
}
</code>

The code has the following build issues:
<error>
/src/alembic_dump_info_fuzzer.cc:13:50: error: only virtual member functions can be marked 'override'
  bool matches(const ObjectHeader &header) const override {
                                                 ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:18:44: error: only virtual member functions can be marked 'override'
                       bool isWrite) const override {}
                                           ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:20:40: error: unknown type name 'SampleSelector'; did you mean 'ISampleSelector'?
  void getSelfBounds(Box3d &box, const SampleSelector &sampleIndex) const override {}
                                       ^~~~~~~~~~~~~~
                                       ISampleSelector
/src/alembic/lib/Alembic/Abc/ISampleSelector.h:48:22: note: 'ISampleSelector' declared here
class ALEMBIC_EXPORT ISampleSelector
                     ^
/src/alembic_dump_info_fuzzer.cc:20:75: error: only virtual member functions can be marked 'override'
  void getSelfBounds(Box3d &box, const SampleSelector &sampleIndex) const override {}
                                                                          ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:22:60: error: unknown type name 'SampleSelector'; did you mean 'ISampleSelector'?
  void getFaceIndices(std::vector<int32_t> &indices, const SampleSelector &sampleIndex) const override {}
                                                           ^~~~~~~~~~~~~~
                                                           ISampleSelector
/src/alembic/lib/Alembic/Abc/ISampleSelector.h:48:22: note: 'ISampleSelector' declared here
class ALEMBIC_EXPORT ISampleSelector
                     ^
/src/alembic_dump_info_fuzzer.cc:22:95: error: only virtual member functions can be marked 'override'
  void getFaceIndices(std::vector<int32_t> &indices, const SampleSelector &sampleIndex) const override {}
                                                                                              ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:24:58: error: unknown type name 'SampleSelector'; did you mean 'ISampleSelector'?
  void getFaceCounts(std::vector<int32_t> &counts, const SampleSelector &sampleIndex) const override {}
                                                         ^~~~~~~~~~~~~~
                                                         ISampleSelector
/src/alembic/lib/Alembic/Abc/ISampleSelector.h:48:22: note: 'ISampleSelector' declared here
class ALEMBIC_EXPORT ISampleSelector
                     ^
/src/alembic_dump_info_fuzzer.cc:24:93: error: only virtual member functions can be marked 'override'
  void getFaceCounts(std::vector<int32_t> &counts, const SampleSelector &sampleIndex) const override {}
                                                                                            ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:26:56: error: unknown type name 'SampleSelector'; did you mean 'ISampleSelector'?
  void getPositions(std::vector<V3f> &positions, const SampleSelector &sampleIndex) const override {}
                                                       ^~~~~~~~~~~~~~
                                                       ISampleSelector
/src/alembic/lib/Alembic/Abc/ISampleSelector.h:48:22: note: 'ISampleSelector' declared here
class ALEMBIC_EXPORT ISampleSelector
                     ^
/src/alembic_dump_info_fuzzer.cc:26:91: error: only virtual member functions can be marked 'override'
  void getPositions(std::vector<V3f> &positions, const SampleSelector &sampleIndex) const override {}
                                                                                          ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:28:52: error: unknown type name 'SampleSelector'; did you mean 'ISampleSelector'?
  void getNormals(std::vector<V3f> &normals, const SampleSelector &sampleIndex) const override {}
                                                   ^~~~~~~~~~~~~~
                                                   ISampleSelector
/src/alembic/lib/Alembic/Abc/ISampleSelector.h:48:22: note: 'ISampleSelector' declared here
class ALEMBIC_EXPORT ISampleSelector
                     ^
/src/alembic_dump_info_fuzzer.cc:28:87: error: only virtual member functions can be marked 'override'
  void getNormals(std::vector<V3f> &normals, const SampleSelector &sampleIndex) const override {}
                                                                                      ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:30:44: error: unknown type name 'SampleSelector'; did you mean 'ISampleSelector'?
  void getUVs(std::vector<V2f> &uvs, const SampleSelector &sampleIndex) const override {}
                                           ^~~~~~~~~~~~~~
                                           ISampleSelector
/src/alembic/lib/Alembic/Abc/ISampleSelector.h:48:22: note: 'ISampleSelector' declared here
class ALEMBIC_EXPORT ISampleSelector
                     ^
/src/alembic_dump_info_fuzzer.cc:30:79: error: only virtual member functions can be marked 'override'
  void getUVs(std::vector<V2f> &uvs, const SampleSelector &sampleIndex) const override {}
                                                                              ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:32:50: error: unknown type name 'SampleSelector'; did you mean 'ISampleSelector'?
  void getColors(std::vector<C3f> &colors, const SampleSelector &sampleIndex) const override {}
                                                 ^~~~~~~~~~~~~~
                                                 ISampleSelector
/src/alembic/lib/Alembic/Abc/ISampleSelector.h:48:22: note: 'ISampleSelector' declared here
class ALEMBIC_EXPORT ISampleSelector
                     ^
/src/alembic_dump_info_fuzzer.cc:32:85: error: only virtual member functions can be marked 'override'
  void getColors(std::vector<C3f> &colors, const SampleSelector &sampleIndex) const override {}
                                                                                    ^~~~~~~~~
/src/alembic_dump_info_fuzzer.cc:11:9: error: no matching constructor for initialization of 'Alembic::AbcGeom::v12::IPolyMesh' (aka 'ISchemaObject<Alembic::AbcGeom::v12::IPolyMeshSchema>')
      : IPolyMesh(header, args) {}
        ^         ~~~~~~~~~~~~
/src/alembic/lib/Alembic/Abc/ISchemaObject.h:160:5: note: candidate constructor not viable: no known conversion from 'const Alembic::AbcCoreAbstract::v12::ObjectHeader' to 'const Alembic::Abc::v12::IObject' for 1st argument
    ISchemaObject( const IObject & iObject,
    ^
/src/alembic/lib/Alembic/Abc/ISchemaObject.h:127:5: note: candidate constructor not viable: no known conversion from 'const Alembic::AbcCoreAbstract::v12::ObjectHeader' to 'const Alembic::Abc::v12::IObject' for 1st argument
    ISchemaObject( const IObject & iParent,
    ^
/src/alembic/lib/Alembic/Abc/ISchemaObject.h:189:5: note: candidate constructor not viable: no known conversion from 'const Alembic::AbcCoreAbstract::v12::ObjectHeader' to 'const Alembic::Abc::v12::IObject' for 1st argument
    ISchemaObject( const IObject & iObject,
    ^
/src/alembic/lib/Alembic/Abc/ISchemaObject.h:55:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 2 were provided
class ISchemaObject : public IObject
      ^
/src/alembic/lib/Alembic/Abc/ISchemaObject.h:55:7: note: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 2 were provided
/src/alembic/lib/Alembic/Abc/ISchemaObject.h:124:5: note: candidate constructor not viable: requires 0 arguments, but 2 were provided
    ISchemaObject() {}
    ^
/src/alembic_dump_info_fuzzer.cc:36:10: fatal error: 'Alembic/AbcCoreOgawa/v12/AprImpl.h' file not found
#include <Alembic/AbcCoreOgawa/v12/AprImpl.h>
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
18 errors generated.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
