Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "../src/daemon/lldpd.h"

#define kMinInputLength 5
#define kMaxInputLength 2048

/* Use this callback to avoid some logs */
void donothing(int pri, const char *msg) {};

extern "C" {
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
}

extern int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {
  if (Size < kMinInputLength || Size > kMaxInputLength) {
    return 1;
  }

  struct lldpd cfg;
  cfg.g_config.c_mgmt_pattern = NULL;
  cfg.g_config.c_tx_hold = LLDPD_TX_HOLD;

  struct lldpd_chassis *nchassis = NULL;
  struct lldpd_port *nport = NULL;
  struct lldpd_hardware hardware;
  TAILQ_INIT(&hardware.h_rports);
  log_register(donothing);

  edp_decode(&cfg, (char *)Data, Size, &hardware, &nchassis, &nport);

  if (!nchassis || !nport) {
    return 1;
  }

  lldpd_port_cleanup(nport, 1);
  free(nport);
  lldpd_chassis_cleanup(nchassis, 1);

  lldpd_loop(&cfg);

  return 0;
}

extern "C" {
#include <edp/edp.h>
}
```

The fixed code includes the missing header `#include <edp/edp.h>` which is necessary for the `edp_decode` function. This resolves the undefined reference error.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
