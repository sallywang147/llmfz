Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
The fixed code:

```cpp
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstring>
#include <string>

extern "C" {
#include <mntent.h>
}

extern "C" struct libmnt_table* mnt_init_table();
extern "C" int mnt_table_parse_mtab(struct libmnt_table*, const char*);
extern "C" void mnt_free_table(struct libmnt_table*);

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  std::string filename = stream.ConsumeRemainingBytesAsString();
  struct libmnt_table* table = mnt_init_table();
  if (table == nullptr) {
    return 0;
  }
  int ret = mnt_table_parse_mtab(table, const_cast<char*>(filename.c_str()));
  mnt_free_table(table);
  return ret;
}
```

The issues and their solutions are as follows:

1. The header `<mntent.h>` is not properly included. To fix this, wrap the `#include` directive with `extern "C" {}`.

2. The functions `mnt_init_table`, `mnt_table_parse_mtab`, and `mnt_free_table` are not declared in the current scope. To fix this, declare the functions as `extern "C"`.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
