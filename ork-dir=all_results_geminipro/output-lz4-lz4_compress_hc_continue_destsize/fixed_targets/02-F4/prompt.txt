Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <vector>

extern "C" {
#include "lz4hc.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  LZ4_streamHC_t* LZ4_streamHCPtr = LZ4_createStreamHC();
  if (LZ4_streamHCPtr == nullptr) {
    return 0;
  }

  const size_t src_size = stream.ConsumeIntegralInRange<size_t>(0, 1024);
  std::vector<char> src(src_size);
  stream.ConsumeBytes<char>(src.data(), src_size);

  const size_t target_dest_size =
      stream.ConsumeIntegralInRange<size_t>(0, 1024);
  std::vector<char> dst(target_dest_size);

  int src_size_ptr = src_size;
  const int ret = LZ4_compress_HC_continue_destSize(
      LZ4_streamHCPtr, src.data(), dst.data(), &src_size_ptr, target_dest_size);
  if (ret != 0) {
    return 0;
  }

  LZ4_freeStreamHC(LZ4_streamHCPtr);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
