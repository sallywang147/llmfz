Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

extern "C" {
#include <nghttp2/nghttp2.h>
#include <string.h>

#define BUFFER_SIZE 1024

void check_nghttp2_session_upgrade2(FuzzedDataProvider *data_provider) {
  nghttp2_session *session;
  char *buffer;
  size_t buffer_size;
  int rv;
  char *settings_payload;

  session = nghttp2_session_client_new();
  buffer = data_provider->ConsumeBytes<char>(BUFFER_SIZE);
  buffer_size = data_provider->ConsumeIntegralInRange(0, BUFFER_SIZE);
  settings_payload = data_provider->ConsumeBytes<char>(BUFFER_SIZE);

  /* Perform a set of operations with the fuzz data */
  rv = nghttp2_session_upgrade2(session, buffer, buffer_size, NGHTTP2_PROTO_HTTP2, settings_payload);
  if (rv == 0) {
    nghttp2_session_del(session);
  }

  /* Cleanup */
  free(buffer);
  free(settings_payload);
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider data_provider(data, size);

  check_nghttp2_session_upgrade2(&data_provider);
  return 0;
}

} // extern "C"
```

The error message indicates that the function `nghttp2_session_client_new` is undefined. This is because the header `nghttp2/nghttp2.h` is not properly included. To fix this, the `#include` directive for this header should be wrapped with `extern "C" {}`.

The corrected code is shown below:

```c++
#include <fuzzer/FuzzedDataProvider.h>

extern "C" {
#include <nghttp2/nghttp2.h>
#include <string.h>

#define BUFFER_SIZE 1024

void check_nghttp2_session_upgrade2(FuzzedDataProvider *data_provider) {
  nghttp2_session *session;
  char *buffer;
  size_t buffer_size;
  int rv;
  char *settings_payload;

  session = nghttp2_session_client_new();
  buffer = data_provider->ConsumeBytes<char>(BUFFER_SIZE);
  buffer_size = data_provider->ConsumeIntegralInRange(0, BUFFER_SIZE);
  settings_payload = data_provider->ConsumeBytes<char>(BUFFER_SIZE);

  /* Perform a set of operations with the fuzz data */
  rv = nghttp2_session_upgrade2(session, buffer, buffer_size, NGHTTP2_PROTO_HTTP2, settings_payload);
  if (rv == 0) {
    nghttp2_session_del(session);
  }

  /* Cleanup */
  free(buffer);
  free(settings_payload);
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider data_provider(data, size);

  check_nghttp2_session_upgrade2(&data_provider);
  return 0;
}

} // extern "C"
```

With this change, the code should compile and run successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
