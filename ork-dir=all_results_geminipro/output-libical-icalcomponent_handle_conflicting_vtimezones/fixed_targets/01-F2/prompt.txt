Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>

#include <libical/ical.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  char *ical_string1 = (char *)malloc(size + 1);
  memcpy(ical_string1, data, size);
  ical_string1[size] = '\0';

  icalcomponent *ical1 = icalcomponent_new_from_string(ical_string1);
  if (ical1 != NULL) {
    icalcomponent *vtimezone = icalcomponent_new(ICAL_VTIMEZONE_COMPONENT);
    icalcomponent_add_property(vtimezone, icalproperty_new_tzid("US-Eastern"));
    icalcomponent_handle_conflicting_vtimezones(ical1, vtimezone, NULL, NULL, NULL);
    icalcomponent_free(vtimezone);
  }
  icalcomponent_free(ical1);
  free(ical_string1);

  return 0;
}
```

The original code had several issues:

1. The `libical` library was not properly linked to the program, resulting in the linker error `undefined reference to 'icalcomponent_new_from_string'`. To fix this, the `libical` library needs to be linked to the program during compilation. This can be done by adding the `-lical` flag to the compiler command.

2. The `icalcomponent_new` function was not properly declared, resulting in the compiler error `'icalcomponent_new' was not declared in this scope`. To fix this, the `icalcomponent_new` function needs to be declared before it is used. This can be done by including the `libical/ical.h` header file, which contains the declaration for the `icalcomponent_new` function.

3. The `icalcomponent_add_property` function was not properly declared, resulting in the compiler error `'icalcomponent_add_property' was not declared in this scope`. To fix this, the `icalcomponent_add_property` function needs to be declared before it is used. This can be done by including the `libical/ical.h` header file, which contains the declaration for the `icalcomponent_add_property` function.

4. The `icalcomponent_handle_conflicting_vtimezones` function was not properly declared, resulting in the compiler error `'icalcomponent_handle_conflicting_vtimezones' was not declared in this scope`. To fix this, the `icalcomponent_handle_conflicting_vtimezones` function needs to be declared before it is used. This can be done by including the `libical/ical.h` header file, which contains the declaration for the `icalcomponent_handle_conflicting_vtimezones` function.

5. The `icalcomponent_free` function was not properly declared, resulting in the compiler error `'icalcomponent_free' was not declared in this scope`. To fix this, the `icalcomponent_free` function needs to be declared before it is used. This can be done by including the `libical/ical.h` header file, which contains the declaration for the `icalcomponent_free` function.

After fixing these issues, the program should compile and run successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
