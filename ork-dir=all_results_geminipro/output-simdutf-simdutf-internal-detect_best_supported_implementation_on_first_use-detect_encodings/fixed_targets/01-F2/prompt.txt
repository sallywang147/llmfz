Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "simdutf/public/simdutf.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const std::string text = stream.ConsumeRemainingBytesAsString();

  simdutf::detect_best_supported_implementation_on_first_use::detect_encodings(
      nullptr, reinterpret_cast<char*>(const_cast<char*>(text.c_str())), text.size());
  return 0;
}
```

Changes made:

- Included the necessary header `simdutf/public/simdutf.h` to use the `simdutf` library.
- Changed the `#include` directive for `simdutf/internal/detect_best_supported_implementation_on_first_use.h` to use the public header instead.
- Removed the unnecessary `extern "C"` wrapper around the `#include` directive for `simdutf/public/simdutf.h` since it is already a C header.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
