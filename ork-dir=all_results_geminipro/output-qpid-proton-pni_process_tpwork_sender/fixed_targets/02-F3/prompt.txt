Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>

#include "proton/pn.h"
#include "proton/pni.h"

extern "C" {
#include "proton/pn_transport.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  pn_transport_t* transport = pn_transport();
  if (transport == nullptr) {
    return 0;
  }

  pn_delivery_t* delivery = pn_delivery(transport);
  if (delivery == nullptr) {
    pn_free(transport);
    return 0;
  }

  const size_t payload_size = stream.ConsumeIntegralInRange<size_t>(0, size);
  char* payload = stream.ConsumeBytes<char>(payload_size);

  int result = pni_process_tpwork_sender(transport, delivery, payload);

  pn_free(transport);
  pn_free(delivery);
  return result;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
