Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>

#include <unicode/uloc.h>

extern "C" {
#include <unicode/ustring.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  if (size == 0) {
    return 0;
  }
  FuzzedDataProvider provider(data, size);
  const size_t localeIDCapacity = provider.ConsumeIntegralInRange<size_t>(1, 256);
  std::vector<char> localeID(localeIDCapacity, '\0');
  provider.ConsumeBytes(localeID.data(), localeIDCapacity - 1);
  const size_t langtagCapacity = provider.ConsumeIntegralInRange<size_t>(1, 256);
  std::vector<char> langtag(langtagCapacity, '\0');
  int status = 0;
  char strict = provider.ConsumeBool() ? 't' : 'f';
  uloc_toLanguageTag(localeID.data(), langtag.data(), langtagCapacity, strict, &status);
  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `int uloc_toLanguageTag_59(char * localeID, char * langtag, int langtagCapacity, char strict, int * status)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `int uloc_toLanguageTag_59(char * localeID, char * langtag, int langtagCapacity, char strict, int * status)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
