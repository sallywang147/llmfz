Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>

#include <unicode/uloc.h>

extern "C" {
#include <unicode/ustring.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  if (size == 0) {
    return 0;
  }
  FuzzedDataProvider provider(data, size);
  const size_t localeIDCapacity = provider.ConsumeIntegralInRange<size_t>(1, 256);
  std::vector<char> localeID(localeIDCapacity, '\0');
  provider.ConsumeBytes(localeID.data(), localeIDCapacity - 1);
  const size_t langtagCapacity = provider.ConsumeIntegralInRange<size_t>(1, 256);
  std::vector<char> langtag(langtagCapacity, '\0');
  int status = 0;
  char strict = provider.ConsumeBool() ? 't' : 'f';
  uloc_toLanguageTag(localeID.data(), langtag.data(), langtagCapacity, strict, &status);
  return 0;
}

int uloc_toLanguageTag_59(char * localeID, char * langtag, int langtagCapacity, char strict, int * status) {
  return uloc_toLanguageTag(localeID, langtag, langtagCapacity, strict, status);
}
```

The original code has the following issues:

1. The `uloc_toLanguageTag` function is declared with the `int` return type, but the definition has the `void` return type. This mismatch causes the linker error.
2. The `uloc_toLanguageTag_59` function is declared with the `int` return type, but the definition has the `void` return type. This mismatch causes the linker error.

To fix the code, we need to make sure that the return types of the function declarations and definitions match. We also need to make sure that the function declarations and definitions have the same parameters.

The corrected code is shown above.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
