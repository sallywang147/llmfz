Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstring>
#include <string>

#include "dss.h"
#include "ed25519.h"
#include "fuzz.h"
#include "session.h"
#include "signkey.h"
#include "ssh.h"
#include <cstdio>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const int keytype = stream.ConsumeIntegral<int>();
  const int bits = stream.ConsumeIntegral<int>();
  const std::string filename = stream.ConsumeBytesAsString(stream.ConsumeIntegralInRange(0, 1024));
  const int skip_exist = stream.ConsumeBool();

  signkey_generate(keytype, bits, filename.c_str(), skip_exist);
  return 0;
}
```

The code has the following build issues:
<error>
```
error: undefined reference to `signkey_generate'
```
</error>

The error message indicates that the function `signkey_generate` is not defined. This means that the header file that declares the function is not included in the program.

To fix the error, add the following line to the beginning of the program:

```c++
#include "signkey.h"
```

This will include the header file that declares the `signkey_generate` function.

The corrected code:
```c++
#include <fuzzer/FuzzedDataProvider.h>
#include "signkey.h"

#include <cstddef>
#include <cstdint>
#include <cstring>
#include <string>

#include "dss.h"
#include "ed25519.h"
#include "fuzz.h"
#include "session.h"
#include "ssh.h"
#include <cstdio>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const int keytype = stream.ConsumeIntegral<int>();
  const int bits = stream.ConsumeIntegral<int>();
  const std::string filename = stream.ConsumeBytesAsString(stream.ConsumeIntegralInRange(0, 1024));
  const int skip_exist = stream.ConsumeBool();

  signkey_generate(keytype, bits, filename.c_str(), skip_exist);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
