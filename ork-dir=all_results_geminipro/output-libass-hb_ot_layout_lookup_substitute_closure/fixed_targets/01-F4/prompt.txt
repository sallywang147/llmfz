Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <vector>

#include "hb.h"
#include "hb-ot.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  hb_face_t* face = hb_face_create_for_data(stream.ConsumeRemainingBytes(), size);
  if (face == nullptr) {
    return 0;
  }

  const int lookup_index = stream.ConsumeIntegralInRange<int>(0, 1000);
  hb_set_t* glyphs = hb_set_create();
  hb_ot_layout_lookup_substitute_closure(face, lookup_index, glyphs);
  hb_set_destroy(glyphs);
  hb_face_destroy(face);

  return 0;
}
```

The original code has the following issues:

1. The header `#include "hb.h"` and `#include "hb-ot.h"` are not wrapped with `extern "C" {}`. This causes the linker to not be able to find the definitions of the functions declared in these headers.

2. The function `hb_ot_layout_lookup_substitute_closure` is not declared in any of the included headers. This means that the compiler does not know what this function is and will generate an error.

To fix these issues, we can wrap the `#include` directives for `hb.h` and `hb-ot.h` with `extern "C" {}` and add a declaration for the function `hb_ot_layout_lookup_substitute_closure` to the code.

The corrected code is shown above.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
