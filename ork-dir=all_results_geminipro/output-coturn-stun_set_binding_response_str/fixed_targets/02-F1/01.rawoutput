```c++
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "apputils.h"
#include "ns_turn_utils.h"
#include "stun_buffer.h"

static SHATYPE shatype = SHATYPE_SHA1;

#define kMinInputLength 10
#define kMaxInputLength 5120

extern "C" {
#include "rfc5769check.h"
}

extern int LLVMFuzzerTestOneInput(const uint8_t *Data,
                                  size_t Size) { // rfc5769check

  if (Size < kMinInputLength || Size > kMaxInputLength) {
    return 1;
  }

  struct stun_tid tid;
  union ioa_addr reflexive_addr;
  char *buf = (char *)malloc(kMaxInputLength);
  size_t len = kMaxInputLength;

  stun_set_binding_response_str(buf, &len, &tid, &reflexive_addr, 0, NULL, 0, 0, 0);

  uint8_t uname[33];
  uint8_t realm[33];
  uint8_t upwd[33];
  strcpy((char *)upwd, "VOkJxbRl1RmTxUk/WvJxBt");
  stun_check_message_integrity_str(TURN_CREDENTIALS_SHORT_TERM, (uint8_t *)buf, len, uname, realm, upwd, shatype);

  free(buf);

  return 0;
}
```