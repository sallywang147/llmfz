Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "apputils.h"
#include "ns_turn_utils.h"
#include "stun_buffer.h"

static SHATYPE shatype = SHATYPE_SHA1;

#define kMinInputLength 10
#define kMaxInputLength 5120

extern "C" {
#include "rfc5769check.h"
}

int stun_check_message_integrity_str(TURN_CREDENTIALS_TYPE type, const uint8_t *msg,
                                     size_t msglen, const uint8_t *uname,
                                     const uint8_t *realm, const uint8_t *upwd,
                                     SHATYPE shatype);

extern int LLVMFuzzerTestOneInput(const uint8_t *Data,
                                  size_t Size) { // rfc5769check

  if (Size < kMinInputLength || Size > kMaxInputLength) {
    return 1;
  }

  struct stun_tid tid;
  union ioa_addr reflexive_addr;
  char *buf = (char *)malloc(kMaxInputLength);
  size_t len = kMaxInputLength;

  stun_set_binding_response_str(buf, &len, &tid, &reflexive_addr, 0, NULL, 0, 0, 0);

  uint8_t uname[33];
  uint8_t realm[33];
  uint8_t upwd[33];
  strcpy((char *)upwd, "VOkJxbRl1RmTxUk/WvJxBt");
  stun_check_message_integrity_str(TURN_CREDENTIALS_SHORT_TERM, (uint8_t *)buf, len, uname, realm, upwd, shatype);

  free(buf);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
