Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

int handle_conn_read(int socknum) {
  // Do something with the socket
  return 0;
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const int socknum = stream.ConsumeIntegral<int>();
  return handle_conn_read(socknum);
}
```

The original code had the following issues:

* The `handle_conn_read` function was not defined.
* The `LLVMFuzzerTestOneInput` function was not declared as `extern "C"`.

The fixed code addresses both of these issues. The `handle_conn_read` function is now defined, and the `LLVMFuzzerTestOneInput` function is declared as `extern "C"`.

Now, the code should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
