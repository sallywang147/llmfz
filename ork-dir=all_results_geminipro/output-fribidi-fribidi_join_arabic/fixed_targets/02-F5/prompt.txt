Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <assert.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>

#include <fribidi.h>

extern "C" {
#include <fribidi.h>
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  const FriBidiStrIndex str_len = size / 4;
  FriBidiChar *str = (FriBidiChar *)data;

  FriBidiCharType *types = calloc(str_len, sizeof(FriBidiCharType));
  FriBidiLevel *levels = calloc(str_len, sizeof(FriBidiLevel));
  fribidi_get_bidi_types(str, str_len, types);
  fribidi_get_par_embedding_levels(types, str_len, levels);
  char *ar_props = calloc(str_len, sizeof(char));
  fribidi_join_arabic(types, str_len, levels, ar_props);
  free(types);
  free(levels);
  free(ar_props);
  return 0;
}
```

The original code has the following issues:

1. The header file `fribidi.h` is included twice, once with and once without the `extern "C"` wrapper. This can lead to linker errors. To fix this, remove the second inclusion of `fribidi.h` without the `extern "C"` wrapper.

2. The function `fribidi_join_arabic` is not declared in the global scope. To fix this, add the `extern "C"` wrapper to the declaration of `fribidi_join_arabic` in the header file `fribidi.h`.

The corrected code is shown above.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
