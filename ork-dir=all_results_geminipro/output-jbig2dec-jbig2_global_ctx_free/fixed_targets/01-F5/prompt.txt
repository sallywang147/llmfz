Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstddef>
#include <cstdint>
#include <cstdlib>

#include "jbig2.h"

extern "C" {
#include "jbig2.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  struct _Jbig2GlobalCtx* global_ctx = jbig2_global_ctx_new();
  if (global_ctx == nullptr) {
    return 0;
  }
  jbig2_global_ctx_free(global_ctx);
  return 0;
}
```

The build error message is:

```
error: undefined reference to `jbig2_global_ctx_new'
error: undefined reference to `jbig2_global_ctx_free'
```

This error message indicates that the linker cannot find the definitions for the functions `jbig2_global_ctx_new` and `jbig2_global_ctx_free`. This is because these functions are declared in the header file `jbig2.h`, but they are not defined in any of the source files that are being linked.

To fix this error, we need to make sure that the linker can find the definitions for these functions. We can do this by including the source file that contains the definitions of these functions in the build process.

In this case, the source file that contains the definitions of these functions is `jbig2.c`. We can include this file in the build process by adding the following line to the Makefile:

```
SRC += jbig2.c
```

This will tell the linker to include the source file `jbig2.c` in the build process, and the linker will be able to find the definitions for the functions `jbig2_global_ctx_new` and `jbig2_global_ctx_free`.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
