Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstddef>
#include <cstdint>

extern "C" {
#include "src/parser/parser.h"
#include "src/terminal/terminal.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  Terminal::Emulator emulator;
  Parser::Resize resize(emulator);  // Pass the emulator object to the constructor
  for (size_t i = 0; i < size; i++) {
    resize.act(Parser::UserByte(data[i]));  // Remove the &emulator argument
  }

  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `void Parser::Resize::act_on_terminal(Parser::Resize * this, Terminal::Emulator * emu) const` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `void Parser::Resize::act_on_terminal(Parser::Resize * this, Terminal::Emulator * emu) const` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
