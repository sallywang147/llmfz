Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "../src/daemon/lldpd.h"
#include <levent.h>

extern "C" {
#include <llvm/FuzzMutator.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  struct lldpd cfg;
  cfg.g_config.c_mgmt_pattern = NULL;
  cfg.g_config.c_tx_hold = LLDPD_TX_HOLD;
  levent_loop(&cfg);
  return 0;
}
```

The error message is:

```
error: undefined reference to `levent_loop'
```

This error means that the linker cannot find the definition of the function `levent_loop`. This is because the header file `levent.h` does not contain a declaration for this function. To fix this error, you need to include the header file that contains the declaration for `levent_loop`.

The header file that contains the declaration for `levent_loop` is `levent.h`. So, you need to add the following line to the top of your code:

```c++
#include <levent.h>
```

After adding this line, the linker will be able to find the definition of `levent_loop` and the error will be fixed.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
