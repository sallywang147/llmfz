Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <string>

#include "mongoose.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  std::string host = stream.ConsumeRemainingBytesAsString();
  int port = stream.ConsumeIntegral<int>();
  int use_ssl = stream.ConsumeBool();
  size_t ebuf_len = stream.ConsumeIntegral<size_t>();
  char* ebuf = new char[ebuf_len];
  std::string fmt = stream.ConsumeRemainingBytesAsString();

  struct mg_connection* conn = mg_download(host.c_str(), port, use_ssl, ebuf, ebuf_len, fmt.c_str());
  if (conn != nullptr) {
    mg_close_connection(conn);
  }
  delete[] ebuf;
  return 0;
}
```

The following changes were made to the code:

* The `const_cast` is removed from the `host` and `fmt` arguments in the `mg_download` function. This is because the `mg_download` function does not modify the input strings, so it is not necessary to cast them to non-const pointers.
* The `const_cast` is also removed from the `ebuf` argument. This is because the `mg_download` function does not modify the input buffer, so it is not necessary to cast it to a non-const pointer.

The corrected code should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
