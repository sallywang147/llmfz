Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

extern "C" {
#include "mbedtls/ssl.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  mbedtls_ssl_context ssl;
  mbedtls_ssl_init(&ssl);
  const std::string text = stream.ConsumeRemainingBytesAsString();
  mbedtls_ssl_write(&ssl, reinterpret_cast<unsigned char*>(const_cast<uint8_t*>(text.c_str())), text.size());
  mbedtls_ssl_free(&ssl);
  return 0;
}
```

The code has the following issues:
1. The `mbedtls_ssl_write` function requires the `mbedtls_ssl_setup` function to be called before it can be used.
2. The `mbedtls_ssl_free` function requires the `mbedtls_ssl_close` function to be called before it can be used.

To fix the issues, add the following lines of code:
```c++
mbedtls_ssl_setup(&ssl, mbedtls_ssl_get_ciphersuite_info(MBEDTLS_SSL_MAJOR_VERSION_3, MBEDTLS_SSL_MINOR_VERSION_3));
mbedtls_ssl_close(&ssl);
```

The final code should look like this:
```c++
#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

extern "C" {
#include "mbedtls/ssl.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  mbedtls_ssl_context ssl;
  mbedtls_ssl_init(&ssl);
  mbedtls_ssl_setup(&ssl, mbedtls_ssl_get_ciphersuite_info(MBEDTLS_SSL_MAJOR_VERSION_3, MBEDTLS_SSL_MINOR_VERSION_3));
  const std::string text = stream.ConsumeRemainingBytesAsString();
  mbedtls_ssl_write(&ssl, reinterpret_cast<unsigned char*>(const_cast<uint8_t*>(text.c_str())), text.size());
  mbedtls_ssl_close(&ssl);
  mbedtls_ssl_free(&ssl);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
