Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdlib.h>
#include <string.h>

#include "hiredis.h"

extern "C" {
#include <hiredis/async.h>
#include <hiredis/sds.h>
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  redisAsyncContext *ac = redisAsyncConnect("127.0.0.1", 6379);
  if (ac == NULL || ac->err) {
    return 0;
  }

  redisAsyncSetConnectCallback(ac, NULL);
  redisAsyncSetDisconnectCallback(ac, NULL);

  redisAsyncCommand(ac, NULL, NULL, "SET key %b", size, data);
  redisAsyncRead(ac);

  redisAsyncFree(ac);
  return 0;
}
```

The original code has the following issues:

1. The `redisAsyncCommand` function is missing. To fix this, the `hiredis/sds.h` header needs to be included.
2. The `redisAsyncCommand` function is called incorrectly. The correct syntax is `redisAsyncCommand(ac, NULL, NULL, "SET key %b", size, data)`.

After fixing these issues, the code should compile and run successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
