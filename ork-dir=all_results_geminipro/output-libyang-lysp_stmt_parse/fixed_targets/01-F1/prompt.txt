Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "libyang.h"

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  struct lysp_ctx *pctx = NULL;
  struct lysp_stmt *stmt = NULL;
  char *result = NULL;
  struct lysp_ext_instance **exts = NULL;

  pctx = lysp_ctx_new(NULL);
  if (!pctx) {
    fprintf(stderr, "Failed to create context\n");
    exit(EXIT_FAILURE);
  }

  stmt = lysp_stmt_new(NULL, LYS_STMT_MODULE);
  if (!stmt) {
    fprintf(stderr, "Failed to create statement\n");
    exit(EXIT_FAILURE);
  }

  lysp_stmt_parse(pctx, stmt, &result, exts);

  free(result);
  lysp_stmt_free(stmt);
  lysp_ctx_destroy(pctx);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
