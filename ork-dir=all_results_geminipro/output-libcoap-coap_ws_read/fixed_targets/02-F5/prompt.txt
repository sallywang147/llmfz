Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <coap3/coap.h>
#include <coap3/coap_ws.h>
#include <coap3/coap_session.h>

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  coap_session_t *session = coap_new_session(nullptr, nullptr, nullptr);
  if (session) {
    coap_ws_init(session);
    size_t read_bytes = coap_ws_read(session, (char *)data, size);
    coap_ws_cleanup(session);
    coap_free_session(session);
  }
  return 0;
}
```

The original code had an issue with the inclusion of the `coap_session.h` header. It was wrapped with `extern "C" {}`, but the `#include` directive itself was not. This caused the linker to be unable to find the definition of the `coap_session_t` type, resulting in the build error.

To fix this, the `#include` directive for `coap_session.h` has been moved inside the `extern "C" {}` block, ensuring that the linker can correctly find the definition of the `coap_session_t` type.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
