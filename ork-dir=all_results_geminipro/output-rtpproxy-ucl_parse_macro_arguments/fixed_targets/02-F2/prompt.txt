Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

extern "C" {
#include "ucl.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  size_t chunk_size = provider.ConsumeIntegralInRange<size_t>(0, 1000);
  std::vector<uint8_t> chunk_data(chunk_size);
  provider.ConsumeBytes<uint8_t>(chunk_data.data(), chunk_size);
  struct ucl_chunk chunk = {chunk_data.data(), chunk_size};

  struct ucl_parser* parser = ucl_parser_new(0);
  struct ucl_object* obj = ucl_parse_macro_arguments(parser, &chunk);
  if (obj) {
    ucl_object_unref(obj);
  }
  ucl_parser_free(parser);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
