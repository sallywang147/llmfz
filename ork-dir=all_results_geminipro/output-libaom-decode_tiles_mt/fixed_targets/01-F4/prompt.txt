Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

extern "C" {
#include <libavif/avif.h>
}

extern "C" char * decode_tiles_mt(struct AV1Decoder *, char *, char *, int, int);

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < 100) {
    return 0;
  }

  FuzzedDataProvider provider(data, size);

  char *input_buffer = provider.ConsumeBytes<char>(size).data();
  int tile_cols = provider.ConsumeIntegralInRange<int>(1, 100);
  int tile_rows = provider.ConsumeIntegralInRange<int>(1, 100);

  char *output_buffer = decode_tiles_mt(nullptr, input_buffer, input_buffer + size,
                                        tile_cols, tile_rows);
  free(output_buffer);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
