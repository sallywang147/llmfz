Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstdint>
#include <cstring>

#include <blake2.h>
#include <fuzzer/FuzzedDataProvider.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t out_len = stream.ConsumeIntegralInRange<size_t>(0, 1024);
  const size_t in_len = stream.ConsumeIntegralInRange<size_t>(0, 1024);
  char* out = new char[out_len];
  char* in = new char[in_len];
  stream.ConsumeBytes(in, in_len);
  blake2b_long(out, out_len, in, in_len);
  delete[] out;
  delete[] in;
  return 0;
}
```

The following changes were made to fix the code:

1. Included the `blake2.h` header file, which is necessary for using the `blake2b_long` function.
2. Wrapped the `#include <fuzzer/FuzzedDataProvider.h>` directive with `extern "C" {}` to ensure that the function `LLVMFuzzerTestOneInput` is visible to the linker.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
