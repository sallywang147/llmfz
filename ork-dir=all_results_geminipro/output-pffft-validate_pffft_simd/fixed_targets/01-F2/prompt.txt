Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include "pffft.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider stream(data, size);

  // Skip the first 4 bytes, which are the size of the input.
  stream.ConsumeIntegral<uint32_t>();

  // Extract an array of bytes as a vector.
  std::vector<uint8_t> bytes = stream.ConsumeBytes<uint8_t>(stream.ConsumeIntegralInRange(0, 10000));

  // Validate PFFFT SIMD.
  validate_pffft_simd(bytes.data(), bytes.size());

  return 0;
}
```

The missing header file `pffft.h` is included, which provides the declaration of the `validate_pffft_simd` function. The `extern "C" {}` wrapper is added to the `#include` directive for `pffft.h` to ensure compatibility with C++ compilers.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
