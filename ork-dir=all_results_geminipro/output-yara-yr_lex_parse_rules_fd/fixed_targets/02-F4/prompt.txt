Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <yara.h>

extern "C" {
#include <yara/libyara.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  YR_COMPILER *compiler;

  if (yr_initialize() != ERROR_SUCCESS)
    return 0;

  if (yr_compiler_create(&compiler) != ERROR_SUCCESS)
    return 0;

  yr_lex_parse_rules_string(data, size, compiler);

  yr_compiler_destroy(compiler);

  yr_finalize();

  return 0;
}
```

The following changes were made to the code:

- The function `yr_lex_parse_rules_fd` was replaced with `yr_lex_parse_rules_string` because the former takes a file descriptor as input, while the input for the fuzzer is a string.
- The function `yr_finalize()` was added to clean up the YARA library before exiting.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
