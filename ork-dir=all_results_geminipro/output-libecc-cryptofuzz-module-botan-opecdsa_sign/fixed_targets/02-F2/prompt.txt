Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "cryptofuzz.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);

  cryptofuzz::module::libecc* libecc_ptr = new cryptofuzz::module::libecc();
  std::optional<cryptofuzz::module::libecc>* libecc_opt =
      new std::optional<cryptofuzz::module::libecc>(*libecc_ptr);

  cryptofuzz::operation::ECDSA_Sign* ecdsa_sign_ptr =
      new cryptofuzz::operation::ECDSA_Sign();
  std::optional<cryptofuzz::operation::ECDSA_Sign>* ecdsa_sign_opt =
      new std::optional<cryptofuzz::operation::ECDSA_Sign>(*ecdsa_sign_ptr);

  cryptofuzz::module::Botan::OpECDSA_Sign(libecc_opt, libecc_ptr, ecdsa_sign_opt);

  delete libecc_opt;
  delete libecc_ptr;
  delete ecdsa_sign_opt;
  delete ecdsa_sign_ptr;

  return 0;
}
```

The build error is:

```
error: undefined reference to `cryptofuzz::module::Botan::OpECDSA_Sign(std::optional<cryptofuzz::module::libecc>*, cryptofuzz::module::libecc*, std::optional<cryptofuzz::operation::ECDSA_Sign>*)'
```

The error message indicates that the linker cannot find the definition of the function `cryptofuzz::module::Botan::OpECDSA_Sign`. This is because the header file that declares the function is not included in the source file.

To fix the error, add the following line to the top of the source file:

```
#include "cryptofuzz/module/Botan.h"
```

This will include the header file that declares the function, and the linker will be able to find the definition of the function.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
