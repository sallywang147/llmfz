Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "botan_ecdsa_sign.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  std::optional<std::string> hash_algorithm = stream.ConsumeBool()
                                                  ? stream.ConsumeEnum<std::string>()
                                                  : std::nullopt;
  cryptofuzz::module::libecc* libecc_ptr =
      stream.PickValueInArray({&cryptofuzz::module::Botan::LibECC(),
                              &cryptofuzz::module::OpenSSL::LibECC()});
  cryptofuzz::operation::ECDSA_Sign* ecdsa_sign_ptr =
      stream.PickValueInArray({&cryptofuzz::operation::Botan::ECDSA_Sign(),
                              &cryptofuzz::operation::OpenSSL::ECDSA_Sign()});

  cryptofuzz::module::Botan::OpECDSA_Sign(hash_algorithm, libecc_ptr,
                                        ecdsa_sign_ptr);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
