Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "tidy.h"
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  TidyDoc tdoc = tidyCreate();
  tidyOptSetBool(tdoc, TidyQuiet, yes);
  tidyOptSetBool(tdoc, TidyShowWarnings, no);
  tidyOptSetBool(tdoc, TidyNumEntities, yes);
  tidyOptSetBool(tdoc, TidyFixUri, yes);
  tidyOptSetBool(tdoc, TidyMakeBare, yes);
  tidyOptSetBool(tdoc, TidyWrapAsp, yes);
  tidyOptSetBool(tdoc, TidyWrapJste, yes);
  tidyOptSetBool(tdoc, TidyWrapPhp, yes);
  tidyOptSetBool(tdoc, TidyWrapScriptlets, yes);
  tidyOptSetBool(tdoc, TidyWrapSection, yes);

  tidyParseStdin(tdoc);
  tidyRelease(tdoc);

  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `int tidyDocParseStdin(struct _TidyDocImpl * doc)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `int tidyDocParseStdin(struct _TidyDocImpl * doc)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
