Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstring>
#include <vector>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  int quant_level = provider.ConsumeIntegralInRange<int>(0, 100);
  int character_count = provider.ConsumeIntegralInRange<int>(0, 1000);
  std::vector<char> input_data(character_count);
  provider.ConsumeBytes(input_data.data(), input_data.size());
  std::vector<char> output_data(character_count);
  int bit_offset = provider.ConsumeIntegralInRange<int>(0, 1000);
  encode_ise(quant_level, character_count, input_data.data(), output_data.data(), bit_offset);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
