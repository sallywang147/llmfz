Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include "opus/opus.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const int channels = stream.ConsumeIntegralInRange<int>(1, 2);
  const int rate = stream.ConsumeIntegralInRange<int>(8000, 48000);
  const int application = stream.ConsumeIntegralInRange<int>(OPUS_APPLICATION_VOIP,
                                                           OPUS_APPLICATION_AUDIO);
  OpusMSEncoder* st = opus_multistream_encoder_create(rate, channels, application,
                                                    nullptr);
  if (st == nullptr) {
    return 0;
  }

  const int frame_size = stream.ConsumeIntegralInRange<int>(20, 960);
  const size_t data_size = stream.ConsumeIntegralInRange<size_t>(1024, 4096);
  char* data = new char[data_size];
  float* pcm = new float[frame_size * channels];

  stream.ConsumeFloatArray(pcm, frame_size * channels);
  const int ret = opus_multistream_encode_float(st, pcm, frame_size, data,
                                                data_size);
  if (ret < 0) {
    fprintf(stderr, "opus_multistream_encode_float failed with error %d\n", ret);
  }

  opus_multistream_encoder_destroy(st);
  delete[] data;
  delete[] pcm;
  return 0;
}
```
The fixed code includes the necessary header files for the `opus` library and wraps the `#include` directive for the `opus` header with `extern "C" {}` to resolve the linking issue.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
