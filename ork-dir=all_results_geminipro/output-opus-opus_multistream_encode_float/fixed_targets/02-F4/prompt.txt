Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "opus/opus.h"

extern "C" {
#include "opus/opus.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const int channels = stream.ConsumeIntegral<int>();
  const int frame_size = stream.ConsumeIntegral<int>();
  const int bitrate = stream.ConsumeIntegral<int>();
  const int max_data_bytes = stream.ConsumeIntegral<int>();
  OpusMSEncoder* st = opus_multistream_encoder_create(
      48000, channels, OPUS_APPLICATION_AUDIO, &bitrate, nullptr);
  if (st == nullptr) {
    return 0;
  }

  std::vector<float> pcm(frame_size * channels);
  stream.ConsumeFloatingPointArray(pcm.data(), pcm.size());
  std::vector<char> data(max_data_bytes);
  const int ret = opus_multistream_encode_float(st, pcm.data(), frame_size,
                                               data.data(), max_data_bytes);
  if (ret < 0) {
    opus_multistream_encoder_destroy(st);
    return 0;
  }
  opus_multistream_encoder_destroy(st);
  return 0;
}
```

The original code has a few issues:

1. The `opus` library is not properly included. The `#include "opus/opus.h"` line should be wrapped with `extern "C" {}` to ensure that the C++ compiler does not mangle the function names.
2. The `opus_multistream_encode_float` function is not declared in the `opus.h` header. It needs to be declared before it can be used.

The fixed code includes the `opus` library properly and declares the `opus_multistream_encode_float` function.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
