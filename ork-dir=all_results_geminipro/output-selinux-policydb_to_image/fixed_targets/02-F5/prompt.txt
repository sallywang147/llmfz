Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <sepol/policydb/policydb.h>

extern "C" {
#include <sepol/policydb/services.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  sepol_handle_t *handle = sepol_handle_create();
  if (!handle) {
    return 1;
  }
  policydb_t policydb;
  char *newdata = nullptr;
  size_t newlen = 0;

  if (policydb_init(&policydb)) {
    goto exit;
  }

  if (policydb_read(&policydb, data, size)) {
    goto exit;
  }

  if (policydb_to_image(handle, &policydb, &newdata, &newlen)) {
    goto exit;
  }

exit:
  sepol_handle_destroy(handle);
  policydb_destroy(&policydb);
  free(newdata);
  return 0;
}
```

The build error is:
```
error: ‘sepol_handle_create’ was not declared in this scope
```

The reason for this error is that the `sepol_handle_create` function is declared in the `sepol/policydb/handle.h` header file, which is not included in the code. To fix this error, add the following line to the top of the code:

```c++
#include <sepol/policydb/handle.h>
```

After adding this line, the code should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
