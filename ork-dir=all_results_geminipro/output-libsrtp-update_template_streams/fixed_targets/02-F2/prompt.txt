Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "srtp.h"

extern "C" {
#include <srtp/srtp.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  srtp_policy_t policy;
  srtp_init();
  srtp_policy_init(&policy);
  srtp_policy_parse(&policy, stream.ConsumeRemainingBytesAsString().c_str(),
                    stream.remaining_bytes());
  srtp_ctx_t_ session;
  srtp_create(&session, &policy);
  int ret = update_template_streams(&session, &policy);
  srtp_policy_destroy(&policy);
  srtp_destroy(&session);
  srtp_shutdown();
  return ret;
}
```
In this case, the error message is:
```
error: undefined reference to `srtp_init'
error: undefined reference to `srtp_policy_init'
error: undefined reference to `srtp_policy_parse'
error: undefined reference to `srtp_create'
error: undefined reference to `update_template_streams'
error: undefined reference to `srtp_policy_destroy'
error: undefined reference to `srtp_destroy'
error: undefined reference to `srtp_shutdown'
```
This means that the linker cannot find the definitions of these functions. To fix this, we need to include the header file that contains these definitions. In this case, the header file is `srtp/srtp.h`. We can include this header file by adding the following line to the top of the file:
```
#include <srtp/srtp.h>
```
We also need to wrap the `#include` directive with `extern "C" {}` to ensure that the C++ compiler does not mangle the function names. The final code should look like this:
```c++
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "srtp.h"

extern "C" {
#include <srtp/srtp.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  srtp_policy_t policy;
  srtp_init();
  srtp_policy_init(&policy);
  srtp_policy_parse(&policy, stream.ConsumeRemainingBytesAsString().c_str(),
                    stream.remaining_bytes());
  srtp_ctx_t_ session;
  srtp_create(&session, &policy);
  int ret = update_template_streams(&session, &policy);
  srtp_policy_destroy(&policy);
  srtp_destroy(&session);
  srtp_shutdown();
  return ret;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
