Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "grpc_transcoding/testing/json_array_tester.h"

#include "test_common.h"

#include <cstddef>
#include <cstdint>
#include <fuzzer/FuzzedDataProvider.h>
#include <string>

namespace google {
namespace grpc {
namespace transcoding {
namespace testing {
namespace {

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider provider(data, size);

  JsonArrayTester tester;

  while (provider.remaining_bytes() > 0) {
    std::string json_string = provider.ConsumeRandomLengthString(100);
    std::string error_message;
    bool is_valid = tester.TestElement(&json_string, &error_message);
    (void)is_valid;
    (void)error_message;
  }

  return 0;
}

}  // namespace
}  // namespace testing
}  // namespace transcoding
}  // namespace grpc
}  // namespace google

// The main function is required for the fuzzer to run.
int main(int argc, char **argv) {
  // Run the fuzzer.
  LLVMFuzzerTestOneInput(reinterpret_cast<const uint8_t *>(argv[1]),
                        strlen(argv[1]));
  return 0;
}
```

The added `main` function is required for the fuzzer to run. It calls the `LLVMFuzzerTestOneInput` function with the command-line arguments, allowing the fuzzer to process the input data.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
