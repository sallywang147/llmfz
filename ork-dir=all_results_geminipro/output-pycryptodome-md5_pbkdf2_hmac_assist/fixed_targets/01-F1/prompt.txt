Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <fuzzer/FuzzedDataProvider.h>

#define MD5_PBKDF2_HMAC_ASSIST_SIZE 16

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < MD5_PBKDF2_HMAC_ASSIST_SIZE * 3) {
    return 0;
  }

  FuzzedDataProvider stream(data, size);
  uint8_t inner_key[MD5_PBKDF2_HMAC_ASSIST_SIZE];
  uint8_t outer_key[MD5_PBKDF2_HMAC_ASSIST_SIZE];
  uint8_t first_hmac[MD5_PBKDF2_HMAC_ASSIST_SIZE];
  uint8_t result[MD5_PBKDF2_HMAC_ASSIST_SIZE];
  size_t iterations = 0;

  stream.ConsumeBytes<uint8_t>(inner_key, MD5_PBKDF2_HMAC_ASSIST_SIZE);
  stream.ConsumeBytes<uint8_t>(outer_key, MD5_PBKDF2_HMAC_ASSIST_SIZE);
  stream.ConsumeBytes<uint8_t>(first_hmac, MD5_PBKDF2_HMAC_ASSIST_SIZE);
  iterations = stream.ConsumeIntegral<size_t>();

  MD5_pbkdf2_hmac_assist(
      (struct t_hash_state *)inner_key,
      (struct t_hash_state *)outer_key,
      (char *)first_hmac,
      (char *)result,
      iterations);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
