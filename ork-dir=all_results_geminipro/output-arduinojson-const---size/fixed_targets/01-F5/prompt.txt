Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <ArduinoJson.h>

extern "C" {
#include <stddef.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  StaticJsonDocument<200> doc;
  DeserializationError error = deserializeJson(doc, data, size);
  if (error) {
    return 0;
  }
  return 1;
}
```

The code above should compile without errors. The issue was that the `ArduinoJson.h` header file was not wrapped in `extern "C" {}`. This is necessary because the ArduinoJson library is written in C++, and the LLVMFuzzerTestOneInput function is written in C. Without the `extern "C" {}` wrapper, the compiler would not be able to find the definition of the `deserializeJson` function.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
