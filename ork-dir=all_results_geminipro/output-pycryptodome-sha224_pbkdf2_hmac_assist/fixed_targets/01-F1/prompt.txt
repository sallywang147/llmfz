Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <stdint.h>
#include <stdlib.h>
#include <string.h>

#include "sha224.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < 32) {
    return 0;
  }
  FuzzedDataProvider stream(data, size);
  struct t_hash_state inner, outer;
  uint8_t first_hmac[32];
  uint8_t result[32];
  uint8_t salt[32];
  stream.ConsumeBytes<uint8_t>(salt, sizeof(salt));
  SHA224_Init(&inner, salt);
  SHA224_Init(&outer, salt);
  SHA224_Update(&inner, &stream.ConsumeIntegral<uint8_t>(), 1);
  SHA224_Final(first_hmac, &inner);
  SHA224_Update(&outer, first_hmac, sizeof(first_hmac));
  size_t iterations = stream.ConsumeIntegralInRange<size_t>(0, 10000);
  size_t digest_size = stream.ConsumeIntegralInRange<size_t>(0, 32);
  SHA224_pbkdf2_hmac_assist(&inner, &outer, (char *)first_hmac, (char *)result,
                           iterations, digest_size);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
