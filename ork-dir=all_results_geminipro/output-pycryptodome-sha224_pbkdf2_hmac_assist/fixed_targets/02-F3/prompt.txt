Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "common.h"
#include <fuzzer/FuzzedDataProvider.h>
#include <openssl/sha.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {

  if (!size)
    return 0;

  FuzzedDataProvider stream(data, size);
  SHA256_CTX inner;
  SHA256_CTX outer;
  SHA256_Init(&inner);
  SHA256_Init(&outer);

  size_t num_bytes = stream.ConsumeIntegral<size_t>();
  std::vector<uint8_t> password = stream.ConsumeBytes<uint8_t>(num_bytes);

  num_bytes = stream.ConsumeIntegral<size_t>();
  std::vector<uint8_t> salt = stream.ConsumeBytes<uint8_t>(num_bytes);

  size_t iterations = stream.ConsumeIntegral<size_t>();
  size_t digest_size = stream.ConsumeIntegral<size_t>();

  std::vector<uint8_t> result(digest_size);
  PKCS5_PBKDF2_HMAC(reinterpret_cast<char*>(password.data()), password.size(),
                    reinterpret_cast<char*>(salt.data()), salt.size(), iterations, EVP_sha256(),
                    digest_size, result.data());

  // Call the target function
  SHA224_pbkdf2_hmac_assist(&inner, &outer, reinterpret_cast<char*>(result.data()), reinterpret_cast<char*>(result.data()), iterations, digest_size);

  return 0;
}
```

The fixed code calls the target function `SHA224_pbkdf2_hmac_assist` inside the `LLVMFuzzerTestOneInput` function, which resolves the build issue.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
