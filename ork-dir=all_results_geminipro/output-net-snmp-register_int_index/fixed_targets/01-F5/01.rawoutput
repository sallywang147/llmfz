```c++
#include <fuzzer/FuzzedDataProvider.h>
#include <map>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t name_len = stream.ConsumeIntegral<size_t>();
  const std::string name = stream.ConsumeBytesAsString(name_len);
  const int val = stream.ConsumeIntegral<int>();

  std::map<std::string, int> name_to_val;
  name_to_val.insert(std::make_pair(name, val));

  // Call the register_int_index function with the correct arguments
  register_int_index(name.c_str(), name_len, val);

  return 0;
}

// Define the register_int_index function
extern "C" int register_int_index(const char* name, size_t name_len, int val) {
  // Implement the functionality of the register_int_index function here
  return 0;
}
```