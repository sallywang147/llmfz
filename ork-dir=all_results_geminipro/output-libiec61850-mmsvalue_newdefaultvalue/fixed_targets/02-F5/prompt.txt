Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdio.h>
#include <stdlib.h>

#include "hal_thread.h"
#include "iec61850_server.h"

#include "mms_value.h"
#include "mms_variable_specification.h"

extern "C" {
#include "mms_value.h"
#include "mms_variable_specification.h"
}

int LLVMFuzzerTestOneInput(const char *data, size_t size) {
  MmsVariableSpecification *typeSpec = MmsVariableSpecification_new(
      MMS_VARIABLE_SPECIFICATION_TYPE_ACCESS_CONTROL);
  MmsValue *value = NULL;

  value = MmsValue_newDefaultValue(typeSpec);

  if (value != NULL) {
    MmsValue_delete(value);
  }

  MmsVariableSpecification_delete(typeSpec);

  return 0;
}
```

In this fixed code:

1. We included the necessary header file `mms_variable_specification.h` for `MmsVariableSpecification_new()` and `MmsVariableSpecification_delete()`.
2. We created a new `MmsVariableSpecification` object of type `MMS_VARIABLE_SPECIFICATION_TYPE_ACCESS_CONTROL` using `MmsVariableSpecification_new()`.
3. We used the newly created `MmsVariableSpecification` object in `MmsValue_newDefaultValue()` to create a new `MmsValue` object.
4. We deleted the `MmsValue` object using `MmsValue_delete()`.
5. We deleted the `MmsVariableSpecification` object using `MmsVariableSpecification_delete()`.

These changes ensure that the necessary objects are created and deleted properly, resolving the build issues and achieving the original functionality.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
