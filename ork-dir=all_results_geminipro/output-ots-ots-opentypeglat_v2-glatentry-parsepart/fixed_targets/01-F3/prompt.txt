Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <cstring>

#include "opentype-sanitiser.h"
#include "ots.h"

namespace ots {

bool OpenTypeGLAT_v2::GlatEntry::ParsePart(OpenTypeGLAT_v2::GlatEntry *this,
                                            Buffer *table) {
  Buffer subtable = table->ReadSubBuffer(this->offset, this->length);
  if (!subtable.ok()) {
    return OTS_FAILURE();
  }
  if (this->format == 1) {
    return ParseFormat1(&subtable);
  } else if (this->format == 2) {
    return ParseFormat2(&subtable);
  }
  return OTS_FAILURE();
}

bool OpenTypeGLAT_v2::GlatEntry::ParseFormat1(Buffer *table) {
  if (!table->ReadU16(&this->glyph_count)) {
    return OTS_FAILURE();
  }
  if (this->glyph_count == 0) {
    return OTS_FAILURE();
  }
  this->glyph_map = new uint16_t[this->glyph_count];
  if (!this->glyph_map) {
    return OTS_FAILURE();
  }
  for (unsigned int i = 0; i < this->glyph_count; ++i) {
    if (!table->ReadU16(&this->glyph_map[i])) {
      return OTS_FAILURE();
    }
  }
  return true;
}

bool OpenTypeGLAT_v2::GlatEntry::ParseFormat2(Buffer *table) {
  if (!table->ReadU16(&this->glyph_count)) {
    return OTS_FAILURE();
  }
  if (this->glyph_count == 0) {
    return OTS_FAILURE();
  }
  this->glyph_map = new uint16_t[this->glyph_count];
  if (!this->glyph_map) {
    return OTS_FAILURE();
  }
  for (unsigned int i = 0; i < this->glyph_count; ++i) {
    if (!table->ReadU16(&this->glyph_map[i])) {
      return OTS_FAILURE();
    }
  }
  if (!table->ReadU16(&this->coverage_index)) {
    return OTS_FAILURE();
  }
  return true;
}

}  // namespace ots

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  ots::Buffer table;
  if (!table.Copy(data, size)) {
    return 0;
  }

  ots::OpenTypeGLAT_v2::GlatEntry entry;
  entry.ParsePart(&entry, &table);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
