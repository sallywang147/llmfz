Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include <gnutls/gnutls.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  gnutls_session_t session;
  gnutls_session_init(&session);

  size_t data_size = stream.ConsumeIntegral<size_t>();
  std::vector<char> data_buffer(data_size);
  stream.ConsumeBytes<char>(data_buffer.data(), data_size);

  size_t size_returned = 0;
  int ret = gnutls_session_get_data(session, data_buffer.data(), &size_returned);
  if (ret != 0) {
    return 0;
  }

  return 0;
}
```

Changes made:

- Changed `gnutls_session_int` to `gnutls_session_t` in the declaration of `session`.
- Added `#include <gnutls/gnutls.h>` to include the necessary header file for the GnuTLS library.
- Wrapped the `#include <gnutls/gnutls.h>` line with `extern "C" {}` to allow the linker to find the GnuTLS symbols.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
