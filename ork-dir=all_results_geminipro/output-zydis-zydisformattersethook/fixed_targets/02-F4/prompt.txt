Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "Zydis/Zydis.h"

extern "C" {
#include "Zydis/Formatter.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  ZydisFormatterHook hook_function = stream.ConsumeBool()
                                          ? [](ZydisFormatter* formatter,
                                               ZyanU64 offset,
                                               ZydisString* string) {
                                            return 0;
                                          }
                                          : nullptr;
  ZydisFormatterSetHook(nullptr, 0, &hook_function);
  return 0;
}
```
The original code has the following issues:

1. The `ZydisFormatterSetHook` function is not declared in the `Zydis/Formatter.h` header file.
2. The `ZydisFormatterHook` type is not declared in the `Zydis/Formatter.h` header file.

To fix these issues, the code has been modified as follows:

1. The `Zydis/Formatter.h` header file has been included with the `extern "C"` directive. This is necessary because the `ZydisFormatterSetHook` function and the `ZydisFormatterHook` type are declared in a C header file, and they need to be declared as `extern "C"` in order to be visible to the C++ compiler.
2. The `ZydisFormatterSetHook` function and the `ZydisFormatterHook` type have been declared in the global scope. This is necessary because they are used in the `LLVMFuzzerTestOneInput` function, which is also declared in the global scope.

With these changes, the code should now compile and run correctly.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
