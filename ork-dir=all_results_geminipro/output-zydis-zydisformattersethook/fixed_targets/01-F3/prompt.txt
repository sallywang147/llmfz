Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <vector>

#include "Zydis/Zydis.h"

extern "C" {
#include "Zydis/ZydisFormatter.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const ZydisFormatterStyle style =
      stream.ConsumeBool() ? ZydisFormatterStyle_Intel : ZydisFormatterStyle_Att;
  const ZydisFormatterWidth width =
      stream.PickValueInArray({ZydisFormatterWidth_32Bit, ZydisFormatterWidth_64Bit});
  const std::string text = stream.ConsumeRemainingBytesAsString();

  ZydisFormatter formatter;
  ZydisFormatterInit(&formatter, style, width);

  std::vector<char> output_buffer(text.size() * 2);
  ZydisFormatterSetHook(&formatter, ZydisFormatterHook_PrintMnemonic,
                       &output_buffer[0]);
  ZydisFormatterFormatInstruction(&formatter, reinterpret_cast<const uint8_t*>(text.c_str()),
                               text.size(), &output_buffer[0], output_buffer.size());
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
