Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <boost/regex/v5/regex_parser.hpp>
#include <boost/regex/v5/regex_traits.hpp>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {
  FuzzedDataProvider fuzzed_data(Data, Size);
  // First value is length of the regex string
  size_t regex_length = fuzzed_data.ConsumeIntegral<uint8_t>();
  // Second value is regexp string whose length is `regex_length`
  std::string regex_string = fuzzed_data.ConsumeBytesAsString(regex_length);

#ifdef DEBUG
  std::cout << "Regexp string: " << regex_string << "Size: " << regex_string.size() << std::endl;
#endif

  try {
    boost::re_detail_500::basic_regex_parser<char, boost::c_regex_traits<char> > parser;
    bool result = parser.parse_extended(&regex_string);
    if (result) {
      std::cout << "Regex string parsed successfully." << std::endl;
    } else {
      std::cout << "Regex string could not be parsed." << std::endl;
    }
  } catch (const std::runtime_error &) {
    std::cout << "Regex string caused a runtime error." << std::endl;
  }
  return 0;
}
```

The error message is:
```
error: undefined reference to `boost::re_detail_500::basic_regex_parser<char, boost::c_regex_traits<char> >::parse_extended'
```

This error means that the linker cannot find the definition of the function `boost::re_detail_500::basic_regex_parser<char, boost::c_regex_traits<char> >::parse_extended`. This is because the header file that declares this function is not included in the compilation unit.

To fix this error, you need to include the header file that declares the function. In this case, the header file is `boost/regex/v5/regex_parser.hpp`. You can include this header file by adding the following line to the top of your source file:

```c++
#include <boost/regex/v5/regex_parser.hpp>
```

After adding this line, the linker will be able to find the definition of the function `boost::re_detail_500::basic_regex_parser<char, boost::c_regex_traits<char> >::parse_extended` and the error will be resolved.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
