Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdio.h>
#include <stdlib.h>
#include <libplist.h>
#include <plist/plist.h>

extern "C" {
#include <string.h>
}

extern "C" int LLVMFuzzerTestOneInput(const unsigned char *data, size_t size) {
  char *filename = tmpnam(nullptr);
  FILE *fp = fopen(filename, "wb");
  fwrite(data, size, 1, fp);
  fclose(fp);

  char *plist_string;
  int format;
  int result = plist_read_from_file(filename, &plist_string, &format);

  free(filename);
  if (plist_string != NULL) {
    free(plist_string);
  }

  return result;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
