Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdint.h>
#include <stdlib.h>

#include "siphash.h"

extern "C" {
#include "llvm/Support/CommandLine.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  siphash24(data, size, sip_keyof("FUZZING IS FUN!"));
  sip24_valid();
  return 0;
}
```

The original code is missing the necessary headers to build a fuzzer. To fix the issue, the following headers are included:

* `<stdint.h>`: Provides standard integer types.
* `<stdlib.h>`: Provides general purpose functions.
* `"siphash.h"`: Provides the SipHash-2-4 function.
* `"llvm/Support/CommandLine.h"`: Provides the LLVM command-line parsing functionality.

Additionally, the `extern "C"` block is added to wrap the `#include` directive for `"llvm/Support/CommandLine.h"`. This is necessary to ensure that the function `LLVMFuzzerTestOneInput` is exported with C linkage, which is required by the fuzzer driver.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
