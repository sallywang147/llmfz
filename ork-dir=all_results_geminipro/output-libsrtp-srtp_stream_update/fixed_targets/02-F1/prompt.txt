Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "srtp.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);

  srtp_policy_t policy;
  srtp_init();
  srtp_policy_init(&policy);

  // Set SRTP policy parameters.
  policy.ssrc.type = srtp_ssrc_any_type;
  policy.ssrc.value = 0;
  policy.key = provider.ConsumeBytes<uint8_t>(SRTP_MAX_KEY_LEN);
  policy.ekt = provider.ConsumeIntegralInRange<uint8_t>(0, SRTP_MAX_EKT_LEN);
  policy.window_size = provider.ConsumeIntegralInRange<uint16_t>(0, SRTP_MAX_WINDOW_SIZE);
  policy.cipher_type = provider.ConsumeIntegralInRange<uint8_t>(0, SRTP_MAX_CIPHER);
  policy.cipher_key_len = provider.ConsumeIntegralInRange<uint8_t>(0, SRTP_MAX_KEY_LEN);
  policy.auth_type = provider.ConsumeIntegralInRange<uint8_t>(0, SRTP_MAX_AUTH_TYPE);
  policy.auth_key_len = provider.ConsumeIntegralInRange<uint8_t>(0, SRTP_MAX_KEY_LEN);
  policy.auth_tag_len = provider.ConsumeIntegralInRange<uint8_t>(0, SRTP_MAX_TAG_LEN);
  policy.sec_serv = provider.ConsumeIntegralInRange<uint32_t>(0, SRTP_MAX_SEC_SERV);

  // Create a new SRTP session.
  srtp_ctx_t_ session;
  srtp_create(&session, &policy);

  int ret = srtp_stream_update(&session, &policy);
  if (ret != SRTP_OK) {
    srtp_dealloc(&session);
    return 0;
  }

  // Destroy the SRTP session.
  srtp_dealloc(&session);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
