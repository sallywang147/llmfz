Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <vector>

#include "srtp.h"

extern "C" {
#include <libsrtp.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t delta = stream.ConsumeIntegral<size_t>();
  const size_t est = stream.ConsumeIntegral<size_t>();
  std::vector<uint8_t> srtp_hdr = stream.ConsumeBytes<uint8_t>(
      stream.ConsumeIntegralInRange<size_t>(0, 1024));
  size_t pkt_octet_len = stream.ConsumeIntegral<size_t>();
  const size_t mki_size = stream.ConsumeIntegral<size_t>();
  const bool advance_packet_index = stream.ConsumeBool();

  struct srtp_ctx_t* ctx = srtp_init();
  struct srtp_stream_ctx_t* stream_ctx = srtp_create_stream(ctx);

  srtp_unprotect_aead(stream_ctx, delta, est,
                      reinterpret_cast<char*>(srtp_hdr.data()), &pkt_octet_len,
                      nullptr, mki_size, advance_packet_index);

  srtp_dealloc(ctx);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
