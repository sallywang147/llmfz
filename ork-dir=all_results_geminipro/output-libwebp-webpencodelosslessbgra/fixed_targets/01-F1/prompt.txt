Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "webp/encode.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const uint32_t width = stream.ConsumeIntegral<uint32_t>();
  const uint32_t height = stream.ConsumeIntegral<uint32_t>();
  const uint8_t bits_per_sample = stream.ConsumeIntegral<uint8_t>();
  const std::string input = stream.ConsumeRemainingBytesAsString();
  char* output = nullptr;
  size_t output_size = 0;
  const size_t ret = WebPEncodeLosslessBGRA(
      const_cast<char*>(input.c_str()), width, height, bits_per_sample, &output,
      &output_size);
  free(output);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
