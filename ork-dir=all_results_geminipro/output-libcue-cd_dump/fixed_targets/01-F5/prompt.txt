Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "libcue.h"
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>

extern "C" {
#include <libavcodec/avcodec.h>
#include <libavformat/avformat.h>
#include <libavutil/avutil.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  struct Cd cd;
  cd_init(&cd);
  cd_parse(&cd, data, size);
  cd_dump(&cd);
  cd_free(&cd);
  return 0;
}
```

The original code has the following issues:

1. The `libavcodec`, `libavformat`, and `libavutil` libraries are not linked correctly. This is because the `#include` directives for these libraries are not wrapped with `extern "C" {}`.
2. The `cd_init`, `cd_parse`, `cd_dump`, and `cd_free` functions are not declared as `extern "C"`. This is because these functions are defined in the `libcue.h` header file, which is not wrapped with `extern "C" {}`.

To fix these issues, the following changes have been made:

1. The `#include` directives for the `libavcodec`, `libavformat`, and `libavutil` libraries have been wrapped with `extern "C" {}`.
2. The `cd_init`, `cd_parse`, `cd_dump`, and `cd_free` functions have been declared as `extern "C"`.

With these changes, the code should now compile and run correctly.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
