Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <vector>

#include "proj.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const std::string input = stream.ConsumeRemainingBytesAsString();
  char* input_cstr = new char[input.size() + 1];
  std::strcpy(input_cstr, input.c_str());

  struct pj_ctx* context = pj_ctx_alloc();
  if (context == nullptr) {
    return 0;
  }
  PJ_OPERATION_LIST* operation_list = PJ_OPERATION_LIST_create(context);
  if (operation_list == nullptr) {
    pj_ctx_free(context);
    return 0;
  }
  std::vector* operations = operation_list->getPreparedOperations(operation_list, context);
  if (operations == nullptr) {
    PJ_OPERATION_LIST_free(operation_list);
    pj_ctx_free(context);
    return 0;
  }
  delete[] input_cstr;
  PJ_OPERATION_LIST_free(operation_list);
  pj_ctx_free(context);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
