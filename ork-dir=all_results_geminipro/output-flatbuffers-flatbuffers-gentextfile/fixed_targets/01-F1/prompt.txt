Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <string>

#include "flatbuffers/flatbuffers.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const std::string schema = stream.ConsumeRemainingBytesAsString();
  const std::string text = stream.ConsumeRemainingBytesAsString();
  const std::string file = stream.ConsumeRemainingBytesAsString();

  flatbuffers::Parser parser;
  parser.Parse(schema.c_str());

  std::string* text_out = new std::string();
  std::string* file_out = new std::string();
  char* result = flatbuffers::GenTextFile(&parser, text_out, file_out);

  delete text_out;
  delete file_out;

  free(result);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
