Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
The code has the following build issues:

1. The `mz.h`, `mz_strm.h`, `mz_strm_mem.h`, and `mz_zip.h` headers are not wrapped with `extern "C" {}`. This causes the linker to not be able to find the definitions for the functions and data structures declared in these headers.
2. The `mz_zip_open`, `mz_zip_locate_next_entry`, `mz_zip_entry_get_info`, and `mz_zip_close` functions are not declared in any of the included headers. This causes the compiler to not be able to find the definitions for these functions.

To fix these issues, the code can be modified as follows:

```c++
#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

extern "C" {
#include "mz.h"
#include "mz_strm.h"
#include "mz_strm_mem.h"
#include "mz_zip.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const std::string zip_data = stream.ConsumeRemainingBytesAsString();
  void *fuzz_stream = mz_stream_mem_create();
  if (!fuzz_stream) {
    return 0;
  }
  mz_stream_mem_set_buffer(fuzz_stream,
                           reinterpret_cast<const void*>(zip_data.data()),
                           zip_data.size());

  char* handle = mz_zip_open(fuzz_stream, MZ_OPEN_MODE_READ);
  if (!handle) {
    mz_stream_mem_delete(&fuzz_stream);
    return 0;
  }

  struct mz_zip_file_s file_info;
  int err = MZ_OK;
  while (err == MZ_OK) {
    err = mz_zip_locate_next_entry(handle, NULL, NULL);
    if (err == MZ_OK) {
      mz_zip_entry_get_info(handle, &file_info);
    }
  }

  mz_zip_close(handle);
  mz_stream_mem_delete(&fuzz_stream);
  return 0;
}
```

With these changes, the code should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
