Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include <gnutls/gnutls.h>

extern "C" {
#include <gnutls/gnutls.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const int close_type = stream.ConsumeIntegral<int>();
  gnutls_session_t* session = nullptr;  // Fix: Change session type to gnutls_session_t*
  gnutls_bye(session, close_type);
  return 0;
}
```

In the original code, the type of `session` was incorrect. It should be `gnutls_session_t*` instead of `gnutls_session_int*`. This caused the build error "error: ‘gnutls_bye’ was not declared in this scope".

The corrected code uses the correct type for `session`, which is `gnutls_session_t*`. This allows the code to build and run successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
