Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <iostream>
#include <string>

#include "cctz/civil_time.h"
#include "cctz/time_zone.h"

extern "C" {
#include "cctz/load_time_zone.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider fuzzed_data(data, size);

  cctz::time_zone::Impl *local = cctz::local_time_zone();
  std::string tz = fuzzed_data.ConsumeRandomLengthString();
  if (load_time_zone(tz, local)) {
    std::chrono::system_clock::time_point tp;
    std::string date_format = fuzzed_data.ConsumeRandomLengthString();
    std::string parse_format = fuzzed_data.ConsumeRandomLengthString();
    cctz::parse(parse_format, date_format, *local, &tp);

    const auto t1 = cctz::convert(cctz::civil_second(fuzzed_data.ConsumeIntegral<uint32_t>(), fuzzed_data.ConsumeIntegral<uint32_t>(), fuzzed_data.ConsumeIntegral<uint32_t>(), fuzzed_data.ConsumeIntegral<uint32_t>(), fuzzed_data.ConsumeIntegral<uint32_t>(), fuzzed_data.ConsumeIntegral<uint32_t>()), *local);
    std::string format = fuzzed_data.ConsumeRandomLengthString();
    cctz::format(format, t1, *local);
  }

  return 0;
}
```

The original code has the following issues:

1. The `cctz::parse` function is missing the `std::string` argument for the time zone.
2. The `cctz::convert` function is missing the `cctz::time_zone` argument.
3. The `cctz::format` function is missing the `cctz::time_zone` argument.

The fixed code adds the missing arguments to the `cctz::parse`, `cctz::convert`, and `cctz::format` functions.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
