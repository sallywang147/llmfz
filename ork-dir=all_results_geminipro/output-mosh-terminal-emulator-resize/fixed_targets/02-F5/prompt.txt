Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstddef>
#include <cstdint>
#include <sstream>

extern "C" {
#include "src/terminal/emulator.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  Terminal::Emulator emulator;
  std::stringstream ss;
  ss << "width=" << size << "\n";
  emulator.write(ss.str());
  emulator.resize(size, 1); // Call the resize function to fix the issue
  return 0;
}
```

The issue in the original code was that the `resize` function of the `Terminal::Emulator` class was not being called inside the `LLVMFuzzerTestOneInput` function. This resulted in the build error message indicating that the function was not called by the fuzz target.

To fix this issue, the `resize` function is called with the appropriate arguments inside the `LLVMFuzzerTestOneInput` function. In this case, the `resize` function is called with the `size` parameter, which is the size of the input data, and a height of 1. This ensures that the emulator is resized to the appropriate size before processing the input data.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
