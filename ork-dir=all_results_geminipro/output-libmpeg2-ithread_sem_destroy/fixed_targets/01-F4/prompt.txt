Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>

extern "C" {
#include <semaphore.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t sem_size = stream.ConsumeIntegralInRange<size_t>(0, 100);
  char* sem = static_cast<char*>(malloc(sem_size));
  stream.ConsumeBytes<char>(sem, sem_size);
  sem_t* semaphore = reinterpret_cast<sem_t*>(sem);
  int ret = sem_destroy(semaphore);
  free(sem);
  return ret;
}
```

Changes made:

1. Wrapped the `#include <semaphore.h>` directive with `extern "C" {}` to ensure proper linking.
2. Changed the function name from `ithread_sem_destroy` to `sem_destroy`, which is the correct function for destroying a semaphore.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
