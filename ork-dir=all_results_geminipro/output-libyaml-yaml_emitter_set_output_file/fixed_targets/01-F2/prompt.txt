Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "yaml.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const std::string file_name = stream.ConsumeRemainingBytesAsString();
  FILE* file = fopen(file_name.c_str(), "w");
  if (file == nullptr) {
    return 0;
  }

  yaml_emitter_t emitter;
  yaml_emitter_initialize(&emitter);
  yaml_emitter_set_output_file(&emitter, file);
  yaml_emitter_flush(&emitter);
  yaml_emitter_delete(&emitter);
  fclose(file);
  return 0;
}
```
The issue with the original code is that the `yaml_emitter_flush` function is missing. This function is necessary to flush the output buffer of the emitter to the file. Without this function, the YAML data will not be written to the file correctly.

To fix the issue, we need to add the `yaml_emitter_flush` function call before deleting the emitter. The corrected code is shown above.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
