Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <stdio.h>
#include <stdlib.h>

#include "cil.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);

  cil_db_t* db = cil_db_new();
  if (!db) {
    return 0;
  }

  // Generate random CIL AST.
  cil_tree_t* tree = nullptr;
  cil_parse_tree(provider.ConsumeBytesAsString(size).c_str(), &tree, db);

  // Generate random output file.
  char* filename = provider.ConsumeRandomLengthString().c_str();
  FILE* out = fopen(filename, "w");
  if (!out) {
    cil_db_free(db);
    return 0;
  }

  // Write CIL AST to the output file.
  cil_write_resolve_ast(out, db);

  // Clean up.
  fclose(out);
  cil_db_free(db);
  cil_tree_free(tree);

  return 0;
}
```

The original code has the following issues:

1. The `cil.h` header file is not included in the code.
2. The `cil_parse_tree`, `cil_write_resolve_ast`, `cil_db_new`, `cil_db_free`, and `cil_tree_free` functions are not declared in the code.

To fix these issues, we need to include the `cil.h` header file and declare the missing functions. We can do this by adding the following lines to the beginning of the code:

```c++
#include "cil.h"

extern "C" {
  cil_db_t* cil_db_new();
  void cil_db_free(cil_db_t* db);
  cil_tree_t* cil_parse_tree(const char* input, cil_db_t** db);
  void cil_write_resolve_ast(FILE* out, cil_db_t* db);
  void cil_tree_free(cil_tree_t* tree);
}
```

With these changes, the code should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
