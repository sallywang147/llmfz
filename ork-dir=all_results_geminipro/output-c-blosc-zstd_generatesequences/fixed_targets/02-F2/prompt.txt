Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include "zstd.h"

extern "C" {
#include "lz4hc.h"
}

extern "C" size_t LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t buffer_size = stream.ConsumeIntegralInRange<size_t>(1, 1024 * 1024);
  char* buffer = new char[buffer_size];
  const size_t sequences_size = stream.ConsumeIntegralInRange<size_t>(1, 1024 * 1024);
  char* sequences = new char[sequences_size];
  const size_t max_sequences = stream.ConsumeIntegralInRange<size_t>(1, 1024 * 1024);

  ZSTD_CCtx* cctx = ZSTD_createCCtx();
  LZ4HC_optimal_t* opt = LZ4HC_createOptimal();

  size_t result = ZSTD_generateSequences(cctx, opt, max_sequences, sequences, sequences_size);
  if (ZSTD_isError(result)) {
    printf("ZSTD_generateSequences returned an error: %s\n", ZSTD_getErrorName(result));
    goto cleanup;
  }

  result = ZSTD_compressCCtx(cctx, buffer, buffer_size, sequences, result);
  if (ZSTD_isError(result)) {
    printf("ZSTD_compressCCtx returned an error: %s\n", ZSTD_getErrorName(result));
    goto cleanup;
  }

cleanup:
  delete[] buffer;
  delete[] sequences;
  ZSTD_freeCCtx(cctx);
  LZ4HC_freeOptimal(opt);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
