Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <poll.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t num_pollfd = stream.ConsumeIntegralInRange<size_t>(0, 100);
  std::vector<pollfd> pollfd_vector(num_pollfd);

  for (size_t i = 0; i < num_pollfd; i++) {
    pollfd_vector[i].fd = stream.ConsumeIntegral<int>();
    pollfd_vector[i].events = stream.ConsumeIntegral<short>();
    pollfd_vector[i].revents = 0;
  }

  const int maxfds = stream.ConsumeIntegral<int>();
  poll(pollfd_vector.data(), num_pollfd, maxfds);
  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `void after_poll(struct pollfd * pfd, size_t npfd, int maxfds)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `void after_poll(struct pollfd * pfd, size_t npfd, int maxfds)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
