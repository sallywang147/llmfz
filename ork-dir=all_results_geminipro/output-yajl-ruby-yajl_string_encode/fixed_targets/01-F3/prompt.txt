Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstring>
#include <vector>

#include "yajl/yajl_gen.h"

extern "C" {
  int yajl_string_encode(yajl_buf* buf, const char* string, size_t len,
                         int htmlSafe);
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  const size_t max_string_size = provider.ConsumeIntegralInRange<size_t>(1, 1000);
  const size_t string_size = provider.ConsumeIntegralInRange<size_t>(0, max_string_size);
  std::vector<uint8_t> string_data = provider.ConsumeBytes<uint8_t>(string_size);
  char* string = reinterpret_cast<char*>(string_data.data());

  const size_t max_buffer_size = provider.ConsumeIntegralInRange<size_t>(1, 10000);
  const size_t buffer_size = provider.ConsumeIntegralInRange<size_t>(0, max_buffer_size);
  std::vector<uint8_t> buffer_data(buffer_size);
  yajl_buf buf = {buffer_data.data(), buffer_size, 0};

  const bool htmlSafe = provider.ConsumeBool();

  yajl_string_encode(&buf, string, string_size, htmlSafe);

  return 0;
}
```

The corrected code:
1. Included the necessary header file `<cstring>` for the `strlen` function.
2. Changed the `yajl_string_encode` function declaration to `extern "C"` to make it visible to the C++ compiler.
3. Corrected the `string_size` calculation to use `strlen` instead of `sizeof`.

With these changes, the code should compile and run correctly.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
