Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "flatbuffers/flatbuffers.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  flatbuffers::FlatBufferBuilder fbb;
  const size_t vector_size = stream.ConsumeIntegral<size_t>();
  std::vector<flatbuffers::Offset<void>> vector_data;
  for (size_t i = 0; i < vector_size; i++) {
    vector_data.push_back(fbb.CreateString(stream.ConsumeRemainingBytesAsString()));
  }
  auto vector_offset = fbb.CreateVector(vector_data);

  flatbuffers::JsonPrinter printer;
  const size_t indent = stream.ConsumeIntegral<size_t>();
  const std::string delimiter = stream.ConsumeRemainingBytesAsString();
  printer.SetIndent(indent);
  printer.SetDelimiter(delimiter.c_str());
  printer.PrintVector(vector_offset, flatbuffers::GetUByteType());

  return 0;
}
```
The issue here is that the `flatbuffers` library is not properly linked to the program. To fix this, we need to add the necessary linker flags when compiling the program.

Here's the corrected code with the necessary linker flags:

```bash
g++ -std=c++11 -I/path/to/flatbuffers/include -L/path/to/flatbuffers/lib -lflatbuffers fuzzer.cpp -o fuzzer
```

Make sure to replace `/path/to/flatbuffers/include` and `/path/to/flatbuffers/lib` with the actual paths to the Flatbuffers library's include and library directories, respectively.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
