Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <openssl/bio.h>
#include <openssl/cms.h>
#include <openssl/err.h>
#include <openssl/pem.h>
#include <openssl/x509.h>
#include <openssl/x509_vfy.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  // Parse CMS structure.
  BIO* bio = BIO_new_mem_buf(data, size);
  CMS_ContentInfo* cms = d2i_CMS_bio(bio, NULL);
  BIO_free(bio);
  if (!cms) {
    return 0;
  }

  // Parse certificates.
  STACK_OF(X509)* certs = sk_X509_new_null();
  while (stream.remaining_bytes() > 0) {
    std::string cert_pem = stream.ConsumeRemainingBytesAsString();
    BIO* cert_bio = BIO_new_mem_buf(cert_pem.data(), cert_pem.size());
    X509* cert = PEM_read_bio_X509(cert_bio, NULL, NULL, NULL);
    BIO_free(cert_bio);
    if (!cert) {
      sk_X509_pop_free(certs, X509_free);
      CMS_ContentInfo_free(cms);
      return 0;
    }
    sk_X509_push(certs, cert);
  }

  // Create X.509 store.
  X509_STORE* store = X509_STORE_new();
  X509_STORE_add_cert(store, sk_X509_value(certs, 0));

  // Verify CMS structure.
  int flags = CMS_NO_SIGNER_CERT_VERIFY;
  int ret = CMS_verify(cms, certs, store, NULL, NULL, flags);

  // Clean up.
  sk_X509_pop_free(certs, X509_free);
  CMS_ContentInfo_free(cms);
  X509_STORE_free(store);

  return ret;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
