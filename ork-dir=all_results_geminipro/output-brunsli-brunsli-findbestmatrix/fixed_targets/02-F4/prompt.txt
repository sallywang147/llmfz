Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <brunsli/decode.h>
#include <vector>

extern "C" {
#include <stddef.h>

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  std::vector<int> matrix(16);
  brunsli::FindBestMatrix(matrix.data(), false, nullptr);
  return 0;
}
}
```

The original code has the following issues:

* The `brunsli::FindBestMatrix` function is declared in the `brunsli` namespace, but it is called without the namespace qualifier. This will cause a compiler error.
* The `std::vector` class is declared in the `std` namespace, but it is used without the namespace qualifier. This will also cause a compiler error.

To fix these issues, the code has been modified as follows:

* The `brunsli::` namespace qualifier has been added to the call to the `brunsli::FindBestMatrix` function.
* The `std::` namespace qualifier has been added to the declaration of the `std::vector` class.

With these changes, the code should now compile and run correctly.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
