Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "lz4hc.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const std::string input_string = stream.ConsumeRemainingBytesAsString();
  char* input_data = const_cast<char*>(input_string.c_str());
  const size_t input_size = input_string.size();

  const size_t max_output_size = stream.ConsumeIntegralInRange<size_t>(
      0, input_size * 2);
  char* output_data = new char[max_output_size];
  const int compression_level = stream.ConsumeIntegralInRange<int>(0, 20);

  const int result = LZ4_compressHC2_limitedOutput(
      input_data, output_data, input_size, max_output_size, compression_level);

  delete[] output_data;

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
