Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <string>

extern "C" {
#include "nghttp2_session.h"
#include <string.h>

#include "nghttp2_test_helper.h"

void check_session_upgrade_internal(FuzzedDataProvider *data_provider) {
  nghttp2_session *session;
  char *buf1, *buf2;
  size_t bufsz1, bufsz2;
  int rv;

  session = nghttp2_session_new();
  nghttp2_session_set_stream_user_data(session, (void *)1);
  nghttp2_session_set_stream_user_data(session, (void *)2);

  /* Create a set of headers seeded with data from the fuzzer */
  bufsz1 = data_provider->ConsumeIntegralInRange(0, 1000);
  buf1 = (char *)data_provider->ConsumeBytes(bufsz1);

  bufsz2 = data_provider->ConsumeIntegralInRange(0, 1000);
  buf2 = (char *)data_provider->ConsumeBytes(bufsz2);

  /* Perform a set of operations with the fuzz data */
  rv = nghttp2_session_upgrade_internal(session, buf1, bufsz1, buf2);

  /* Cleanup */
  nghttp2_session_del(session);
  free(buf1);
  free(buf2);
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider data_provider(data, size);

  check_session_upgrade_internal(&data_provider);
  return 0;
}

} // extern C
```

The following changes were made to the code:

1. Added `free(buf1);` and `free(buf2);` to the `check_session_upgrade_internal` function to free the allocated memory for `buf1` and `buf2`. This is important to prevent memory leaks.

2. Wrapped the `#include` directives for the nghttp2 headers with `extern "C" {}` to ensure that the C++ compiler does not mangle the function names, which is necessary for linking with the C code.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
