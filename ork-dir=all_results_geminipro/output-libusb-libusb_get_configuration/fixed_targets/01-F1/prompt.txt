Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>

#include "libusb/libusb.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  struct libusb_device_handle *handle = nullptr;
  int configuration = 0;
  FuzzedDataProvider stream(data, size);
  int ret = libusb_get_device_list(nullptr, &handle);
  if (ret < 0) {
    return 0;
  }
  libusb_free_device_list(handle, 1);

  ret = libusb_init(nullptr);
  if (ret < 0) {
    return 0;
  }

  ret = libusb_open(handle, &handle);
  if (ret < 0) {
    libusb_exit(nullptr);
    return 0;
  }

  libusb_get_configuration(handle, &configuration);

  libusb_close(handle);
  libusb_exit(nullptr);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
