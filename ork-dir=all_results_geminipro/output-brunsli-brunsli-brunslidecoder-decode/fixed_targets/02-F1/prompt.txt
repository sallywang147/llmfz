Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <brunsli/brunsli_decode.h>
#include <fuzzer/FuzzedDataProvider.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  size_t input_size = provider.ConsumeIntegralInRange<size_t>(0, size);
  size_t output_size = provider.ConsumeIntegralInRange<size_t>(0, size);
  size_t actual_output_size = 0;
  char* output_data = nullptr;
  char* unused_output_data = nullptr;
  brunsli::BrunsliDecoder decoder;
  int result = decoder.Decode(nullptr, &input_size,
                             reinterpret_cast<char**>(&data), &output_size,
                             &output_data);
  if (result != 0) return 0;
  result = decoder.Decode(nullptr, &actual_output_size,
                             reinterpret_cast<char**>(&unused_output_data), &output_size,
                             &output_data);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
