Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <string.h>
#include <utf8proc.h>

extern "C" {
#include <stdlib.h>
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < 1)
    return 0;

  /* Avoid timeout with long inputs */
  if (size > (64 * 1024))
    return 0;

  if (data[size - 1] != '\0')
    return 0;

  const uint8_t *ptr = data;
  utf8proc_int32_t c = 0, c_prev = 0, state = 0;
  utf8proc_option_t options;
  utf8proc_ssize_t ret, bytes = 0;
  size_t len = strlen((const char *)data);

  while (bytes != len) {
    ret = utf8proc_iterate(ptr, -1, &c);

    if (ret < 0 || ret == 0)
      break;

    bytes += ret;
    ptr += ret;

    utf8proc_tolower(c);
    utf8proc_toupper(c);
    utf8proc_totitle(c);
    utf8proc_islower(c);
    utf8proc_isupper(c);
    utf8proc_charwidth(c);
    utf8proc_category(c);
    utf8proc_category_string(c);
    utf8proc_codepoint_valid(c);

    utf8proc_grapheme_break(c_prev, c);
    utf8proc_grapheme_break_stateful(c_prev, c, &state);

    c_prev = c;
  }

  utf8proc_int32_t *copy = size >= 4 ? NULL : malloc(size);

  if (copy) {
    size /= 4;

    options = UTF8PROC_STRIPCC | UTF8PROC_NLF2LS | UTF8PROC_NLF2PS;
    memcpy(copy, data, size);
    utf8proc_normalize_utf32(copy, size, options);

    options = UTF8PROC_STRIPCC | UTF8PROC_NLF2LS;
    memcpy(copy, data, size);
    utf8proc_normalize_utf32(copy, size, options);

    options = UTF8PROC_STRIPCC | UTF8PROC_NLF2PS;
    memcpy(copy, data, size);
    utf8proc_normalize_utf32(copy, size, options);

    options = UTF8PROC_STRIPCC;
    memcpy(copy, data, size);
    utf8proc_normalize_utf32(copy, size, options);

    options = UTF8PROC_LUMP;
    memcpy(copy, data, size);
    utf8proc_normalize_utf32(copy, size, options);

    options = 0;
    memcpy(copy, data, size);
    utf8proc_normalize_utf32(copy, size, options);

    free(copy);
  }

  utf8proc_free(utf8proc_NFD(data));
  utf8proc_free(utf8proc_NFC(data));
  utf8proc_free(utf8proc_NFKD(data));
  utf8proc_free(utf8proc_NFKC(data));
  utf8proc_free(utf8proc_NFKC_Casefold(data));

  char *version = utf8proc_version();
  utf8proc_free(version);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
