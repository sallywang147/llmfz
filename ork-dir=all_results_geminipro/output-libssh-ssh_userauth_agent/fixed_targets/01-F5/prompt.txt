Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <libssh/libssh.h>

extern "C" {
#include <libssh/libssh.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  ssh_session session = ssh_new();
  if (session == NULL) {
    return 0;
  }
  ssh_options_set(session, SSH_OPTIONS_HOST, "localhost");

  FuzzedDataProvider provider(data, size);
  size_t username_length = provider.ConsumeIntegralInRange<size_t>(0, 1024);
  std::string username = provider.ConsumeBytesAsString(username_length);

  int rc = ssh_userauth_agent(session, username.c_str());
  if (rc != SSH_AUTH_SUCCESS) {
    ssh_disconnect(session);
    ssh_free(session);
    return 0;
  }

  ssh_disconnect(session);
  ssh_free(session);

  return 0;
}
```

The original code has the following issues:

- The `ssh_userauth_agent` function is not declared in the `libssh.h` header. This is because the function is declared in the `libssh2.h` header.
- The `ssh_disconnect` and `ssh_free` functions are not declared in the `libssh.h` header. This is because these functions are declared in the `libssh2.h` header.

To fix these issues, the `#include <libssh/libssh.h>` line should be replaced with `#include <libssh2.h>`. Additionally, the `extern "C" {}` block should be removed, as it is not necessary when using the `libssh2.h` header.

The corrected code is shown below:

```c++
#include <fuzzer/FuzzedDataProvider.h>
#include <libssh2.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  ssh_session session = ssh2_new();
  if (session == NULL) {
    return 0;
  }
  ssh2_options_set(session, SSH2_OPTIONS_HOST, "localhost");

  FuzzedDataProvider provider(data, size);
  size_t username_length = provider.ConsumeIntegralInRange<size_t>(0, 1024);
  std::string username = provider.ConsumeBytesAsString(username_length);

  int rc = ssh2_userauth_agent(session, username.c_str());
  if (rc != SSH2_AUTH_SUCCESS) {
    ssh2_disconnect(session);
    ssh2_free(session);
    return 0;
  }

  ssh2_disconnect(session);
  ssh2_free(session);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
