Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include <gnutls/gnutls.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const std::string session_data = stream.ConsumeRemainingBytesAsString();
  gnutls_session_t session;
  gnutls_init(&session, GNUTLS_CLIENT);
  gnutls_set_default_priority(session);
  gnutls_certificate_allocate_credentials(&session);
  gnutls_credentials_set(session, GNUTLS_CRD_CERTIFICATE, session_data.c_str(),
                         session_data.size());
  const std::string data = stream.ConsumeRemainingBytesAsString();
  char seq[1024];
  size_t seq_size = sizeof(seq);
  gnutls_record_recv_seq(session, data.c_str(), data.size(),
                         seq, &seq_size);
  gnutls_deinit(session);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
