Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>

extern "C" {
#include <gnutls/gnutls.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  gnutls_session_int session;
  gnutls_init(&session, GNUTLS_SERVER);
  gnutls_priority_set_direct(&session, "NORMAL", NULL);

  gnutls_certificate_credentials_t x509_cred;
  gnutls_certificate_allocate_credentials(&x509_cred);

  gnutls_datum_t cert_data = {NULL, 0};
  gnutls_datum_t key_data = {NULL, 0};

  const std::string cert = stream.ConsumeRemainingBytesAsString();
  const std::string key = stream.ConsumeRemainingBytesAsString();

  cert_data.data = const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(cert.c_str()));
  cert_data.size = cert.size();
  key_data.data = const_cast<unsigned char*>(reinterpret_cast<const unsigned char*>(key.c_str()));
  key_data.size = key.size();

  gnutls_certificate_set_x509_key_file(&x509_cred, &cert_data, &key_data, GNUTLS_X509_FMT_PEM);

  gnutls_credentials_set(&session, GNUTLS_CRD_CERTIFICATE, &x509_cred);

  const size_t data_size = stream.ConsumeIntegralInRange<size_t>(0, 1024);
  char* data = new char[data_size];
  stream.ConsumeData(data, data_size);

  const size_t seq_size = stream.ConsumeIntegralInRange<size_t>(0, 1024);
  char* seq = new char[seq_size];
  stream.ConsumeData(seq, seq_size);

  size_t ret = gnutls_record_recv_seq(&session, data, data_size, seq);
  if (ret < 0) {
    fprintf(stderr, "gnutls_record_recv_seq returned %d\n", ret);
    return 0;
  }

  delete[] data;
  delete[] seq;
  gnutls_deinit(&session);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
