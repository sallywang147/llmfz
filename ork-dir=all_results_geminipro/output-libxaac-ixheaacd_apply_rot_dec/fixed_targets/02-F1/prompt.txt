Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <vector>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  struct ia_ps_dec_struct ps_dec;
  int* a = new int[stream.ConsumeIntegral<size_t>()];
  int* b = new int[stream.ConsumeIntegral<size_t>()];
  int* c = new int[stream.ConsumeIntegral<size_t>()];
  int* d = new int[stream.ConsumeIntegral<size_t>()];
  struct ia_sbr_tables_struct sbr_tables;
  short* e = new short[stream.ConsumeIntegral<size_t>()];

  ixheaacd_apply_rot_dec(&ps_dec, a, b, c, d, &sbr_tables, e);

  delete[] a;
  delete[] b;
  delete[] c;
  delete[] d;
  delete[] e;
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
