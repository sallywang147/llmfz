Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <vector>

#include <openssl/bio.h>
#include <openssl/cms.h>
#include <openssl/err.h>
#include <openssl/pem.h>
#include <openssl/stack.h>
#include <openssl/x509.h>
#include <openssl/x509v3.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  BIO* detached_data = BIO_new(BIO_s_mem());
  if (detached_data == nullptr) {
    return 0;
  }
  BIO_write(detached_data, stream.ConsumeRemainingBytes().data(),
            stream.ConsumeRemainingBytes().size());

  CMS_SignedData* sd = d2i_CMS_SignedData(nullptr, &data, size);
  if (sd == nullptr) {
    BIO_free(detached_data);
    return 0;
  }

  STACK_OF(X509)* scerts = sk_X509_new_null();
  if (scerts == nullptr) {
    BIO_free(detached_data);
    CMS_SignedData_free(sd);
    return 0;
  }

  X509_STORE* store = X509_STORE_new();
  if (store == nullptr) {
    BIO_free(detached_data);
    CMS_SignedData_free(sd);
    sk_X509_free(scerts);
    return 0;
  }

  STACK_OF(X509)* extra = sk_X509_new_null();
  if (extra == nullptr) {
    BIO_free(detached_data);
    CMS_SignedData_free(sd);
    sk_X509_free(scerts);
    X509_STORE_free(store);
    return 0;
  }

  STACK_OF(X509_CRL)* crls = sk_X509_CRL_new_null();
  if (crls == nullptr) {
    BIO_free(detached_data);
    CMS_SignedData_free(sd);
    sk_X509_free(scerts);
    X509_STORE_free(store);
    sk_X509_free(extra);
    return 0;
  }

  CMS_SignedData_verify(sd, detached_data, scerts, store, extra, crls, 0,
                        nullptr, nullptr);

  BIO_free(detached_data);
  CMS_SignedData_free(sd);
  sk_X509_free(scerts);
  X509_STORE_free(store);
  sk_X509_free(extra);
  sk_X509_CRL_free(crls);

  return 0;
}
```

The build error message is:
```
error: undefined reference to `sk_X509_CRL_new_null'
```
This error indicates that the function `sk_X509_CRL_new_null` is not defined in the code. To fix this, you need to include the header file that defines this function. In this case, the header file is `openssl/stack.h`.

To fix the issue, add the following line to the top of the code:
```
#include <openssl/stack.h>
```

After adding this line, the code should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
