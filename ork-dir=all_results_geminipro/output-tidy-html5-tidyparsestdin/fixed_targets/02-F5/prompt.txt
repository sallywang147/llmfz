Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstdio>
#include <cstdlib>
#include <cstring>

extern "C" {
#include <tidy.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  TidyDoc tdoc = tidyCreate();
  tidyOptSetBool(tdoc, TidyXhtmlOut, yes);
  tidyOptSetBool(tdoc, TidyNumEntities, yes);
  tidyOptSetInt(tdoc, TidyWrapAsp, 0);
  tidyOptSetInt(tdoc, TidyWrapJste, 0);
  tidyOptSetInt(tdoc, TidyWrapPhp, 0);
  tidyOptSetInt(tdoc, TidyWrapScriptlets, 0);
  tidyOptSetInt(tdoc, TidyWrapSection, 0);
  tidyParseBuffer(tdoc, (const char *)data, size);
  tidyParseStdin(tdoc);
  tidyRelease(tdoc);
  return 0;
}
```

The corrected code includes the `tidyParseStdin` function call, which was missing in the original code. This function is necessary to parse the input data from the standard input stream.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
