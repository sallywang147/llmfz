Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "tidy.h"
#include "tidybuffio.h"
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

extern "C" {
#include <libxml/parser.h>
#include <libxml/xmlwriter.h>
}

int tidyParseStdin(struct _TidyDoc *tdoc, const uint8_t *data, size_t size) {
  uint8_t decider;

  TidyBuffer fuzz_tinput;
  tidyBufInit(&fuzz_tinput);

  decider = **data;
  *data += 1;
  *size -= 1;
  switch (decider % 2) {
  case 0: {
    char filename[256];
    sprintf(filename, "/tmp/libfuzzer.%d", getpid());

    FILE *fp = fopen(filename, "wb");
    if (!fp) {
      return 0;
    }
    fwrite(data, size, 1, fp);
    fclose(fp);

    tidyParseFile(tdoc, filename);
    unlink(filename);
  } break;
  case 1: {
    char *inp = malloc(size + 1);
    inp[size] = '\0';
    memcpy(inp, data, size);
    tidyParseString(tdoc, inp);
    free(inp);
  }
  }

  tidyBufFree(&fuzz_tinput);

  return 0;
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  TidyDoc tdoc = tidyCreate();

  tidyParseStdin(tdoc, data, size);

  tidyRelease(tdoc);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
