Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

extern "C" {
#include "webp/encode.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  const int width = stream.ConsumeIntegralInRange<int>(1, 10000);
  const int height = stream.ConsumeIntegralInRange<int>(1, 10000);
  const int bits_per_sample = stream.ConsumeIntegralInRange<int>(1, 4);
  const float quality = stream.ConsumeFloatingPointInRange<float>(0.0, 100.0);

  std::vector<uint8_t> input_buffer(width * height * bits_per_sample);
  stream.ConsumeBytes<uint8_t>(input_buffer.data(), input_buffer.size());

  size_t output_size = 0;
  char* output_buffer = nullptr;
  WebPEncodeBGRA(reinterpret_cast<char*>(input_buffer.data()), width, height,
                 bits_per_sample, quality, &output_buffer, &output_size);
  free(output_buffer);

  return 0;
}
```

The code has the following issues:
- The header file `webp/encode.h` is not wrapped with `extern "C" {}`. This is necessary for the object linking to succeed, as the header file contains C functions that need to be accessible from C++.

The fixed code wraps the `#include "webp/encode.h"` directive with `extern "C" {}` to ensure that the C functions in the header file are properly linked.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
