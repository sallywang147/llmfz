Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <utf8proc.h>

extern "C" {
#include <stddef.h>
}

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < 1)
    return 0;

  /* Avoid timeout with long inputs */
  if (size > (64 * 1024))
    return 0;

  if (data[size - 1] != '\0')
    return 0;

  utf8proc_errmsg(size);

  return 0;
}
```

The error message is:

```
error: undefined reference to 'utf8proc_errmsg'
```

This error is caused by the fact that the `utf8proc_errmsg` function is declared in a C header file, but the code is compiled as C++. To fix this, we need to wrap the `#include` directive for the C header file with `extern "C" {}`. This tells the compiler to compile the code inside the braces as C code, even though the rest of the file is compiled as C++ code.

The fixed code is shown above.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
