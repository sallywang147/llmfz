Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <utf8proc.h>

extern "C" {
#include <string.h>

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < 1)
    return 0;

  /* Avoid timeout with long inputs */
  if (size > (64 * 1024))
    return 0;

  if (data[size - 1] != '\0')
    return 0;

  utf8proc_errmsg(size);

  return 0;
}
}
```

The issue is that the `strlen()` function is used without including the `string.h` header. To fix this, the `#include <string.h>` directive is added inside the `extern "C" {}` block. This ensures that the `strlen()` function is available to the `LLVMFuzzerTestOneInput()` function.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
