Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include "zstd.h"

extern "C" size_t LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t dest_capacity = stream.ConsumeIntegralInRange<size_t>(0, 1 << 20);
  char* dest = static_cast<char*>(std::malloc(dest_capacity));
  if (dest == nullptr) {
    return 0;
  }
  ZSTD_CCtx* const cctx = ZSTD_createCCtx();
  if (cctx == nullptr) {
    std::free(dest);
    return 0;
  }
  const size_t src_size = stream.ConsumeIntegralInRange<size_t>(0, 1 << 20);
  const char* src = reinterpret_cast<const char*>(stream.ConsumeBytes<uint8_t>(src_size).data());
  const size_t compressed_size =
      ZSTD_compressCCtx(cctx, dest, dest_capacity, src, src_size, 1);
  ZSTD_freeCCtx(cctx);
  std::free(dest);
  return compressed_size;
}
</code>

The code has the following build issues:
<error>
The target function `size_t ZSTD_compress2(struct ZSTD_CCtx_s * , char * , size_t , char * , size_t )` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `size_t ZSTD_compress2(struct ZSTD_CCtx_s * , char * , size_t , char * , size_t )` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
