Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "pw_tokenizer.h"

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "pw_tokenizer.h"

extern "C" {
#include <fuzzer/FuzzedDataProvider.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  pw::tokenizer::NestedMessageDetokenizer detokenizer;
  while (stream.remaining_bytes() > 0) {
    detokenizer.Process(stream.ConsumeIntegral<char>());
  }
  return 0;
}
```

The following changes were made to the code:

1. The header file `pw_tokenizer.h` was included twice. The first inclusion was removed.
2. The `#include` directive for the `fuzzer/FuzzedDataProvider.h` header file was wrapped with `extern "C" {}`.
3. The function `LLVMFuzzerTestOneInput` was declared as `extern "C"`.

With these changes, the code should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
