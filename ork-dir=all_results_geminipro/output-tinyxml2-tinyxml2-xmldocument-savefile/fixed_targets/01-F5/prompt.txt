Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <fuzzer/FuzzedDataProvider.h>
#include <tinyxml2.h>

extern "C" {
#include <stdio.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  std::string xml_string = provider.ConsumeRandomLengthString(size);
  tinyxml2::XMLDocument doc;
  doc.Parse(xml_string.c_str());
  doc.SaveFile("output.xml", true);
  return 0;
}
```

The original code has the following issues:

1. The `stdio.h` header is missing. This header is needed for the `printf` function.
2. The `tinyxml2.h` header is not wrapped with `extern "C" {}`. This is necessary for the object linking to succeed.

The fixed code includes the `stdio.h` header and wraps the `tinyxml2.h` header with `extern "C" {}`. This fixes the build issues and allows the code to compile and run successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
