Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstdint>
#include <cstring>
#include <cstdio>
#include <fmt/format.h>

#include "fuzzer-common.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  auto stream = FuzzedDataProvider(data, size);
  size_t len = stream.ConsumeIntegralInRange<size_t>(0, 1024);
  auto text = stream.ConsumeBytes<char>(len);
  fmt::print(stdout, text.data(), len);
  return 0;
}
```

The build error is caused by the use of `fmt::detail::print` without including the necessary header file. To fix the issue, we need to include the `fmt/format.h` header file.

The corrected code includes the `fmt/format.h` header file, which provides the `fmt::print` function. This allows the code to compile and run successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
