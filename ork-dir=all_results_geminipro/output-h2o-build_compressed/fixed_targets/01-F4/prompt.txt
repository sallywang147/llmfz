Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include "h2o.h"

#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <vector>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  struct st_ptls_compressed_certificate_entry_t entry;
  struct st_h2o_iovec_t iov;
  size_t iov_len = stream.ConsumeIntegral<size_t>();
  std::vector<uint8_t> iov_data = stream.ConsumeBytes<uint8_t>(iov_len);
  iov.base = reinterpret_cast<char*>(iov_data.data());
  iov.len = iov_len;
  size_t ocsp_status_len = stream.ConsumeIntegral<size_t>();
  std::vector<uint8_t> ocsp_status_data =
      stream.ConsumeBytes<uint8_t>(ocsp_status_len);
  char* ocsp_status = reinterpret_cast<char*>(ocsp_status_data.data());
  int ret = h2o_build_compressed(&entry, &iov, 1, ocsp_status, ocsp_status_len);
  if (ret != 0) {
    abort();
  }
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
