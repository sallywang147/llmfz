Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include <libthread_pool.h>

extern "C" {
#include <libthread_pool.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider provider(data, size);
  const size_t input_size = provider.ConsumeIntegralInRange<size_t>(0, 10000);
  std::vector<uint8_t> input_data = provider.ConsumeBytes<uint8_t>(input_size);
  char *input_data_ptr = reinterpret_cast<char *>(input_data.data());

  char *output = run_thread_pool_loop(input_data_ptr);
  free(output);

  return 0;
}
```

In this fixed code, the function name `run_thread_poll_loop` is corrected to `run_thread_pool_loop`. This is a common typo that can lead to undefined reference errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
