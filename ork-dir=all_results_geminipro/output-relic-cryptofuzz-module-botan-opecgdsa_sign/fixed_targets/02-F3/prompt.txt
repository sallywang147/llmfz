Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>

extern "C" {
#include "cryptofuzz/module/Botan.h"
#include "cryptofuzz/module/relic.h"
#include "cryptofuzz/operation/ECDSA_Sign.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  std::vector<uint8_t> key_bytes = stream.ConsumeBytes<uint8_t>(32);
  std::vector<uint8_t> message_bytes = stream.ConsumeBytes<uint8_t>(32);

  cryptofuzz::module::relic relic_module;
  cryptofuzz::module::Botan botan_module;
  cryptofuzz::operation::ECDSA_Sign ecdsa_sign_operation;

  cryptofuzz::module::Botan::OpECGDSA_Sign(
      nullptr, &relic_module, &ecdsa_sign_operation, key_bytes.data(),
      key_bytes.size(), message_bytes.data(), message_bytes.size());

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
