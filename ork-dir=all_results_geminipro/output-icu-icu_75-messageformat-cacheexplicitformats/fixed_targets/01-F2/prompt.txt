Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstring>
#include <iostream>

#include "fuzzer_utils.h"

#include "unicode/messageformat.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  if (size < 2)
    return 0;

  icu::StringPiece fuzzData(reinterpret_cast<const char *>(data), size);

  int status = 0;
  icu::MessageFormat fmt;
  fmt.cacheExplicitFormats(&status);
  if (U_FAILURE(status))
    return 0;

  std::string formatted;
  try {
    formatted = fmt.format(fuzzData, &status);
  } catch (const std::exception &e) {
    std::cerr << "Caught exception: " << e.what() << std::endl;
    return 0;
  }
  if (U_FAILURE(status))
    return 0;

  return EXIT_SUCCESS;
}
```

The original code was missing the `std::string` and `std::cerr` headers, which are necessary for the `std::string` and `std::cerr` objects to be used in the code.

The `std::exception` header is also missing, which is necessary for the `std::exception` object to be used in the catch block.

The `try` and `catch` blocks were also missing, which are necessary for catching the `std::exception` object.

The `formatted` variable was also missing, which is necessary for storing the formatted string.

The `status` variable was also missing, which is necessary for storing the status of the `format()` function.

The `if (U_FAILURE(status))` check was also missing, which is necessary for checking the status of the `format()` function.

The `return EXIT_SUCCESS;` statement was also missing, which is necessary for indicating that the function was successful.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
