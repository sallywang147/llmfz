Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <vector>

#include <gnutls/gnutls.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);

  gnutls_session_t session;
  gnutls_certificate_credentials_t x509_cred;
  gnutls_priority_t priority_cache;

  gnutls_global_init();
  gnutls_certificate_allocate_credentials(&x509_cred);
  gnutls_priority_init(&priority_cache, NULL, NULL);
  gnutls_init(&session, GNUTLS_CLIENT);

  // Set priority cache.
  gnutls_priority_set(session, priority_cache);

  // Set credentials.
  gnutls_credentials_set(session, GNUTLS_CRD_CERTIFICATE, x509_cred);

  // Set random data.
  std::vector<uint8_t> random_data = provider.ConsumeBytes<uint8_t>(16);
  gnutls_rnd_set(session, random_data.data(), random_data.size());

  // Set server name.
  std::string server_name = provider.ConsumeRemainingBytesAsString();
  gnutls_server_name_set(session, GNUTLS_NAME_DNS, server_name.c_str(),
                         server_name.size());

  // Perform handshake.
  int ret = gnutls_handshake(session);
  if (ret < 0) {
    // Handshake failed.
    gnutls_deinit(session);
    gnutls_certificate_free_credentials(x509_cred);
    gnutls_priority_deinit(priority_cache);
    gnutls_global_deinit();
    return 0;
  }

  // Clean up.
  gnutls_deinit(session);
  gnutls_certificate_free_credentials(x509_cred);
  gnutls_priority_deinit(priority_cache);
  gnutls_global_deinit();

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
