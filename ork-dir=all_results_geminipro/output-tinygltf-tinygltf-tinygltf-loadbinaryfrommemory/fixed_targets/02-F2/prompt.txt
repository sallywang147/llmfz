Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstdint>
#include <cstring>
#include <iostream>
#include <memory>
#include <vector>

#define STB_IMAGE_IMPLEMENTATION
#define STB_IMAGE_WRITE_IMPLEMENTATION
#define TINYGLTF_IMPLEMENTATION
#include "tiny_gltf.h"

extern "C" {
#include "tiny_gltf.h"
}

static void parse_intCoding4(const uint8_t *data, size_t size) {

  tinygltf::TinyGLTF ctx;
  tinygltf::Model model;
  std::string err;
  std::string warn;

  bool ret = ctx.LoadBinaryFromMemory(&model, &err, &warn,
                                      reinterpret_cast<char *>(const_cast<uint8_t *>(data)),
                                      size, /* base_dir */ "");
  (void)ret;
}

extern "C" int LLVMFuzzerTestOneInput(std::uint8_t const *data, std::size_t size) {
  parse_intCoding4(data, size);
  return 0;
}
```

The build issues are caused by the following reasons:

1. The `tiny_gltf.h` header is included twice, once with `#include` and once with `extern "C" {} #include`. This is not allowed and will cause a build error.

2. The `parse_intCoding4` function is declared as `static`, which means it is only visible within the current translation unit. However, the `LLVMFuzzerTestOneInput` function tries to call `parse_intCoding4` from a different translation unit, which is not allowed.

To fix these issues, we can remove the `static` keyword from the `parse_intCoding4` function declaration and wrap the `#include` directive for `tiny_gltf.h` with `extern "C" {}`. This will make the `parse_intCoding4` function visible to other translation units and allow the `LLVMFuzzerTestOneInput` function to call it.

The corrected code is shown above.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
