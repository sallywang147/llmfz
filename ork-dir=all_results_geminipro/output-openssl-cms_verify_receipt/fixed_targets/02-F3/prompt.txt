Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <openssl/cms.h>
#include <openssl/err.h>
#include <openssl/x509.h>
#include <openssl/x509v3.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <vector>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const uint8_t flags = stream.ConsumeIntegral<uint8_t>();
  const std::vector<uint8_t> rcms_bytes = stream.ConsumeRemainingBytes();
  const std::vector<uint8_t> ocms_bytes = stream.ConsumeRemainingBytes();
  const std::vector<uint8_t> certs_bytes = stream.ConsumeRemainingBytes();
  const std::vector<uint8_t> store_bytes = stream.ConsumeRemainingBytes();

  BIO* rcms_bio = BIO_new_mem_buf(rcms_bytes.data(), rcms_bytes.size());
  BIO* ocms_bio = BIO_new_mem_buf(ocms_bytes.data(), ocms_bytes.size());
  BIO* certs_bio = BIO_new_mem_buf(certs_bytes.data(), certs_bytes.size());
  BIO* store_bio = BIO_new_mem_buf(store_bytes.data(), store_bytes.size());

  CMS_ContentInfo* rcms = d2i_CMS_ContentInfo_bio(rcms_bio, NULL);
  CMS_ContentInfo* ocms = d2i_CMS_ContentInfo_bio(ocms_bio, NULL);
  STACK_OF(X509)* certs = d2i_X509_stack_bio(certs_bio, NULL);
  X509_STORE* store = d2i_X509_STORE_bio(store_bio, NULL);

  int result = CMS_verify_receipt(rcms, ocms, certs, store, flags);

  BIO_free(rcms_bio);
  BIO_free(ocms_bio);
  BIO_free(certs_bio);
  BIO_free(store_bio);

  CMS_ContentInfo_free(rcms);
  CMS_ContentInfo_free(ocms);
  sk_X509_free(certs);
  X509_STORE_free(store);

  return 0;
}
```

The following changes were made:

- The `sk_X509_free` function is defined in the `openssl/x509v3.h` header file. This header file was not included in the original code, so it was added.
- The `CMS_verify_receipt` function is defined in the `openssl/cms.h` header file. This header file was not included in the original code, so it was added.
- The `X509_STORE_free` function is defined in the `openssl/x509.h` header file. This header file was not included in the original code, so it was added.

With these changes, the code should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
