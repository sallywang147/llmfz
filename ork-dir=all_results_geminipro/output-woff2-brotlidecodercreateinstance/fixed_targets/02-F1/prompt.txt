Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>

#include "brotli/decode.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  BrotliDecoderState* state = BrotliDecoderCreateInstance(
      nullptr, nullptr, nullptr);
  if (state == nullptr) {
    return 0;
  }

  size_t total_output = 0;
  while (stream.remaining_bytes() > 0) {
    size_t consumed = 0;
    size_t produced = 0;
    if (!BrotliDecoderDecompressStream(
            state, stream.ConsumeRemainingBytes().data(),
            stream.remaining_bytes(), &consumed, &produced, nullptr)) {
      break;
    }
    total_output += produced;
  }

  BrotliDecoderDestroyInstance(state);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
