Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include "usbredirparser.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  struct usbredirparser *parser =
      reinterpret_cast<struct usbredirparser *>(stream.ConsumeIntegral<size_t>());
  const size_t data_size = stream.ConsumeIntegral<size_t>();
  struct usb_redir_iso_packet_header *header =
      reinterpret_cast<struct usb_redir_iso_packet_header *>(
          stream.ConsumeIntegral<size_t>());
  std::string data_str = stream.ConsumeRemainingBytesAsString();
  char *data_ptr = data_str.data();
  const int status = stream.ConsumeIntegral<int>();
  usbredirparser_send_interrupt_packet(parser, data_size, header, data_ptr,
                                      status);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
