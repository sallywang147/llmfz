Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>

#include <brotli/decode.h>

extern "C" {
#include <fuzzer/FuzzedDataProvider.h>
}

// Entry point for LibFuzzer.
int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider fuzzed_data(data, size);
  BrotliBitReader reader;
  BrotliInitBitReader(&reader, data, size);

  size_t num_bits = 0;
  while (BrotliSafeReadBits32Slow(&reader, 1, &num_bits) == 0) {
    // Do nothing.
  }

  return 0;
}
```

The following changes were made to the code:

* The `#include` directive for `fuzzer/FuzzedDataProvider.h` is wrapped in `extern "C"` to ensure that the C++ compiler does not mangle the function names.
* The `BrotliInitBitReader` function is declared as `extern "C"` to ensure that it is not mangled by the C++ compiler.

With these changes, the code should build and run successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
