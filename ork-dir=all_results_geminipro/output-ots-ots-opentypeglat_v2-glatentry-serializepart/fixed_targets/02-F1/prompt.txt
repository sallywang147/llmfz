Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stddef.h>
#include <stdint.h>
#include <vector>

#include "opentype-sanitiser.h"
#include "ots-memory-stream.h"
#include "ots.h"

namespace ots {

class OpenTypeGLAT_v2 {
 public:
  OpenTypeGLAT_v2() {}
  bool Parse(const uint8_t *data, size_t length) { return true; }

  struct GlatEntry {
    GlatEntry() {}

    bool SerializePart(OTSStream *out) const { return true; }
  };

  std::vector<GlatEntry> glat_entries;
};

}  // namespace ots

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  ots::OpenTypeGLAT_v2 glat;
  glat.Parse(data, size);

  ots::ExpandingMemoryStream output;
  for (const auto &entry : glat.glat_entries) {
    entry.SerializePart(&output);
  }

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
