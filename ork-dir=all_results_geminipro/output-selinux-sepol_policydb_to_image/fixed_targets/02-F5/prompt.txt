Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <sepol/policydb/policydb.h>

extern "C" {
#include <sepol/policydb/policydb.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  sepol_handle_t *handle = sepol_handle_create();
  if (!handle) {
    return 1;
  }
  sepol_policydb_t *policydb = sepol_policydb_create();
  if (!policydb) {
    sepol_handle_destroy(handle);
    return 1;
  }
  char *newdata = nullptr;
  size_t newlen = 0;

  int rc = sepol_policydb_read(handle, policydb, data, size);
  if (rc != 0) {
    sepol_policydb_free(policydb);
    sepol_handle_destroy(handle);
    return 1;
  }
  rc = sepol_policydb_to_image(handle, policydb, &newdata, &newlen);
  if (rc != 0) {
    sepol_policydb_free(policydb);
    sepol_handle_destroy(handle);
    return 1;
  }

  sepol_policydb_free(policydb);
  sepol_handle_destroy(handle);
  free(newdata);

  return 0;
}
```

The original code had a few issues:

- The `sepol_policydb_read()` function returns an integer indicating success or failure. The code didn't check the return value and assumed that the function always succeeded.
- The `sepol_policydb_to_image()` function also returns an integer indicating success or failure. The code didn't check the return value and assumed that the function always succeeded.
- The `sepol_handle_create()` and `sepol_policydb_create()` functions can return `nullptr` if they fail. The code didn't check the return values and assumed that the functions always succeeded.

The fixed code checks the return values of all the functions and handles errors gracefully. It also frees all the allocated memory before returning.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
