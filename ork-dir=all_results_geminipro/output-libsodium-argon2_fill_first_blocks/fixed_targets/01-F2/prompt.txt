Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include "argon2.h"

extern "C" {
#include "argon2.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  Argon2_Context context;
  memset(&context, 0, sizeof(Argon2_Context));

  context.outlen = stream.ConsumeIntegralInRange<uint32_t>(16, 1024);
  context.version = stream.ConsumeIntegralInRange<uint32_t>(0, 0x10);
  context.type = stream.ConsumeIntegralInRange<uint32_t>(0, 0x40);
  context.threads = stream.ConsumeIntegralInRange<uint32_t>(1, 1024);
  context.lanes = stream.ConsumeIntegralInRange<uint32_t>(1, 1024);
  context.memory_cost = stream.ConsumeIntegralInRange<uint32_t>(1, 0x1000000);
  context.time_cost = stream.ConsumeIntegralInRange<uint32_t>(1, 0x1000000);

  const std::string password = stream.ConsumeRemainingBytesAsString();
  const std::string salt = stream.ConsumeRemainingBytesAsString();

  char blockhash[context.outlen];
  argon2_fill_first_blocks(blockhash, &context);

  return 0;
}
```

The build error is caused by the missing declaration of the `argon2_fill_first_blocks` function. To fix this, the header file `argon2.h` needs to be wrapped with `extern "C" {}`.

The corrected code is shown above.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
