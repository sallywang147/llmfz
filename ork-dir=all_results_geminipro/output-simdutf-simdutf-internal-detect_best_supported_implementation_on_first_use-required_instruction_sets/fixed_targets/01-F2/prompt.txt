Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>

#include "simdutf/internal/detect_best_supported_implementation_on_first_use.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  simdutf::internal::detect_best_supported_implementation_on_first_use::required_instruction_sets(
      reinterpret_cast<simdutf::internal::unsupported_implementation*>(
          &stream.ConsumeIntegral<uintptr_t>()));
  return 0;
}
```

The original code has the following issues:

* The header `<fuzzer/FuzzedDataProvider.h>` is not wrapped with `extern "C" {}`. This is necessary because the header is written in C++ and the function `LLVMFuzzerTestOneInput` is written in C.
* The function `simdutf::internal::detect_best_supported_implementation_on_first_use::required_instruction_sets` is not declared in the header `simdutf/internal/detect_best_supported_implementation_on_first_use.h`. This means that the linker cannot find the function when it tries to link the object file.

To fix these issues, the following changes have been made:

* The header `<fuzzer/FuzzedDataProvider.h>` is wrapped with `extern "C" {}`.
* The function `simdutf::internal::detect_best_supported_implementation_on_first_use::required_instruction_sets` is declared in the header `simdutf/internal/detect_best_supported_implementation_on_first_use.h`.

With these changes, the code should now compile and link successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
