Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <ft2build.h>
#include FT_FREETYPE_H
#include <stdint.h>
#include <stdlib.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  FuzzedDataProvider fdp(data, size);

  FT_Library library;
  if (FT_Init_FreeType(&library)) {
    return 0;
  }

  FT_Face face;
  if (FT_New_Memory_Face(library, data, size, 0, &face)) {
    FT_Done_FreeType(library);
    return 0;
  }

  FT_GlyphSlot slot = face->glyph;
  FT_Size size;
  if (FT_New_Size(face, &size)) {
    FT_Done_Face(face);
    FT_Done_FreeType(library);
    return 0;
  }

  while (fdp.remaining_bytes() > 0) {
    int glyph_index = fdp.ConsumeIntegral<int32_t>();
    int load_flags = fdp.ConsumeIntegral<int32_t>();
    FT_Load_Glyph(face, glyph_index, load_flags);
    FT_Render_Glyph(slot, FT_RENDER_MODE_NORMAL);
  }

  FT_Done_Size(size);
  FT_Done_Face(face);
  FT_Done_FreeType(library);
  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `int tt_glyph_load(struct FT_GlyphSlotRec_ * slot, struct FT_SizeRec_ * size, int glyph_index, int load_flags)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `int tt_glyph_load(struct FT_GlyphSlotRec_ * slot, struct FT_SizeRec_ * size, int glyph_index, int load_flags)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
