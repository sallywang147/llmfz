Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <vector>

#include "zdict.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const size_t dict_size = stream.ConsumeIntegralInRange<size_t>(0, 1 << 16);
  const size_t train_size = stream.ConsumeIntegralInRange<size_t>(0, 1 << 16);
  const int compression_level = stream.ConsumeIntegralInRange<int>(-1, 12);
  const ZDICT_legacy_params_t params = {0};

  std::vector<char> dict(dict_size);
  stream.ConsumeBytes(dict.data(), dict_size);

  std::vector<char> train(train_size);
  stream.ConsumeBytes(train.data(), train_size);

  size_t train_result = ZDICT_trainFromBuffer_legacy(
      dict.data(), dict_size, train.data(), &train_size, compression_level,
      &params);
  if (ZDICT_isError(train_result)) {
    abort();
  }

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
