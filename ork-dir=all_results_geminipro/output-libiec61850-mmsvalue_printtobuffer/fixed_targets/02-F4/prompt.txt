Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdio.h>
#include <stdlib.h>

#include "hal_thread.h"
#include "iec61850_server.h"

extern "C" {
#include "MmsValue.h"
}

int LLVMFuzzerTestOneInput(const char *data, size_t size) {
  int out;
  MmsValue *value = NULL;
  value = MmsValue_decodeMmsData(data, 0, size, &out);

  if (value != NULL) {
    char *buffer = (char *)malloc(1000);
    MmsValue_printToBuffer(value, buffer, 1000);
    free(buffer);
    MmsValue_delete(value);
  }

  return 0;
}
```

The only issue with the given code is that the `MmsValue` library is not properly linked to the program. To fix this, we need to add the appropriate linker flags when compiling the program.

For example, if you are using GCC, you can add the following flag to the compilation command:

```
-lMmsValue
```

This will tell the linker to link the program with the `MmsValue` library.

Once you have added the appropriate linker flags, the program should compile and run without errors.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
