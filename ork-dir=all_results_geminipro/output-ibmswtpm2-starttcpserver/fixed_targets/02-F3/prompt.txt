Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstdint>
#include <cstdio>
#include <cstdlib>

#include "TcpServer.h"

extern "C" {
#include "TcpServer.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  int port_number = 0;
  int port_number_platform = 0;
  StartTcpServer(&port_number, &port_number_platform);
  return 0;
}
```

The original code had the following issues:

* The header file `TcpServer.h` was included twice, once with and once without the `extern "C"` wrapper. This caused a conflict when linking the object files, as the linker could not determine which definition of the functions and variables in `TcpServer.h` to use.
* The function `StartTcpServer` was declared with the `extern "C"` wrapper, but the definition of the function in `TcpServer.h` was not wrapped with `extern "C"`. This caused a linker error, as the linker could not find a definition for the function `StartTcpServer` that matched the declaration.

To fix these issues, the code was modified as follows:

* The header file `TcpServer.h` was included only once, with the `extern "C"` wrapper. This ensures that there is only one definition of the functions and variables in `TcpServer.h`, and that the linker can find the correct definition for the function `StartTcpServer`.
* The definition of the function `StartTcpServer` in `TcpServer.h` was wrapped with `extern "C"`. This ensures that the linker can find the correct definition for the function `StartTcpServer` that matches the declaration.

With these changes, the code should now compile and link successfully.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
