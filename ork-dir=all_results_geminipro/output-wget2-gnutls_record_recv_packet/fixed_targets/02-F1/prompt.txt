Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include <gnutls/gnutls.h>

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  gnutls_session_int session;
  gnutls_init(&session, GNUTLS_CLIENT);
  gnutls_set_default_priority(&session);

  struct mbuffer_st *packet = nullptr;
  size_t packet_size = provider.ConsumeIntegralInRange<size_t>(0, 1<<20);
  auto packet_data = provider.ConsumeBytes<unsigned char>(packet_size);
  gnutls_record_recv_packet(&session, &packet);
  gnutls_record_recv(&session, packet_data.data(), packet_data.size());
  gnutls_deinit(&session);
  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
