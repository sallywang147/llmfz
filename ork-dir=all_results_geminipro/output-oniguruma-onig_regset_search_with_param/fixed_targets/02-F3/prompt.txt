Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <cstring>
#include <string>

#include "oniguruma.h"

extern "C" {
#include <onigposix.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);
  const std::string regex = stream.ConsumeRemainingBytesAsString();
  OnigRegSetStruct* set = onig_regset_new();
  if (set == nullptr) {
    return 0;
  }
  const int r = onig_regset_compile(set, regex.c_str(), regex.c_str() + regex.size(),
                                  ONIG_OPTION_DEFAULT, ONIG_ENCODING_UTF8,
                                  ONIG_SYNTAX_DEFAULT, &stream);
  if (r != ONIG_NORMAL) {
    onig_regset_delete(set);
    return 0;
  }
  const std::string text = stream.ConsumeRemainingBytesAsString();
  OnigMatchParamStruct* mps = onig_match_param_new();
  int rmatch_pos[10];
  const int r2 = onig_regset_search_with_param(set, text.c_str(),
                                             text.c_str() + text.size(),
                                             text.c_str(), text.c_str() + text.size(),
                                             ONIG_OFFSET_BY_INDEX, ONIG_OPTION_DEFAULT,
                                             &mps, rmatch_pos);
  onig_match_param_free(mps);
  onig_regset_delete(set);
  return 0;
}
```

The original code has the following issues:
1. The function `onig_regset_compile` is declared with a return type of `int`, but the code uses it as if it returned a `void`. This is incorrect and will lead to a compiler error.
2. The function `onig_regset_search_with_param` is declared with a return type of `int`, but the code uses it as if it returned a `void`. This is incorrect and will lead to a compiler error.

To fix these issues, the code has been modified to use the correct return types for these functions. Additionally, the `extern "C"` directive has been added to the `#include` directive for the `onigposix.h` header file. This is necessary because the `onigposix.h` header file contains C functions, and the code is being compiled as C++.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
