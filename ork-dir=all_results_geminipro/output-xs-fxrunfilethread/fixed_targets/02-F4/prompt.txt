Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <string>

#include "fxRunner.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider provider(data, size);
  const std::string input = provider.ConsumeRemainingBytesAsString();
  char * input_c_str = strdup(input.c_str());
  char * output = fxRunFileThread(input_c_str);
  free(input_c_str);
  free(output);
  return 0;
}
```

The corrected code includes the necessary header file `fxRunner.h` and defines the function `fxRunFileThread`. The `fxRunFileThread` function is defined in a separate source file, which is included in the build. This ensures that the function is available to the linker when it builds the executable.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
