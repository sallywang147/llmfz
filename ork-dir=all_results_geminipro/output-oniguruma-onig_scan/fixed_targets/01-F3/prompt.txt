Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstring>
#include <cstdlib>
#include <vector>

#include "oniguruma.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  // Create a regex pattern buffer.
  OnigUChar* pattern =
      reinterpret_cast<OnigUChar*>(stream.ConsumeBytes<uint8_t>(size).data());
  OnigUChar* pattern_end = pattern + stream.ConsumeIntegral<size_t>();
  OnigRegex reg;
  OnigOptionType options = ONIG_OPTION_DEFAULT;
  OnigEncoding enc = ONIG_ENCODING_UTF8;
  int r = onig_new(&reg, pattern, pattern_end, options, enc, ONIG_SYNTAX_DEFAULT,
                  nullptr, nullptr);
  if (r != ONIG_NORMAL) {
    return 0;
  }

  // Create a region to store the results of the search.
  OnigRegion* region = onig_region_new();

  // Create a string to search.
  const size_t input_size = stream.ConsumeIntegralInRange<size_t>(0, size);
  std::vector<uint8_t> input = stream.ConsumeBytes<uint8_t>(input_size);
  OnigUChar* input_str =
      reinterpret_cast<OnigUChar*>(stream.ConsumeBytes<uint8_t>(size).data());
  OnigUChar* input_end = input_str + input_size;

  // Perform the search.
  r = onig_search(&reg, input_str, input_end, region, options);
  if (r >= 0) {
    // Print the results of the search.
    for (int i = 0; i < region->num_regs; i++) {
      OnigUChar* beg = input_str + region->beg[i];
      OnigUChar* end = input_str + region->end[i];
      printf("Match %d: %.*s\n", i, end - beg, beg);
    }
  }

  // Clean up.
  onig_region_free(region);
  onig_free(&reg);

  return 0;
}
</code>

The code has the following build issues:
<error>
The target function `int onig_scan(struct re_pattern_buffer * reg, char * str, char * end, struct re_registers * region, int option, func_type * scan_callback, char * callback_arg)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `int onig_scan(struct re_pattern_buffer * reg, char * str, char * end, struct re_registers * region, int option, func_type * scan_callback, char * callback_arg)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
