Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>
#include <string>
#include <vector>

#include "cryptofuzz.h"

extern "C" {
#include <botan/botan.h>
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  std::optional<std::string> key = stream.ConsumeRemainingBytesAsString();
  cryptofuzz::module::BearSSL* bearssl =
      new cryptofuzz::module::BearSSL(stream.ConsumeIntegral<uint8_t>());
  cryptofuzz::operation::ECDSA_Sign* ecdsa_sign =
      new cryptofuzz::operation::ECDSA_Sign(stream.ConsumeIntegral<uint8_t>());

  cryptofuzz::module::Botan::OpECGDSA_Sign(key, bearssl, ecdsa_sign);
  return 0;
}

extern "C" void cryptofuzz::module::Botan::OpECGDSA_Sign(
    const std::optional<std::string>& key,
    cryptofuzz::module::BearSSL* bearssl,
    cryptofuzz::operation::ECDSA_Sign* ecdsa_sign) {
  // Implementation of the function
  // ...
}
```

The following changes were made to the code:

1. The `cryptofuzz::module::Botan::OpECGDSA_Sign` function is declared as `extern "C"` to make it visible to the C++ compiler.
2. The implementation of the `cryptofuzz::module::Botan::OpECGDSA_Sign` function is added to the code.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
