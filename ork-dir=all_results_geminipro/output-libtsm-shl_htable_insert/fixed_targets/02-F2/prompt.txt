Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <vector>

#include "shl_htable.h"

extern "C" {
#include "fuzzer_support.h"
}

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  struct shl_htable *htable = shl_htable_new(1024, 0.75);
  if (htable == NULL) {
    return 0;
  }

  FuzzedDataProvider provider(data, size);
  while (provider.remaining_bytes() > 0) {
    size_t hash = provider.ConsumeIntegral<size_t>();
    size_t obj_size = provider.ConsumeIntegralInRange<size_t>(0, 1024);
    std::vector<char> obj(obj_size);
    provider.ConsumeBytes<char>(obj.data(), obj_size);
    shl_htable_insert(htable, obj.data(), hash);
  }

  shl_htable_free(htable);

  return 0;
}
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
