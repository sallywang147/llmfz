Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

#include "../cJSON.h"

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size); /* required by C89 */

int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {
  cJSON *json;

  if (size <= 1)
    return 0;
  if (data[size - 1] != '\0')
    return 0;

  json = cJSON_ParseWithLength((char *)data, size - 1);

  if (json == NULL)
    return 0;

  cJSON_Delete(json);

  return 0;
}

#ifdef __cplusplus
}
#endif
```

The missing declaration of the `LLVMFuzzerTestOneInput` function has been added to the top of the file, before the `#include` directives. This declaration tells the compiler that the function exists and what its parameters are, so that it can properly link the function to the rest of the program.
</code>

The code has the following build issues:
<error>

</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
