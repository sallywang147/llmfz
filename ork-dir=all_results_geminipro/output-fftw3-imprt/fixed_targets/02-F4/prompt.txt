Given the following C++ program and its build error message, fix the code to achieve the original functionality.

If a function is missing, fix it by including the related libraries.

If the error contains "undefined reference to", this means one or more of the header <code>#include</code> directives need to be wrapped with <code>extern "C" {}</code> for the object linking to succeed. You must fix this by rewriting the relevant <code>#include</code> and wrapping it with <code>extern "C" {}</code>.

Below is the code needs to be built:
<code>
#include <fuzzer/FuzzedDataProvider.h>

#include <cstddef>
#include <cstdint>
#include <cstdlib>

#include "planner.h"

extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
  FuzzedDataProvider stream(data, size);

  struct planner_s ego;
  ego.x = stream.ConsumeIntegral<int>();
  ego.y = stream.ConsumeIntegral<int>();
  ego.theta = stream.ConsumeIntegral<int>();
  ego.v = stream.ConsumeIntegral<int>();
  ego.psi = stream.ConsumeIntegral<int>();

  struct scanner_s sc;
  sc.num_readings = stream.ConsumeIntegral<int>();
  sc.readings = new double[sc.num_readings];
  for (int i = 0; i < sc.num_readings; i++) {
    sc.readings[i] = stream.ConsumeIntegral<double>();
  }

  int result = planner(&ego, &sc);
  delete[] sc.readings;
  return result;
}
```

The issues and fixes are as follows:

1. The error message indicates that `planner` is undefined. This is because the function is declared in the header file `planner.h`, but it is not defined in the source file. To fix this, you need to add the definition of the function to the source file.

2. The error message also indicates that `planner` is not declared in the current scope. This is because the function is declared in the header file `planner.h`, but it is not included in the source file. To fix this, you need to add the following line to the top of the source file:

```c++
#include "planner.h"
```

After making these changes, the code should compile and run correctly.
</code>

The code has the following build issues:
<error>
The target function `int imprt(struct planner_s * ego, struct scanner_s * sc)` was not called by the fuzz target `LLVMFuzzerTestOneInput`.YOU MUST CALL FUNCTION `int imprt(struct planner_s * ego, struct scanner_s * sc)` INSIDE FUNCTION `LLVMFuzzerTestOneInput`.
</error>

Fix code:
1. Consider the possible solution for the issues listed above.
2. Apply the solutions to the original code.
It's important to show the complete code, not only the fixed line.
<solution>
